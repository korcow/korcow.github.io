<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[복사하기]]></title>
      <url>/2017/11/01/%EB%B3%B5%EC%82%AC%ED%95%98%EA%B8%B0/</url>
      <content type="html"><![CDATA[<div class="video-container"><iframe src="//www.youtube.com/embed/SSu822Lgta8" frameborder="0" allowfullscreen></iframe></div>
<hr>
<h1 id="cp-복사하기"><a href="#cp-복사하기" class="headerlink" title="cp(복사하기)"></a>cp(복사하기)</h1><p>리눅스에서 파일을 복사하는 명령입니다.<br>파일 하나만 복사할 수도 있도 여러개를 복사할 수도 있습니다.<br>물론 디렉토리도 복사할 수 있습니다.</p>
<ul>
<li>파일하나 복사<ul>
<li><code>cp abc.txt anydir</code> abc.txt 파일을 현재위치의 anydir/abc.txt 로 복사</li>
<li><code>cp abc.txt anydir/cde.txt</code> 이름을 바꾸어 저장할 수도 있습니다.</li>
</ul>
</li>
<li>여러개의 파일을 복사<ul>
<li><code>cp abc.txt bcd.txt anydir</code> 여러개의 파일을 직접 지정해서 복사 할 수 있습니다.</li>
<li><code>cp * anydir</code> 모든 파일을 anydir로 복사합니다. 와일드 카드 사용법을 참고하세요.</li>
<li><code>cp *.txt anydir</code> 모든 .txt로 끝나는 파일을 anydir로 복사합니다.</li>
<li><code>cp *[[:alpha:]a][].txt anydir</code> 모든 .txt로 끝나는 파일을 anydir로 복사합니다.</li>
</ul>
</li>
<li>디렉토리를 복사<ul>
<li><code>cp -R sodir anydir</code> 현재 경로의 sodir디렉토리및 하위 디렉토리 까지  anydir로 복사합니다.</li>
</ul>
</li>
</ul>
<h2 id="파일과-디렉토리"><a href="#파일과-디렉토리" class="headerlink" title="파일과 디렉토리"></a>파일과 디렉토리</h2><p>리눅스에서는 엄밀히 디렉토리라는 것이 없습니다 편의상 그렇게 부르는것 뿐입니다. 장치나 디렉토리나 모두 파일로 간주 합니다. 다만 파일의 특성이 있는 겁니다. 리눅스에서 디렉토리라고 부르는 파일의 특성은 자식파일을 갖을 수 있습니다. 자신의 권한과 소유권을 자식에게 승계 합니다. 자식 파일을 갖는 파일은 생성시 mkdir명령으로 생성합니다. ls의 <code>-l</code> 옵션으로 특성을 확인 할 수 있습니다. ls는 파일의 리스트를 확인 하는 프로그램입니다. 앞으로 편의상 디렉토리로 부를 겁니다. ^^;</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$ ``ls -l``</div><div class="line">합계 24</div><div class="line">drwxr-xr-x. 2 root   root      20 11월  1 15:17 anyfolder</div><div class="line">-rw-r--r--. 1 root   root    6072 11월  1 14:48 cp.doc</div><div class="line">-rw-rw-r--. 1 korcow korcow 13439 10월 28 09:33 ls.doc</div><div class="line"></div><div class="line">$ touch aaa</div><div class="line">$ mkdir aaa</div><div class="line">mkdir: `aaa` 디렉토리를 만들 수 없습니다: 파일이 있습니다</div></pre></td></tr></table></figure>
<p>cp 명령을 사용하다 에러가 나면 man page를 확인하세요. 대부분 권한, 소유권, 하위에 디렉토리 여부, 소프트링크 관련 에러 입니다.<br>복사가 힘들다고 불평하지 마세요. 보안의 강화 때문입니다. 소중한 자료를 아무나 허락 없이 가져가면 안되죠…</p>
<h3 id="cp-한글-man-page"><a href="#cp-한글-man-page" class="headerlink" title="cp 한글 man page"></a>cp 한글 man page</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div></pre></td><td class="code"><pre><div class="line">CP(1)                       General Commands Manual                      CP(1)</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">NAME</div><div class="line">       cp - 파일 복사</div><div class="line"></div><div class="line">SYNOPSIS</div><div class="line">       cp [options] source dest</div><div class="line">       cp [options] source... directory</div><div class="line">       Options:</div><div class="line">       [-abdfilprsuvxPR]  [-S  backup-suffix]  [-V &#123;numbered,existing,simple&#125;]</div><div class="line">       [--backup] [--no-dereference]  [--force]  [--interactive]  [--one-file-</div><div class="line">       system]   [--preserve]  [--recursive]  [--update]  [--verbose]  [--suf‐</div><div class="line">       fix=backup-suffix]       [--version-control=&#123;numbered,existing,simple&#125;]</div><div class="line">       [--archive] [--parents] [--link] [--symbolic-link] [--help] [--version]</div><div class="line"></div><div class="line">DESCRIPTION</div><div class="line">       이 문서는 더이상 최신 정보를 담고 있지않다.  그래서,  몇몇 틀릴  경우도</div><div class="line">       있고,  부족한  경우도  있을  것이다.  완전한 매뉴얼을  원하면,  Texinfo</div><div class="line">       문서를 참조하기 바란다.</div><div class="line"></div><div class="line">       이  매뉴얼 페이지는 cp 명령의 GNU  버전에  대한  것이다.  마지막 명령행</div><div class="line">       인자로 경로가 지정되면, cp 명령은  지정한  source  파일들을  그  경로로</div><div class="line">       안으로  복사한다.   한편  명령행  인자로  두개의  파일 이름이 사용되면,</div><div class="line">       첫번째 파일을 두번째 파일로  복사한다.   마지막  명령행  인자가  경로가</div><div class="line">       아니고, 두개 이상의 파일이 지정되면, 오류 메시지를 보여준다. 초기값으로</div><div class="line">       경로는 복사하지 않는다.</div><div class="line"></div><div class="line">   OPTIONS</div><div class="line">       -a, --archive</div><div class="line">              원본 파일의 속성, 링크 정보들을 그대로 유지하면서 복사한다.   이</div><div class="line">              옵션은 -dpR 옵션과 같은 역활을 한다.</div><div class="line"></div><div class="line">       -b, --backup</div><div class="line">              복사할  대상이  이미  있어,  이것을 덮어쓰거나 지울경우에 대비해</div><div class="line">              백업본을 만든다.</div><div class="line"></div><div class="line">       -d, --no-dereference</div><div class="line">              만약 복사할 원본이 심블릭 파일이면, cp 명령은 그  심블릭  대상이</div><div class="line">              되는  파일을  복사한다.  이렇게  하지  않고, 단지 그 심블릭 파일</div><div class="line">              자체를 심블릭 정보와 함께 복사하고 할 때, 이 옵션을 사용한다.</div><div class="line"></div><div class="line">       -f, --force</div><div class="line">              만약 복사 대상 파일이 이미 있으면 강제로 지우고 복사한다.</div><div class="line"></div><div class="line">       -i, --interactive</div><div class="line">              만약 복사 대상 파일 이미 있으면 사용자에게 어떻게 처리 할 것인지</div><div class="line">              물어보는 프롬프트를 나타나게 한다.</div><div class="line"></div><div class="line">       -l, --link</div><div class="line">              하드링크  형식으로  복사한다.  물론  하드  링크형식이기에 경로는</div><div class="line">              복사할 수 없다.</div><div class="line"></div><div class="line">       -P, --parents</div><div class="line">              원본 파일에 지정을 경로와 같이 했을 경우, 그  경로  그대로  복사</div><div class="line">              된다.   이때는  대상으로  사용될  수 있는 것은 경로 이름이어야만</div><div class="line">              한다.  예를  들어,  ``cp  --parents  a/b/c  existing_dir``  명령이</div><div class="line">              사용된다면, 이것의 결과는 existing_dir/a/b/c 이런 식이 된다.</div><div class="line"></div><div class="line">       -p, --preserve</div><div class="line">              원본  파일의  소유주,  그룹,  권한, 시간정보들이 그대로 보존되어</div><div class="line">              복사된다.</div><div class="line"></div><div class="line">       -r     일반 파일이면, 그냥 복사되고, 만약 원본이 경로면, 그 경로와 함께</div><div class="line">              경로 안에 있는 모든 하위경로, 파일들이 복사된다.</div><div class="line"></div><div class="line">       -s, --symbolic-link</div><div class="line">              경로가  아닌  일반 파일을 심블릭 링크 형식으로 복사한다.  이때는</div><div class="line">              복사할 원본 파일 이름은 절대경로(``/``로 시작하는  경로)로  지정된</div><div class="line">              파일이름이어야  한다.   심블릭  링크를  지원하지 않는 시스템에서</div><div class="line">              이옵션을 사용할 경우에는 오류 메시지를 보여준다.</div><div class="line"></div><div class="line">       -u, --update</div><div class="line">              복사할 대상이 이미 있는데, 이  파일의  변경  날짜가  같거나,  더</div><div class="line">              최근의 것이면 복사하지 않는다.</div><div class="line"></div><div class="line">       -v, --verbose</div><div class="line">              각 파일의 복사 상태를 자세히 보여준다.</div><div class="line"></div><div class="line">       -x, --one-file-system</div><div class="line">              원복과 대상 파일의 파일 시스템이 다를 경우에는 복사하지 않는다.</div><div class="line"></div><div class="line">       -R, --recursive</div><div class="line">              경로를  복사할  경우에는 그 안에 포함된 모든 하위경로와 파일들을</div><div class="line">              모두 복사한다.</div><div class="line"></div><div class="line">       --help 도움말을 보여주고 마친다.</div><div class="line"></div><div class="line">       --version</div><div class="line">              버전 정보를 보여주고 마친다.</div><div class="line"></div><div class="line">       -S, --suffix backup-suffix</div><div class="line">              만약에 복사 대상이 이미  있어,  백업을  해야할  경우에  그  백업</div><div class="line">              파일에서  사용할  파일 이름의 꼬리 문자를 지정한다.  이것은 이미</div><div class="line">              지정되어 있는 SIMPLE_BACKUP_SUFFIX 환경  변수를  무시하게  된다.</div><div class="line">              만약  이  환경변수도  지정되어  있지  않고,  이  옵션도 사용하지</div><div class="line">              않는다면, 초기값으로 Emacs과 같이 ``~`` 문자를 사용한다.</div><div class="line"></div><div class="line">       -V, --version-control &#123;numbered,existing,simple&#125;</div><div class="line">              백업하는 방법을 지정하는데, 이 옵션은 이미  지정되어  있는  VER‐</div><div class="line">              SION_CONTROL 환경 변수를 무시한다.  만약 이 환경 변수도 지정되어</div><div class="line">              있지 않고, 이 옵션도 사용하지 않는다면, 초기값으로  ``existing``을</div><div class="line">              사용한다.   여기서 사용하는 백업방법은 GNU Emacs의 ``version-con‐</div><div class="line">              trol`` 값과 같다.  아래와 같이 보다  짧은  지시어들도  사용될  수</div><div class="line">              있다.  여기서 사용될 수 있는 백업 방법은 아래와 같다.</div><div class="line"></div><div class="line">              ``t`` 또는 ``numbered``</div><div class="line">                     항상 번호 있는 백업본을 만든다.</div><div class="line"></div><div class="line">              ``nil`` or ``existing``</div><div class="line">                     대상 파일이 이미 있을 경우에만 백업본을 만든다.</div><div class="line"></div><div class="line">              ``never`` or ``simple``</div><div class="line">                     간단한 백업을 만듬.</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">FSF                           GNU File Utilities                         CP(1)</div><div class="line">---</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> Centos </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Centos </tag>
            
            <tag> cp </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CtrlP 플러그인]]></title>
      <url>/2017/10/31/CtrlP-%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8/</url>
      <content type="html"><![CDATA[<h2 id="기본사용법"><a href="#기본사용법" class="headerlink" title="기본사용법"></a>기본사용법</h2><ul>
<li><code>Ctrl+p</code>를 누르면 하단에 파일검색 모드가 열립니다.</li>
<li><code>Ctrl+f</code>를 누르면 모드가 바뀝니다. 현재열린 버퍼 &gt; 파일 &gt; 전체</li>
<li><code>Ctrl+j</code>, <code>Ctrl+k</code> 아래, 위로 이동(파일선택)</li>
</ul>
<h2 id="Command-line에서는-아래와-같이"><a href="#Command-line에서는-아래와-같이" class="headerlink" title="Command-line에서는 아래와 같이"></a>Command-line에서는 아래와 같이</h2><ul>
<li>Run :CtrlP or :CtrlP [starting-directory] to invoke CtrlP in find file mode.</li>
<li>Run :CtrlPBuffer or :CtrlPMRU to invoke CtrlP in find buffer or find MRU file mode.</li>
<li>Run :CtrlPMixed to search in Files, Buffers and MRU files at the same time.</li>
</ul>
<h3 id="Check-help-ctrlp-commands-and-help-ctrlp-extensions-for-other-commands"><a href="#Check-help-ctrlp-commands-and-help-ctrlp-extensions-for-other-commands" class="headerlink" title="Check :help ctrlp-commands and :help ctrlp-extensions for other commands."></a>Check :help ctrlp-commands and :help ctrlp-extensions for other commands.</h3><h2 id="Once-CtrlP-is-open"><a href="#Once-CtrlP-is-open" class="headerlink" title="Once CtrlP is open:"></a>Once CtrlP is open:</h2><ul>
<li>Press <code>&lt;F5&gt;</code> to purge the cache for the current directory to get new files, remove deleted files and apply new ignore options.</li>
<li>Press <code>&lt;c-f&gt;</code> and <code>&lt;c-b&gt;</code> to cycle between modes.</li>
<li>Press <code>&lt;c-d&gt;</code> to switch to filename only search instead of full path.</li>
<li>Press <code>&lt;c-r&gt;</code> to switch to regexp mode.</li>
<li>Use <code>&lt;c-j&gt;</code>, <code>&lt;c-k&gt;</code> or the arrow keys to navigate the result list.</li>
<li>Use <code>&lt;c-t&gt;</code> or <code>&lt;c-v&gt;</code>, <code>&lt;c-x&gt;</code> to open the selected entry in a new tab or in a new split.</li>
<li>Use <code>&lt;c-n&gt;</code>, <code>&lt;c-p&gt;</code> to select the next/previous string in the prompt’s history.</li>
<li>Use <code>&lt;c-y&gt;</code> to create a new file and its parent directories.</li>
<li>Use <code>&lt;c-z&gt;</code> to mark/unmark multiple files and <code>&lt;c-o&gt;</code> to open them.</li>
</ul>
<h3 id="Run-help-ctrlp-mappings-or-submit-in-CtrlP-for-more-mapping-help"><a href="#Run-help-ctrlp-mappings-or-submit-in-CtrlP-for-more-mapping-help" class="headerlink" title="Run :help ctrlp-mappings or submit ? in CtrlP for more mapping help."></a>Run :help ctrlp-mappings or submit ? in CtrlP for more mapping help.</h3><ul>
<li>Submit two or more dots .. to go up the directory tree by one or multiple levels.</li>
<li>End the input string with a colon : followed by a command to execute it on the opening file(s):<ul>
<li>Use :25 to jump to line 25.</li>
<li>Use :diffthis when opening multiple files to run :diffthis on the first 4 files.</li>
</ul>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> Vim </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Vim </tag>
            
            <tag> vundle </tag>
            
            <tag> ctrlp </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[shell이란]]></title>
      <url>/2017/10/31/shell%EC%9D%B4%EB%9E%80/</url>
      <content type="html"><![CDATA[<p>리눅스 시스템이 부팅이 완료되고 로그인을 하면 커서가 깜빡이며 명령 수행을 대기합니다. 이것을 shell prompt 라고합니다.<br>shell은 interpreter 입니다. 명령을 해석하고 올바른 명령이라면 kernel로 명령을 전달하고 처리 합니다.</p>
<p>shell이 interpreter라고 했습니다.</p>
<p>컴파일러는 명령을 모두 해석해서 한번에 처리합니다.<br>인터프리터는 명령을 한줄씩 해석해서 처리 합니다.</p>
<p>둘다 컴퓨터 언어 이기 때문에 변수, 상수, 자료형, 연산자, 예약어, 조건문, 반복문, 함수, 배열등이 존재 합니다.</p>
<p>shell의 내부명령어는 예약어 입니다. cd, pwd, type, bg, fg 등…</p>
<p>언어 이기 때문에 계산도 가능합니다.</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$echo</span> $((1+1))</div><div class="line">2</div><div class="line">$</div></pre></td></tr></table></figure>
<p>사칙연산과 우선순위도 있습니다.<br>프로그래밍도 가능합니다.<br>bash script programming 부분에서 프로그래밍을 다루고 지금은 shell은 인터프리터라는 것만 기억 하시면 됩니다. 컴퓨터를 켜면 커서가 깜빡이는데 우리가 입력하는 것은 프로그램 명령이구나 이정도만 기억 하시면 됩니다.</p>
]]></content>
      
        <categories>
            
            <category> Centos </category>
            
        </categories>
        
        
        <tags>
            
            <tag> shell </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[와일드카드]]></title>
      <url>/2017/10/31/%EC%99%80%EC%9D%BC%EB%93%9C%EC%B9%B4%EB%93%9C/</url>
      <content type="html"><![CDATA[<div class="video-container"><iframe src="//www.youtube.com/embed/SSu822Lgta8" frameborder="0" allowfullscreen></iframe></div>
<hr>
<h2 id="와일드카드"><a href="#와일드카드" class="headerlink" title="와일드카드"></a>와일드카드</h2><table>
<thead>
<tr>
<th>문자</th>
<th>설명</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>*</code></td>
<td>모든 문자 0개 이상</td>
</tr>
<tr>
<td><code>?</code></td>
<td>문자하나 반드시 1문자</td>
</tr>
<tr>
<td><code>[characters]</code></td>
<td>characters 문자 집합에 포함된 1문자</td>
</tr>
<tr>
<td><code>[!characters]</code></td>
<td>characters 문자 집합에 포함 되지 않은 1문자</td>
</tr>
<tr>
<td><code>[[:class:]]</code></td>
<td>알파벳과 숫자를 지정</td>
</tr>
<tr>
<td><code>[:alnum:]</code></td>
<td>알파벳과 숫자를 지정</td>
</tr>
<tr>
<td><code>[:alpha:]</code></td>
<td>알파벳 지정</td>
</tr>
<tr>
<td><code>[:digit:]</code></td>
<td>숫자를 지정</td>
</tr>
<tr>
<td><code>[:lower:]</code></td>
<td>모든 소문자</td>
</tr>
<tr>
<td><code>[:upper:]</code></td>
<td>모든 대문자</td>
</tr>
</tbody>
</table>
<p>ls 명령을 사용해 와일드 카드를 사용해 보겠습니다.<br>ls명령과 와일드카드 명령 2개를 같이 사용하는 겁니다.</p>
<h3 id="테스트용-디렉토리와-파일-만들기"><a href="#테스트용-디렉토리와-파일-만들기" class="headerlink" title="테스트용 디렉토리와 파일 만들기"></a>테스트용 디렉토리와 파일 만들기</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$cd</span> ~</div><div class="line"><span class="variable">$mkdir</span> myTest</div><div class="line"><span class="variable">$cd</span> <span class="built_in">test</span></div><div class="line"><span class="variable">$touch</span> a&#123;a..d&#125;&#123;a..c&#125;&#123;1..3&#125;.txt</div></pre></td></tr></table></figure>
<h3 id="ls-a"><a href="#ls-a" class="headerlink" title="ls a*"></a><code>ls a*</code></h3><p>a로 시작하는 모든 파일을 보여줍니다.</p>
<h3 id="ls-a-txt"><a href="#ls-a-txt" class="headerlink" title="ls a*.txt"></a><code>ls a*.txt</code></h3><p>a로 시작하고 .txt로 끝나는 모든 파일을 보여줍니다.</p>
<h3 id="ls-b-txt"><a href="#ls-b-txt" class="headerlink" title="ls ?b?.txt"></a><code>ls ?b?.txt</code></h3><p>첫문자는 아무 문자나 와도 되고 두번째는 b 세번째는 아무문자 마지막에 .txt로 끝나는 파일을 보여줍니다.</p>
<h3 id="ls-txt"><a href="#ls-txt" class="headerlink" title="ls *.txt"></a><code>ls *.txt</code></h3><p>.txt로 끝나는 모든 파일을 보여줍니다.</p>
<h3 id="ls-digit-1-txt"><a href="#ls-digit-1-txt" class="headerlink" title="ls *[[:digit:]1].txt"></a><code>ls *[[:digit:]1].txt</code></h3><p>1.txt앞에 숫자 1만 있으면 그앞에 어떤 문자가 와도 모두 보여줍니다.</p>
<h3 id="ls-abc"><a href="#ls-abc" class="headerlink" title="ls *[abc]*"></a><code>ls *[abc]*</code></h3><p>파일명 중간이 abc로 된 파일을 모두 보여줍니다.</p>
]]></content>
      
        <categories>
            
            <category> Centos </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 와일드카드 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ls]]></title>
      <url>/2017/10/31/ls/</url>
      <content type="html"><![CDATA[<div class="video-container"><iframe src="//www.youtube.com/embed/SSu822Lgta8" frameborder="0" allowfullscreen></iframe></div>
<hr>
<h1 id="외부명령어"><a href="#외부명령어" class="headerlink" title="외부명령어"></a>외부명령어</h1><h2 id="ls"><a href="#ls" class="headerlink" title="ls"></a>ls</h2><p>디렉토리의 파일 목록을 보는 명령입니다. 파일의 목록을 볼때 어떻게 확인할지 옵션을 주어 파일을 볼수 있습니다.</p>
<p>ls –help 또는 man ls로 설명을 볼 수 있습니다.</p>
<p>내부명령의 파이프라인과 리다이렉션을 이용해 목록의 출력 방향을 조정 하거나 리스트 결과를 다른 프로그램의 인자로 전달 할 수 있습니다.</p>
<ul>
<li><code>ls</code>: 디렉토리의 파일 리스트를 출력합니다.</li>
<li><code>ls a*</code>: a로 시작하는 모든 파일을 보여 달라는 명령입니다.</li>
<li><code>ls a???</code>: a로 시작하고 문자의 길이가 총4개인 파일만 보여 달라는 명령입니다.</li>
<li><code>ls -a</code>: 숨김 파일도 보여 줍니다.</li>
<li><code>ls -l</code>: 리스트의 형태로 목록을 보여 줍니다.</li>
<li><code>ls -al</code>: 옵션을 조합해서 사용할 수 있습니다. 리스트의 형태로 숨김파일까지 보여 달라는 명령입니다.</li>
</ul>
<p>ls 명령은 <strong>find, grep, more, sed, vim</strong> 등 외부 명령과 조합 해서 사용할 수 있어야 합니다. 단순히 파일 목록만 확인 하는 것이 아니라 파일을 찾은후 파일에 문자열을 추가, 삭제, 실행 등의 작업을 할 수 있습니다. 이부분은 해당 명령에서 다루도록 하겠습니다.</p>
<p>리눅의 명령은 유닉스, macos의 명령과 100% 같지 않습니다. 기본적인 기능은 거의 같지만 옵션이 틀릴수 있으니 동작이 안된다면 해당 OS의 man page를 참고해야 합니다.</p>
<hr>
<p>참고로 아래는 centos의 한글 man page 입니다.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div></pre></td><td class="code"><pre><div class="line">LS(1)               General Commands Manual               LS(1)</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">NAME</div><div class="line">       ls, dir, vdir - 경로의 내용을 나열한다.</div><div class="line"></div><div class="line">SYNOPSIS</div><div class="line">       ls   [-abcdfgiklmnpqrstuxABCFGLNQRSUX1]  [-w  cols]  [-T</div><div class="line">       cols]  [-I  pattern]  [--all]  [--escape]  [--directory]</div><div class="line">       [--inode] [--kilobytes] [--numeric-uid-gid] [--no-group]</div><div class="line">       [--hide-control-chars]       [--reverse]        [--size]</div><div class="line">       [--width=cols]      [--tabsize=cols]      [--almost-all]</div><div class="line">       [--ignore-backups] [--classify]  [--file-type]  [--full-</div><div class="line">       time]   [--ignore=pattern]  [--dereference]  [--literal]</div><div class="line">       [--quote-name]                             [--recursive]</div><div class="line">       [--sort=&#123;none,time,size,extension&#125;] [--format=&#123;long,ver‐</div><div class="line">       bose,commas,across,vertical,single-column&#125;]</div><div class="line">       [--time=&#123;atime,access,use,ctime,status&#125;]        [--help]</div><div class="line">       [--version]                     [--color[=&#123;yes,no,tty&#125;]]</div><div class="line">       [--colour[=&#123;yes,no,tty&#125;]] [name...]</div><div class="line"></div><div class="line">DESCRIPTION</div><div class="line">       이  문서는  더이상  최신  정보를 담고 있지않다.  그래서,</div><div class="line">       몇몇 틀릴  경우도  있고,  부족한  경우도  있을   것이다.</div><div class="line">       완전한 매뉴얼을 원하면, Texinfo 문서를 참조하기 바란다.</div><div class="line"></div><div class="line">       이  매뉴얼 페이지는 ls 명령의 GNU  버전에  대한  것이다.</div><div class="line">       dir과 vdir 명령은 ls 명령의 심블릭 파일로 그 출력 양식을</div><div class="line">       다르게 보여주는 풀그림들이다.  인자로 파일이름이나, 경로</div><div class="line">       이름이 사용된다.  경로의 내용은 초기값으로 알파벳 순으로</div><div class="line">       나열된다.    ls의   경우는   출력이   표준   출력(터미날</div><div class="line">       화면)이면, 세로로 정열된  것이  가로로  나열된다.   다른</div><div class="line">       방식의  출력이면  한줄에 하나씩 나열된다.  dir의 경우는,</div><div class="line">       초기값으로 ls와 같으나, 모든  출력에서  세로로  정열해서</div><div class="line">       가로로   나열한다.(다른  방식의  출력에서도  항상  같음)</div><div class="line">       vdir의 경우는, 초기값으로 목록을 자세히 나열한다.</div><div class="line"></div><div class="line">   OPTIONS</div><div class="line">       -a, --all</div><div class="line">              경로안의 모든 파일을 나열한다. ``.``으로  시작하는</div><div class="line">              파일 들도 포함된다.</div><div class="line"></div><div class="line">       -b, --escape</div><div class="line">              알파벳  형식을  사용하는  파일  이름안에서 그래픽</div><div class="line">              문자가 아닌 문자들을 사용한다. C와 같이  여덟가지</div><div class="line">              역슬래쉬 문자(`\&apos;)와 함께 오는 문자들을 사용한다.</div><div class="line"></div><div class="line">       -c, --time=ctime, --time=status</div><div class="line">              파일  최근  변경  시간에 따라 정열 해서 보여준다.</div><div class="line">              자세한 나열(-l 옵션)이면,  그  파일의  최근  변경</div><div class="line">              시간을 보여준다.</div><div class="line"></div><div class="line">       -d, --directory</div><div class="line">              경로안의   내용을   나열하지   않고,   그  경로를</div><div class="line">              보여준다.(이것은   쉘    스크립트에서    유용하게</div><div class="line">              쓰인다.)</div><div class="line"></div><div class="line">       -f     경로  내용을  정열하지  않는다:  이것은  디스크에</div><div class="line">              저장된 순으로  보여준다.   -a와  -U  옵션과  같은</div><div class="line">              뜻이며, -l, -s, -t.  옵션과 반대뜻이다.</div><div class="line"></div><div class="line">       --full-time</div><div class="line">              시간을 간략히 표시하지 않고, 모두 보여 준다.</div><div class="line"></div><div class="line">       -g     무시: 유닉스 호환을 위해서 있음.</div><div class="line"></div><div class="line">       -i, --inode</div><div class="line">              파일 왼쪽에 색인 번호를 보여준다.</div><div class="line"></div><div class="line">       -k, --kilobytes</div><div class="line">              파일  크기가  나열되면,  kb  단위로 보여준다.  이</div><div class="line">              옵션은 POSIXLY_CORRECT 환경 변수를 무시한다.</div><div class="line"></div><div class="line">       -l, --format=long, --format=verbose</div><div class="line">              파일 나열에 있어, 파일 형태,  사용권한,  하드링크</div><div class="line">              번호,   owner   이름,   group  이름,  파일  크기,</div><div class="line">              시간(따로   지정하지   않으면   파일이   만들어진</div><div class="line">              날자다)을  자세하게 나열한다.  시간은 여섯달 이전</div><div class="line">              것이면, 시간이 생략되고, 파일의 연도가 포함된다.</div><div class="line"></div><div class="line">       -m, --format=commas</div><div class="line">              파일을 가로로 나열한다.  가로로  나열할  수  있는</div><div class="line">              만큼 최대한 나열한다.</div><div class="line"></div><div class="line">       -n, --numeric-uid-gid</div><div class="line">              이름의 나열에서 UID,GID 번호를 사용한다.</div><div class="line"></div><div class="line">       -p     파일 형태를 지시하는 문자를 각파일에 추가한다.</div><div class="line"></div><div class="line">       -q, --hide-control-chars</div><div class="line">              파일 이름에 그래픽 문자가 아닌 것이 있으면, ``?``로</div><div class="line">              표시한다.</div><div class="line"></div><div class="line">       -r, --reverse</div><div class="line">              정열 순서를 내림차순으로 한다.</div><div class="line"></div><div class="line">       -s, --size</div><div class="line">              파일 크기를 1Kb 단위로 나타낸다.  POSIXLY_CORRECT</div><div class="line">              환경 변수가 지정되면, 512b 단위로 지정된다.</div><div class="line"></div><div class="line">       -t, --sort=time</div><div class="line">              파일  시간  순으로  정열한다.   최근  파일이 제일</div><div class="line">              먼저.</div><div class="line"></div><div class="line">       -u, --time=atime, --time=access, --time=use</div><div class="line">              파일 사용 시간 순으로 정열한다.  자세한 나열이면,</div><div class="line">              시간  표시는  만들어진  날자대신,  사용된  날자를</div><div class="line">              보여준다.</div><div class="line"></div><div class="line">       -x, --format=across, --format=horizontal</div><div class="line">              정열 방식을 가로로 한다.</div><div class="line"></div><div class="line">       -A, --almost-all</div><div class="line">              ``.``,  ``..``  경로를  제외하고  디렉토리안의   모든</div><div class="line">              파일을 나열한다.</div><div class="line"></div><div class="line">       -B, --ignore-backups</div><div class="line">              파일 끝이 `~&apos;인 파일은 목록 나열에 제외된다.</div><div class="line"></div><div class="line">       -C, --format=vertical</div><div class="line">              정열 방식을 세로로 한다.</div><div class="line"></div><div class="line">       -F, --classify</div><div class="line">              파일  형식을 알리는 문자를 각 파일 뒤에 추가한다.</div><div class="line">              일반적으로 실행파일은  &quot;*&quot;,  경로는  &quot;/&quot;,  심블릭</div><div class="line">              링크는  &quot;@&quot;,  FIFO는  &quot;|&quot;,  소켓은  &quot;=&quot;, 일반적인</div><div class="line">              파일은 없다.</div><div class="line"></div><div class="line">       -G, --no-group</div><div class="line">              자세한 목록 나열에서 group 정보를 제외한다.</div><div class="line"></div><div class="line">       -L, --dereference</div><div class="line">              심블릭 링크 파일들을 그냥 파일로 보여준다.</div><div class="line"></div><div class="line">       -N, --literal</div><div class="line">              이름이 영문이 아닌 경우, C에서 사용하는  역슬래쉬</div><div class="line">              문자(`\&apos;)와   함께   사용하는  표기  대신  그대로</div><div class="line">              출력한다.</div><div class="line"></div><div class="line">       -Q, --quote-name</div><div class="line">              -N 옵션과 반대.</div><div class="line"></div><div class="line">       -R, --recursive</div><div class="line">              하위 경로와 그 안에 있는 모든 파일들도 나열한다.</div><div class="line"></div><div class="line">       -S, --sort=size</div><div class="line">              파일 크기가 가장 큰 것 부터 정열해서 나열한다.</div><div class="line"></div><div class="line">       -U, --sort=none</div><div class="line">              정열을  하지  않고,  디스크에   저장된   순서대로</div><div class="line">              보여준다.  이  옵션은  -f  옵션을 사용할 수 없다.</div><div class="line">              유닉스 용 ls -f는 -a 옵션은 가능하나, -l, -s,  -t</div><div class="line">              옵션이 불가능하기 때문이다.</div><div class="line"></div><div class="line">       -X, --sort=extension</div><div class="line">              파일   확장자  순으로  정열한다.   확장자가  없는</div><div class="line">              파일이 제일 먼저 나열된다.</div><div class="line"></div><div class="line">       -1, --format=single-column</div><div class="line">              한 줄에 한 파일씩 나열.</div><div class="line"></div><div class="line">       -w, --width cols</div><div class="line">              가로 길이를  값으로  지정한다.   기본적으로는  한</div><div class="line">              화면의  가로  값이된다.   또한  COLUMNS 환경 변수</div><div class="line">              값으로 지정할 수 있다.  초기값은 80이다.</div><div class="line"></div><div class="line">       -T, --tabsize cols</div><div class="line">              탭이 사용될 때, cols 값으로  지정한다.   초기값은</div><div class="line">              8이다.  0으로 지정되면 탭 문자는 무시된다.</div><div class="line"></div><div class="line">       -I, --ignore pattern</div><div class="line">              pattern   패턴으로   지정된   파일들은   목록에서</div><div class="line">              제외된다. 이때,  명령행에서  그  파일이  지정되면</div><div class="line">              물론 나열된다.</div><div class="line"></div><div class="line">       --color, --colour, --color=yes, --colour=yes</div><div class="line">              파일의   형태에  따라  그  파일의  색깔을  다르게</div><div class="line">              보여주는 기능한다.  자세한 이야기는 아래  DISPLAY</div><div class="line">              COLORIZATION 부분을 참조한다.</div><div class="line"></div><div class="line">       --color=tty, --colour=tty</div><div class="line">              --color   옵션과  같으나,  단지  표준  출력에서만</div><div class="line">              색깔을 사용한다.   이  옵션은  칼라  제어  코드를</div><div class="line">              지원하지   않는   보기   풀그림을   사용하는   쉘</div><div class="line">              스크립트나, 명령행 사용에서 아주 유용하게 쓰인다.</div><div class="line"></div><div class="line">       --color=no, --colour=no</div><div class="line">              색깔   사용하지   않는다.   이것이    초기값이다.</div><div class="line">              이옵션은  색깔  사용을  이미 하고 있다면, 이 값을</div><div class="line">              무시한다.</div><div class="line"></div><div class="line">       --help 도움말을 보여주고 마친다.</div><div class="line"></div><div class="line">       --version</div><div class="line">              버전 정보를 보여주고 마친다.</div><div class="line"></div><div class="line">   DISPLAY COLORIZATION</div><div class="line">       --color 옵션을 사용할  때,  이  버전의  ls  명령은  파일</div><div class="line">       이름이나,  파일  형태에  따라  파일의 색깔별로 나열할 수</div><div class="line">       있다.   이  칼라화는  초기값으로  파일  형태에  따라서만</div><div class="line">       사용된다.  사용되는 코드는 ISO 6429 (ANSI)이다.</div><div class="line"></div><div class="line">       이런  초기  색깔 지정은 LS_COLORS (또는 LS_COLOURS) 환경</div><div class="line">       변수 지정으로 바꿀 수 있다.  이  변수들의  형식은  term‐</div><div class="line">       cap(5)  파일  포멧의 방식을 사용한다.  각 항목은 &quot;:&quot;으로</div><div class="line">       하며,  각  항목은  &quot;xx=문자열&quot;로  한다.   xx에는  두개의</div><div class="line">       문자가 오는데, 여기서 사용할 수 있는 문자는 다음과 같다.</div><div class="line"></div><div class="line">         no       0       파일 이름이 아닌 일반 텍스트</div><div class="line">         fi       0       일반 파일</div><div class="line">         di       32      경로</div><div class="line">         ln       36      심블릭 링크</div><div class="line">         pi       31      FIFO(파이프)</div><div class="line">         so       33      소켓</div><div class="line">         bd       44;37   블럭 장치</div><div class="line">         cd       44;37   캐릭터 장치</div><div class="line">         ex       35      실행 파일</div><div class="line">         mi       (없음)  잃어버린 파일 (초기값은 fi)</div><div class="line">         or       (없음)  심블릭 링크 대상이 없는 파일(초기값은 ln)</div><div class="line">         lc       \e[    왼쪽 코드</div><div class="line">         rc       m       오른쪽 코드</div><div class="line">         ec       (없음)  마침 코드 (lc+no+rc로 바뀜)</div><div class="line"></div><div class="line">       색깔을 바꿀 경우는 그 해당 변수만 바꾸면 된다.</div><div class="line"></div><div class="line">       파일  이름은 파일의 확장자에 따라 색깔을 지정할 수 있다.</div><div class="line">       LS_COLORS 환경 변수에 포함하면 되고,  그  사용법은  위와</div><div class="line">       같다.   문법은  &quot;*ext=문자열&quot;이다.  예를  들어,  C  소스</div><div class="line">       파일을 파란색으로 지정하려면, &quot;*.c=34&quot;이다.</div><div class="line"></div><div class="line">       제어  문자는  C에서와  갈이  `\&apos;문자로  시작하는  문자를</div><div class="line">       사용하거나, stty와 같이 `^&apos;문자로 시작하는 문자를 사용할</div><div class="line">       수 있다. C 스타일일 경우는 \e는  Esc,  \_  공백문자,  \?</div><div class="line">       Delete  이다.  추가로, \ escape 문자는 \, ^, :, =의 초기</div><div class="line">       처리 방식을 무시하는데 사용될 수 있다.</div><div class="line"></div><div class="line">       각 파일은 &lt;lc&gt; &lt;색깔값&gt; &lt;rc&gt; &lt;파일이름&gt; &lt;ec&gt; 형태로 지정</div><div class="line">       된다.  만약  &lt;ec&gt; 코드를 지엉하지 않으면, &lt;lc&gt; &lt;no&gt; &lt;rc&gt;</div><div class="line">       가 대치된다. 이 방법은 보다 많은 변환을 하지만  일반적인</div><div class="line">       방법은  아니다. 왼쪽, 오른쪽, 마지막 코드는 일반적인 ISO</div><div class="line">       6429 코드를 지원하지 않는 터미날을  위한  값으로  특별한</div><div class="line">       경우가 아니면, 사용할 필요가 없다.</div><div class="line"></div><div class="line">       ISO  6429  코드일  경우  사용될  수 있는 코드값은 다음과</div><div class="line">       같다.  (물론 lc, rc, ec 값은 제외된다.)</div><div class="line"></div><div class="line">          0     초기 색깔로 다시 돌린다.</div><div class="line">          1     강조색</div><div class="line">          4        밑줄</div><div class="line">          5        깜빡이는 글자.</div><div class="line">         30        까만색 전경</div><div class="line">         31        빨강 전경</div><div class="line">         32        녹색 전경</div><div class="line">         33        노랑(또는 갈색) 전경</div><div class="line">         34        파랑 전경</div><div class="line">         35        보라 전경</div><div class="line">         36        청록색 전경</div><div class="line">         37        흰색(또는 회색) 전경</div><div class="line">         40        까만색 배경</div><div class="line">         41        빨강 배경</div><div class="line">         42        녹색 배경</div><div class="line">         43        노랭(또는 갈색) 배경</div><div class="line">         44        파랑 배경</div><div class="line">         45        보라 배경</div><div class="line">         46        청록색 배경</div><div class="line">         47        흰색(또는 회색) 배경</div><div class="line"></div><div class="line">       모든 명령이 모든 시스템이나 디스플레이  장치에서  제대로</div><div class="line">       동작하는 것은 아니다.</div><div class="line"></div><div class="line">       몇 터미날은 초기 마지막코드(ec)가 인식되지 않을 수 있다.</div><div class="line">       만약,  색들을  사용했다면,  no,  fi  값을  0으로  지정해</div><div class="line">       초기값으로 되돌려 놓아야 한다.</div><div class="line"></div><div class="line">BUGS</div><div class="line">       BSD  시스템에서는,   -s 옵션이 HP-UX 시스템으로 부터 NFS</div><div class="line">       마운트된 파일을 위한 파일 크기가 반으로 잘못  보여진다고</div><div class="line">       한다.   HP-UX  시스템에서는,  BSD  시스템으로  부터  NFS</div><div class="line">       마운트된  파일을  위한  파일의  크기가   반대로   두배로</div><div class="line">       나타난다.   이런  현상은  HP-UX ls 풀그림도 마찬가지라고</div><div class="line">       한다.</div><div class="line"></div><div class="line">       영어권 문자셋을 사용할 경우는 별 문제가 없지만, 한국어와</div><div class="line">       같이  2바이트  문자권에서는 자국어로 된 파일 이름을 보기</div><div class="line">       위해 특별한 옵션을 지정해 주어야한다.</div><div class="line">       ``-N --color=tty`` 옵션이 그 옵션이다.</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">FSF                    GNU File Utilities                 LS(1)</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> Centos </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Centos </tag>
            
            <tag> ls </tag>
            
            <tag> 외부명령어 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[외부명령어]]></title>
      <url>/2017/10/31/%EC%99%B8%EB%B6%80%EB%AA%85%EB%A0%B9%EC%96%B4-1/</url>
      <content type="html"></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[solarized_theme적용하기]]></title>
      <url>/2017/10/31/solarized-theme%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0/</url>
      <content type="html"><![CDATA[<div class="video-container"><iframe src="//www.youtube.com/embed/SSu822Lgta8" frameborder="0" allowfullscreen></iframe></div>
<hr>
<h2 id="터미널-Solarized-Theme-적용"><a href="#터미널-Solarized-Theme-적용" class="headerlink" title="터미널 Solarized Theme 적용"></a>터미널 Solarized Theme 적용</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$mkdir</span> -p ~/.mysetting/Solarized</div><div class="line"><span class="variable">$cd</span> ~/.mysetting/Solarized</div><div class="line"><span class="variable">$git</span> <span class="built_in">clone</span> https://github.com/sigurdga/gnome-terminal-colors-solarized.git</div><div class="line"><span class="variable">$cd</span> gnome-terminal-colors-solarized</div><div class="line">$./install.sh</div><div class="line"></div><div class="line">그럼 다음과 같은 순서 대로 물어 물어 옵니다.</div><div class="line">색상 선택: 1번을 선택</div><div class="line">Please select a color scheme:</div><div class="line">1) dark</div><div class="line">2) dark_alternative</div><div class="line">3) light</div><div class="line"><span class="comment">#? 1</span></div><div class="line"></div><div class="line">프로파일 선택: 1번을 선택</div><div class="line">Please select a Gnome Terminal profile:</div><div class="line">1) 이름 없음</div><div class="line"><span class="comment">#? 1</span></div><div class="line"></div><div class="line">You have selected:</div><div class="line"></div><div class="line">  Scheme: dark</div><div class="line">  Profile: 이름 없음 (b1dcc9dd-5262-4d8d-a863-c897e6d979b9)</div><div class="line"></div><div class="line">프로파일을 덮어쓰겠냐고 물으면 yes를 입력</div><div class="line">Are you sure you want to overwrite the selected profile?</div><div class="line">(YES to <span class="built_in">continue</span>) yes</div><div class="line">Confirmation received -- applying settings</div><div class="line"></div><div class="line">A dircolors adapted to solarized can be automatically downloaded.</div><div class="line"></div><div class="line">1) Download seebi<span class="string">' dircolors-solarized: https://github.com/seebi/dircolors-solarized</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">2) [DEFAULT] I don'</span>t need any dircolors.</div><div class="line"></div><div class="line">디렉토리및파일 색상 변경을 설치하겠냐고 물으면 2번을 눌러 설치 안함을 선택.</div><div class="line">Enter your choice : [2] 2</div></pre></td></tr></table></figure>
<hr>
<p>터미널을 종료했다 다시 실행하면 됩니다.</p>
<h1 id="터미널-디렉토리및-파일-색상-설정-CentOS-만"><a href="#터미널-디렉토리및-파일-색상-설정-CentOS-만" class="headerlink" title="터미널 디렉토리및 파일 색상 설정(CentOS 만)"></a>터미널 디렉토리및 파일 색상 설정(CentOS 만)</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$cd</span> ~/.mysetting/solarized</div><div class="line"><span class="variable">$git</span> <span class="built_in">clone</span> https://github.com/seebi/dircolors-solarized</div><div class="line"></div><div class="line"><span class="variable">$vi</span> ~/.bash_profile</div></pre></td></tr></table></figure>
<p>맨밑에 아래 줄을 붙여 넣으세요.</p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">eval</span> `dircolors ~/.mysetting/solarized/dircolors-solarized/dircolors.ansi`</div><div class="line"></div><div class="line">:<span class="keyword">wq</span></div></pre></td></tr></table></figure>
<p>터미널을 종료 하고 재실행하면 반영됩니다.<br>또는</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$suource</span> ~/.bash_profile</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> Vim </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Vim </tag>
            
            <tag> vundle </tag>
            
            <tag> solarized </tag>
            
            <tag> theme </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Vundle 설치]]></title>
      <url>/2017/10/31/Vundle-%EC%84%A4%EC%B9%98/</url>
      <content type="html"><![CDATA[<div class="video-container"><iframe src="//www.youtube.com/embed/SSu822Lgta8" frameborder="0" allowfullscreen></iframe></div>
<hr>
<h1 id="프로그래밍을-위한-vim-세팅"><a href="#프로그래밍을-위한-vim-세팅" class="headerlink" title="프로그래밍을 위한 vim 세팅"></a>프로그래밍을 위한 vim 세팅</h1><h2 id="복사-붙여넣기"><a href="#복사-붙여넣기" class="headerlink" title="복사/붙여넣기"></a>복사/붙여넣기</h2><ul>
<li>vi가 익숙하지 않을 경우 gedit을 이용해도 됩니다.</li>
<li>맥용 virtualbox 5.1.28에서 macos용이 게스트 확장이 안되고 있습니다. 클립보드 공유와 화면크기 자동조정, 마우스 통합등. 맥사용자는 불편하더라도 당분간 아래 방법을 써야 합니다. 아님 paralls, vmware를 이용하는 것도 무방합니다.</li>
<li>centOS에서 브라우저 내용을 복사해서 터미널로 붙여 넣을 때는 <code>Shift+Ctrl+v</code></li>
<li>또는 <code>Alt + 마우스 왼쪽클릭</code> 하면 팝업메뉴가 나옵니다. 붙여넣기 선택</li>
<li>또는 터미널 메뉴의 편집 <code>&gt;</code> 붙여넣기를 선택합니다.</li>
</ul>
<h2 id="git-설치"><a href="#git-설치" class="headerlink" title="git 설치"></a>git 설치</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># centos</span></div><div class="line"><span class="variable">$sudo</span> yum install git</div><div class="line"></div><div class="line"><span class="comment"># ubuntu</span></div><div class="line"><span class="variable">$sudo</span> apt_get install git</div><div class="line"></div><div class="line"><span class="comment"># macos</span></div><div class="line"><span class="variable">$brew</span> install git</div></pre></td></tr></table></figure>
<ul>
<li>sudo 가붙은 명령은 관리자 비밀번호 입력해야 합니다.</li>
</ul>
<h2 id="gvim설치-설치-되어-있다면-통과"><a href="#gvim설치-설치-되어-있다면-통과" class="headerlink" title="gvim설치(설치 되어 있다면 통과)"></a>gvim설치(설치 되어 있다면 통과)</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># centos</span></div><div class="line"><span class="variable">$sudo</span> yum install gvim</div><div class="line"></div><div class="line"><span class="comment"># ubuntu</span></div><div class="line"><span class="variable">$sudo</span> apt_get install gvim</div><div class="line"></div><div class="line"><span class="comment"># macos</span></div><div class="line"><span class="variable">$brew</span> install macvim</div></pre></td></tr></table></figure>
<ul>
<li>gvim을 설치하는 이유는 클립보드로 복사, 붙여넣기를 해야 하기 때문입니다.</li>
<li>vim에서 클립보드 내용을 붙여 넣으려면 “+P</li>
<li>vim의 내용을 클립보드로 복사 하려면 “+Y</li>
<li>이 동작은 .vimrc 에 set clipboard=unnamed 를 추가해야 동작 됩니다. 이 후 한꺼번에 추가하도록 하겠습니다.</li>
</ul>
<p>터미널에서 vi를 실행하면 gvim이 실행되도록 .bash_profile을 수정합니다.</p>
<h2 id="bash-profile-수정"><a href="#bash-profile-수정" class="headerlink" title=".bash_profile 수정"></a>.bash_profile 수정</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$cd</span> ~</div><div class="line"><span class="variable">$vi</span> .bash_profile</div></pre></td></tr></table></figure>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">" 마지막에 줄에 아래문장을 붙여 넣습니다.</span></div><div class="line">alias <span class="keyword">vi</span>=<span class="string">"gvim -v"</span></div><div class="line"></div><div class="line">:<span class="keyword">wq</span></div></pre></td></tr></table></figure>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$source</span> .bash_profile</div></pre></td></tr></table></figure>
<h2 id="vim-디렉토리-생성-및-vundle-clone"><a href="#vim-디렉토리-생성-및-vundle-clone" class="headerlink" title=".vim 디렉토리 생성 및 vundle clone"></a>.vim 디렉토리 생성 및 vundle clone</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="variable">$mkdir</span> -p .vim/bundle</div><div class="line"><span class="variable">$git</span> <span class="built_in">clone</span> https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim</div></pre></td></tr></table></figure>
<h2 id="vimrc-생성"><a href="#vimrc-생성" class="headerlink" title=".vimrc 생성"></a>.vimrc 생성</h2><p><code>.vimrc</code> 파일을 오픈합니다.</p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">$<span class="keyword">gvim</span></div><div class="line">:<span class="keyword">e</span> ~/.vimrc</div></pre></td></tr></table></figure>
<p><code>.vimrc</code> 파일이 열리면 아래 내용을 복사해서 붙여 넣습니다.<br>vim에서 붙여넣기 할 때는 편집 메뉴에 있는 붙이기를 선택합니다. </p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">"=================================================</span></div><div class="line"><span class="comment">" Vundle</span></div><div class="line"><span class="comment">" https://github.com/gmarik/vundle</span></div><div class="line"><span class="comment">"=================================================</span></div><div class="line"><span class="keyword">set</span> nocompatible</div><div class="line"><span class="keyword">filetype</span> off</div><div class="line"><span class="keyword">set</span> rtp+=~/.<span class="keyword">vim</span>/bundle/Vundle.<span class="keyword">vim</span></div><div class="line"><span class="keyword">call</span> vundle#begin()</div><div class="line"></div><div class="line">Plugin <span class="string">'VundleVim/Vundle.vim'</span></div><div class="line">Plugin <span class="string">'tpope/vim-fugitive'</span></div><div class="line"></div><div class="line"><span class="comment">" All of your Plugins must be added before the following line</span></div><div class="line">Plugin <span class="string">'altercation/vim-colors-solarized'</span>  <span class="comment">" solarized 테마</span></div><div class="line">Plugin <span class="string">'scrooloose/nerdtree'</span> <span class="comment">" 파일/폴더관리</span></div><div class="line">Plugin <span class="string">'terryma/vim-multiple-cursors'</span>  <span class="comment">" 멀티커서 </span></div><div class="line">Plugin <span class="string">'kien/ctrlp.vim'</span></div><div class="line"><span class="comment">"==============    SnipMate  =====================  # 코드단축</span></div><div class="line">Plugin <span class="string">'MarcWeber/vim-addon-mw-utils'</span></div><div class="line">Plugin <span class="string">'tomtom/tlib_vim'</span></div><div class="line">Plugin <span class="string">'garbas/vim-snipmate'</span></div><div class="line">Plugin <span class="string">'honza/vim-snippets'</span></div><div class="line"><span class="comment">"=================================================</span></div><div class="line"></div><div class="line">Plugin <span class="string">'davidhalter/jedi-vim'</span>	<span class="comment">"파이썬 ide</span></div><div class="line">Plugin <span class="string">'vim-airline/vim-airline'</span>	<span class="comment">"vim 꾸미기</span></div><div class="line">Plugin <span class="string">'vim-airline/vim-airline-themes'</span>	<span class="comment">"vim 꾸미기 테마</span></div><div class="line">Plugin <span class="string">'tpope/vim-surround'</span>		<span class="comment">"문자 감싸기</span></div><div class="line">Plugin <span class="string">'suan/vim-instant-markdown'</span>  <span class="comment">" 마크다운 미리보기</span></div><div class="line">Plugin <span class="string">'VisIncr'</span>  <span class="comment">" 자동증감01234</span></div><div class="line">Plugin <span class="string">'klen/python-mode'</span> <span class="comment">" ide</span></div><div class="line"><span class="comment">"==============  마크다운   ======================</span></div><div class="line">Plugin <span class="string">'godlygeek/tabular'</span> </div><div class="line">Plugin <span class="string">'plasticboy/vim-markdown'</span></div><div class="line">Plugin <span class="string">'mzlogin/vim-markdown-toc'</span></div><div class="line"><span class="comment">"=================================================</span></div><div class="line"><span class="comment">"Plugin 'joshdick/onedark.vim'</span></div><div class="line"><span class="comment">"Plugin 'vim-pandoc/vim-pandoc'</span></div><div class="line"><span class="comment">"Plugin 'vim-pandoc/vim-pandoc-syntax' </span></div><div class="line"><span class="comment">"Plugin 'junegunn/goyo.vim'</span></div><div class="line"><span class="comment">"=====================================</span></div><div class="line"><span class="string">"Plugin 'dbext.vim' "</span> dbms관리</div><div class="line"><span class="comment">"=====================================</span></div><div class="line"><span class="comment">"</span></div><div class="line"><span class="keyword">call</span> vundle#end()</div><div class="line"><span class="keyword">filetype</span> plugin <span class="built_in">indent</span> <span class="keyword">on</span></div><div class="line"><span class="comment">" To ignore plugin indent changes, instead use:</span></div><div class="line"><span class="comment">" filetype plugin on</span></div><div class="line"><span class="comment">"</span></div><div class="line"></div><div class="line"><span class="comment">" Brief help</span></div><div class="line"><span class="comment">" :PluginList       - 설치된 플러그인 목록 보기</span></div><div class="line"><span class="comment">" :PluginInstall    - 플러그인설치; append`!` 추가된 플러그인만 설치</span></div><div class="line"><span class="comment">" :PluginUpdate		- 플러그인 업데이트</span></div><div class="line"><span class="comment">" :PluginSearch foo - 플러그인 검색; append`!` 로컬 캐시를 갱신 </span></div><div class="line"><span class="comment">" :PluginClean      - 플러그인 삭제; append`!` 사용하지 않은 플러그인 삭제</span></div><div class="line"><span class="comment">" .vimrc에 플러그인을 추가했으면</span></div><div class="line"><span class="comment">":w 저장 </span></div><div class="line"><span class="string">":source %  "</span>.vimrc 다시 로드</div><div class="line"><span class="string">":PluginInstall				"</span>플러그인 설치</div><div class="line"><span class="string">" http://vimawesome.com		"</span>플러그인 조회 사이트</div><div class="line"><span class="string">" http://vimcast.org		"</span>강좌</div><div class="line"><span class="string">" see :h vundle				"</span>도움말</div><div class="line"><span class="string">"============================================================="</span></div><div class="line"></div><div class="line"><span class="string">" When started as "</span>evim<span class="comment">", evim.vim will already have done these settings.</span></div><div class="line"><span class="keyword">if</span> <span class="variable">v:progname</span> =~? <span class="string">"evim"</span></div><div class="line">  <span class="keyword">finish</span></div><div class="line"><span class="keyword">endif</span></div><div class="line"></div><div class="line"><span class="comment">" This must be first, because it changes other options as a side effect.</span></div><div class="line"><span class="keyword">set</span> nocompatible</div><div class="line"></div><div class="line"><span class="comment">" allow backspacing over everything in insert mode</span></div><div class="line"><span class="keyword">set</span> backspace=<span class="built_in">indent</span>,eol,start</div><div class="line"></div><div class="line"><span class="keyword">if</span> <span class="built_in">has</span>(<span class="string">"vms"</span>)</div><div class="line">  <span class="keyword">set</span> nobackup		<span class="comment">" do not keep a backup file, use versions instead</span></div><div class="line"><span class="keyword">else</span></div><div class="line">  <span class="keyword">set</span> backup		<span class="comment">" keep a backup file</span></div><div class="line"><span class="keyword">endif</span></div><div class="line"></div><div class="line"><span class="keyword">set</span> <span class="keyword">history</span>=<span class="number">50</span>		<span class="comment">" keep 50 lines of command line history</span></div><div class="line"><span class="keyword">set</span> ruler		    <span class="comment">" show the cursor position all the time</span></div><div class="line"><span class="keyword">set</span> showcmd		    <span class="comment">" display incomplete commands</span></div><div class="line"><span class="keyword">set</span> incsearch		<span class="comment">" do incremental searching</span></div><div class="line"></div><div class="line"><span class="comment">" For Win32 GUI: remove 't' flag from 'guioptions': no tearoff menu entries</span></div><div class="line"><span class="string">" let &amp;guioptions = substitute(&amp;guioptions, "</span>t<span class="string">", "</span><span class="string">", "</span>g<span class="comment">")</span></div><div class="line"></div><div class="line"><span class="comment">" Don't use Ex mode, use Q for formatting</span></div><div class="line"><span class="keyword">map</span> Q gq</div><div class="line"></div><div class="line"><span class="comment">" CTRL-U in insert mode deletes a lot.  Use CTRL-G u to first break undo,</span></div><div class="line"><span class="comment">" so that you can undo CTRL-U after inserting a line break.</span></div><div class="line"><span class="keyword">inoremap</span> <span class="symbol">&lt;C-U&gt;</span> <span class="symbol">&lt;C-G&gt;</span><span class="keyword">u</span><span class="symbol">&lt;C-U&gt;</span></div><div class="line"></div><div class="line"><span class="comment">" In many terminal emulators the mouse works just fine, thus enable it.</span></div><div class="line"><span class="keyword">if</span> <span class="built_in">has</span>(<span class="string">'mouse'</span>)</div><div class="line">  <span class="keyword">set</span> mouse=<span class="keyword">a</span></div><div class="line"><span class="keyword">endif</span></div><div class="line"></div><div class="line"><span class="comment">" Switch syntax highlighting on, when the terminal has colors</span></div><div class="line"><span class="comment">" Also switch on highlighting the last used search pattern.</span></div><div class="line"><span class="keyword">if</span> &amp;t_Co &gt; <span class="number">2</span> || <span class="built_in">has</span>(<span class="string">"gui_running"</span>)</div><div class="line">  <span class="keyword">syntax</span> <span class="keyword">on</span></div><div class="line">  <span class="keyword">set</span> hlsearch</div><div class="line"><span class="keyword">endif</span></div><div class="line"></div><div class="line"><span class="comment">" Only do this part when compiled with support for autocommands.</span></div><div class="line"><span class="keyword">if</span> <span class="built_in">has</span>(<span class="string">"autocmd"</span>)</div><div class="line"></div><div class="line">  <span class="comment">" Enable file type detection.</span></div><div class="line">  <span class="comment">" Use the default filetype settings, so that mail gets 'tw' set to 72,</span></div><div class="line">  <span class="comment">" 'cindent' is on in C files, etc.</span></div><div class="line">  <span class="comment">" Also load indent files, to automatically do language-dependent indenting.</span></div><div class="line">  <span class="keyword">filetype</span> plugin <span class="built_in">indent</span> <span class="keyword">on</span></div><div class="line"></div><div class="line">  <span class="comment">" Put these in an autocmd group, so that we can delete them easily.</span></div><div class="line">  <span class="keyword">augroup</span> vimrcEx</div><div class="line">  au!</div><div class="line"></div><div class="line">  <span class="comment">" For all text files set 'textwidth' to 78 characters.</span></div><div class="line">  <span class="keyword">autocmd</span> FileType text <span class="keyword">setlocal</span> textwidth=<span class="number">78</span></div><div class="line"></div><div class="line">  <span class="comment">" When editing a file, always jump to the last known cursor position.</span></div><div class="line">  <span class="comment">" Don't do it when the position is invalid or when inside an event handler</span></div><div class="line">  <span class="comment">" (happens when dropping a file on gvim).</span></div><div class="line">  <span class="comment">" Also don't do it when the mark is in the first line, that is the default</span></div><div class="line">  <span class="comment">" position when opening a file.</span></div><div class="line">  <span class="keyword">autocmd</span> BufReadPost *</div><div class="line">    \ <span class="keyword">if</span> <span class="built_in">line</span>(<span class="string">"'\""</span>) &gt; <span class="number">1</span> &amp;&amp; <span class="built_in">line</span>(<span class="string">"'\""</span>) &lt;= <span class="built_in">line</span>(<span class="string">"$"</span>) |</div><div class="line">    \   <span class="keyword">exe</span> <span class="string">"normal! g`\""</span> |</div><div class="line">    \ <span class="keyword">endif</span></div><div class="line"></div><div class="line">  <span class="keyword">augroup</span> END</div><div class="line"></div><div class="line"><span class="keyword">else</span></div><div class="line"></div><div class="line">  <span class="keyword">set</span> autoindent		<span class="comment">" always set autoindenting on</span></div><div class="line"></div><div class="line"><span class="keyword">endif</span> <span class="string">" has("</span><span class="keyword">autocmd</span><span class="comment">")</span></div><div class="line"></div><div class="line"><span class="comment">" Convenient command to see the difference between the current buffer and the</span></div><div class="line"><span class="comment">" file it was loaded from, thus the changes you made.</span></div><div class="line"><span class="comment">" Only define it when not defined already.</span></div><div class="line"><span class="keyword">if</span> !exists(<span class="string">":DiffOrig"</span>)</div><div class="line">  <span class="keyword">command</span> DiffOrig <span class="keyword">vert</span> <span class="keyword">new</span> | <span class="keyword">set</span> bt=nofile | r ++<span class="keyword">edit</span> # | <span class="number">0</span>d_ | <span class="keyword">diffthis</span></div><div class="line">		  \ | <span class="keyword">wincmd</span> <span class="keyword">p</span> | <span class="keyword">diffthis</span></div><div class="line"><span class="keyword">endif</span></div><div class="line"></div><div class="line"><span class="keyword">set</span> <span class="keyword">nu</span>		<span class="comment">" 줄번호를 보여줌</span></div><div class="line"><span class="comment">" 탭설정 하기</span></div><div class="line"><span class="keyword">set</span> <span class="keyword">ts</span>=<span class="number">4</span>	<span class="comment">" 탭의 4의 공백 폭을 </span></div><div class="line"><span class="string">"set sts=4	 "</span>탭을 눌렀을 때 스페이스(<span class="keyword">ascii</span>-<span class="number">0</span>x20) <span class="number">4</span>개가 삽입되도록 합니다.</div><div class="line"><span class="keyword">set</span> <span class="keyword">sw</span>=<span class="number">4</span>	 <span class="comment">"'&lt;'나 '&gt;'키로 줄 전체를 밀거나 당길 때 참조되는 폭입니다.</span></div><div class="line"><span class="string">"set et		 "</span><span class="keyword">set</span> expandtab 탭을 공백으로 바꿈</div><div class="line"><span class="string">"retab		 "</span><span class="keyword">vim</span> 사용중 탭이 공백으로 바뀌지 않은 경우 et를 다시 적용</div><div class="line"><span class="keyword">set</span> bs+=<span class="built_in">indent</span>,eol,start	<span class="comment">"들여쓰기된 스페이스를 지울 때 백스페이스를 여러번 누르지 않도록 하기 위해 sts 설정값만큼 백스페이스가 적용됩니다.</span></div><div class="line"><span class="keyword">set</span> listchars=<span class="keyword">ta</span><span class="variable">b:</span>»\ ,<span class="built_in">extend</span><span class="variable">s:</span>›,precede<span class="variable">s:</span>‹,nbsp:·,trai<span class="variable">l:</span>∙</div><div class="line"><span class="keyword">set</span> showbreak=↪\</div><div class="line"><span class="comment">"========== instant_markdown  ======================</span></div><div class="line"><span class="comment">"마크다운 문서를 작성시 브라우저로 미리 보기</span></div><div class="line"><span class="comment">"let g:instant_markdown_slow = 1</span></div><div class="line"><span class="comment">"자동실행 방지 0</span></div><div class="line"><span class="keyword">let</span> <span class="variable">g:instant_markdown_autostart</span> = <span class="number">1</span> </div><div class="line"></div><div class="line"><span class="comment">"============ vim_markdown =========================</span></div><div class="line"><span class="comment">" 마크다운 편집옵션</span></div><div class="line"><span class="keyword">let</span> <span class="variable">g:vim_markdown_folding_disabled</span> = <span class="number">1</span></div><div class="line"><span class="keyword">let</span> <span class="variable">g:vim_markdown_toc_autofit</span> = <span class="number">1</span></div><div class="line"><span class="keyword">let</span> <span class="variable">g:vim_markdown_math</span> = <span class="number">1</span></div><div class="line"><span class="keyword">let</span> <span class="variable">g:vim_markdown_frontmatter</span> = <span class="number">1</span></div><div class="line"><span class="keyword">let</span> <span class="variable">g:vim_markdown_toml_frontmatter</span> = <span class="number">1</span></div><div class="line"><span class="keyword">let</span> <span class="variable">g:vim_markdown_json_frontmatter</span> = <span class="number">1</span></div><div class="line"></div><div class="line"><span class="comment">"====================================================</span></div><div class="line"><span class="comment">" 컴파일 , 키맵</span></div><div class="line"><span class="comment">" c언어,pytyon</span></div><div class="line"><span class="comment">" compile and Run</span></div><div class="line"><span class="comment">" java는 eclipse에서 컴파일</span></div><div class="line"><span class="comment">" :명령줄 실행</span></div><div class="line"><span class="comment">" &lt; 백스페이스</span></div><div class="line"><span class="comment">" % 파일명</span></div><div class="line"><span class="comment">" &lt;Enter&gt; 엔터입력&lt;CR&gt;과 동일</span></div><div class="line"><span class="keyword">au</span> FileType <span class="keyword">c</span> <span class="keyword">map</span> <span class="symbol">&lt;F5&gt;</span> :<span class="keyword">w</span><span class="symbol">&lt;Enter&gt;</span>:!gcc % -<span class="keyword">o</span> %&lt;.<span class="keyword">o</span><span class="symbol">&lt;Enter&gt;</span>:!./%&lt;.<span class="keyword">o</span><span class="symbol">&lt;Enter&gt;</span></div><div class="line"><span class="keyword">au</span> FileType <span class="keyword">python</span> <span class="keyword">map</span> <span class="symbol">&lt;F5&gt;</span> :<span class="keyword">w</span><span class="symbol">&lt;Enter&gt;</span>:!python %<span class="symbol">&lt;Enter&gt;</span></div><div class="line"><span class="keyword">au</span> FileType rube <span class="keyword">map</span> <span class="symbol">&lt;F5&gt;</span> :<span class="keyword">w</span><span class="symbol">&lt;Enter&gt;</span>:!rube %<span class="symbol">&lt;Enter&gt;</span></div><div class="line"></div><div class="line"><span class="comment">"외부에서 파일변경시 자동으로 읽어들임</span></div><div class="line"><span class="comment">"이클립스, xcode 사용시 </span></div><div class="line"><span class="keyword">set</span> autoread&lt; </div><div class="line"></div><div class="line"><span class="comment">"gvim설치시, 클립보드사용</span></div><div class="line"><span class="keyword">set</span> clipboard=unnamed</div><div class="line"></div><div class="line"><span class="comment">"===============  airline  ===============</span></div><div class="line"><span class="comment">" 화이트 스페이스 체크 안함. </span></div><div class="line"><span class="keyword">let</span> <span class="variable">g:airline</span>#extensions#whitespace#enabled = <span class="number">0</span>		</div><div class="line"><span class="comment">" 확장탭라인을 사용</span></div><div class="line"><span class="keyword">let</span> <span class="variable">g:airline</span>#extensions#tabline#enabled = <span class="number">1</span> </div><div class="line"><span class="comment">" vim-airline 버퍼 목록 켜기</span></div><div class="line"><span class="comment">"let g:airline#extensions#tabline#fnamemod = ':t' </span></div><div class="line"><span class="comment">" vim-airline 버퍼 목록 파일명만 출력</span></div><div class="line"><span class="comment">" let g:airline#extensions#tabline#buffer_nr_show = 1 </span></div><div class="line"><span class="comment">" buffer number를 보여준다</span></div><div class="line"><span class="keyword">let</span> <span class="variable">g:airline</span>#extensions#tabline#buffer_nr_format = <span class="string">'%s:'</span> </div><div class="line"><span class="comment">" buffer number format</span></div><div class="line"><span class="comment">"let g:airline_powerline_fonts = 1</span></div><div class="line"><span class="keyword">let</span> <span class="variable">g:airline_theme</span>=<span class="string">'solarized'</span></div><div class="line"><span class="keyword">let</span> <span class="variable">g:airline_solarized_bg</span>=<span class="string">'dark'</span></div><div class="line"><span class="keyword">set</span> laststatus=<span class="number">2</span></div><div class="line"><span class="keyword">colorscheme</span> solarized</div><div class="line"><span class="keyword">let</span> <span class="variable">g:solarized_termcolors</span>=<span class="number">256</span></div><div class="line"><span class="comment">"===============   airline =================</span></div><div class="line"></div><div class="line"><span class="keyword">let</span> mapleader=<span class="string">","</span>  <span class="comment">" 리더키를 , 로 변경 주석처리하면 원상태</span></div><div class="line"><span class="keyword">nnoremap</span> <span class="symbol">&lt;Leader&gt;</span><span class="keyword">ex</span> !!$SHELL<span class="symbol">&lt;CR&gt;</span> <span class="comment">",ex로 외부명령을 실행</span></div><div class="line"><span class="comment">"새탭으로 오픈</span></div><div class="line"><span class="comment">"nnoremap &lt;Leader&gt;rc :tabnew $MYVIMRC&lt;CR&gt; </span></div><div class="line"><span class="comment">" 오른쪽에 오픈</span></div><div class="line"><span class="comment">"nnoremap &lt;Leader&gt;rc :rightbelow vnew $MYVIMRC&lt;CR&gt;</span></div><div class="line"><span class="comment">",rc로 .vimrc파일 오픈</span></div><div class="line"><span class="keyword">nnoremap</span> <span class="symbol">&lt;Leader&gt;</span>rc :<span class="keyword">e</span> $MYVIMRC<span class="symbol">&lt;CR&gt;</span> </div><div class="line"><span class="keyword">nnoremap</span> <span class="symbol">&lt;Leader&gt;</span>n :NERDTreeToggle<span class="symbol">&lt;CR&gt;</span></div><div class="line"><span class="keyword">nnoremap</span> <span class="symbol">&lt;C-F&gt;</span> :NERDTreeFind<span class="symbol">&lt;CR&gt;</span></div><div class="line"></div><div class="line"><span class="comment">"================  약어  (abbreviations)  ======================</span></div><div class="line"><span class="comment">" snippet은 tab을 눌러야하고 약어는 자동으로 바뀜</span></div><div class="line"><span class="comment">" snippet은 자동완성, </span></div><div class="line"><span class="comment">"ab la Los Angeles(L.A) 이렇게 사용해야함.</span></div><div class="line"><span class="comment">"한글 약어는 안되는 단어도 있음, 한글 약어가 안될땐 snippet에 추가.</span></div><div class="line"><span class="keyword">ab</span> 컨브 Ctrl+v</div><div class="line"><span class="keyword">ab</span> 컨씨 Ctrl+<span class="keyword">c</span></div><div class="line"><span class="keyword">ab</span> 컨엠 Ctrl+<span class="keyword">m</span></div><div class="line"><span class="keyword">ab</span> 이시 Ctrl+[ <span class="built_in">or</span> \&lt;Esc\&gt;</div><div class="line"><span class="keyword">ab</span> 노모 Normal <span class="keyword">mode</span></div><div class="line"><span class="keyword">ab</span> 커모 Command <span class="keyword">mode</span></div><div class="line"><span class="keyword">ab</span> 비모 Visual <span class="keyword">mode</span></div><div class="line"><span class="keyword">ab</span> 인모 Insert <span class="keyword">mode</span></div><div class="line"><span class="keyword">ab</span> 로렘 정당은 법률이 정하는 바에 의하여 국가의 보호를 받으며, 국가는 법률이 정하는 바에 의하여 정당운영에 필요한 자금을 보조할 수 있다. 대통령의 임기연장 또는 중임변경을 위한 헌법개정은 그 헌법개정 제안 당시의 대통령에 대하여는 효력이 없다. 위원은 탄핵 또는 금고 이상의 형의 선고에 의하지 아니하고는 파면되지 아니한다. 제<span class="number">3</span>항의 승인을 얻지 못한 때에는 그 처분 또는 명령은 그때부터 효력을 상실한다. 이 경우 그 명령에 의하여 개정 또는 폐지되었던 법률은 그 명령이 승인을 얻지 못한 때부터 당연히 효력을 회복한다.</div><div class="line"><span class="keyword">ab</span> 배요일 <span class="string">"월"</span>, <span class="string">"화"</span>, <span class="string">"수"</span>, <span class="string">"목"</span>, <span class="string">"금"</span>, <span class="string">"토"</span>, <span class="string">"일"</span></div><div class="line"><span class="keyword">ab</span> 배코이름 <span class="string">"유재석"</span>, <span class="string">"박명수"</span>, <span class="string">"강호동"</span>, <span class="string">"신동엽"</span>, <span class="string">"박미선"</span></div><div class="line"><span class="keyword">ab</span> 배색깔 <span class="string">"빨강"</span>, <span class="string">"주황"</span>, <span class="string">"노랑"</span>, <span class="string">"초록"</span>, <span class="string">"파랑"</span>, <span class="string">"남"</span>, <span class="string">"보라"</span></div><div class="line"><span class="keyword">ab</span> 브이아이 VI</div><div class="line"><span class="keyword">ab</span> 빔 VIM</div></pre></td></tr></table></figure>
<p>저장하고 .vimrc를 다시 읽어들입니다.</p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">:<span class="keyword">w</span></div><div class="line">:<span class="keyword">so</span> %</div></pre></td></tr></table></figure>
<p>오류가 많이 나는데 무시 해도 됩니다. 아직 플러그인 설치가 되지 않아서 발생하는 오류 입니다.<br>플러그인을 설치합니다.</p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">:PluginInstall</div></pre></td></tr></table></figure>
<p>vim을 종료했다 다시 시작합니다.<br>설치가 완료 되었습니다.</p>
]]></content>
      
        <categories>
            
            <category> Vim </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Vim </tag>
            
            <tag> bundle </tag>
            
            <tag> Vundle </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[vim의 고급 사용법]]></title>
      <url>/2017/10/31/vim%EC%9D%98-%EA%B3%A0%EA%B8%89-%EC%82%AC%EC%9A%A9%EB%B2%95/</url>
      <content type="html"><![CDATA[<div class="video-container"><iframe src="//www.youtube.com/embed/SSu822Lgta8" frameborder="0" allowfullscreen></iframe></div>
<hr>
<h1 id="vim-고급-사용법"><a href="#vim-고급-사용법" class="headerlink" title="vim 고급 사용법"></a>vim 고급 사용법</h1><p>고급사용법?</p>
<p>프로그래밍을 하다보면 어쩌다 한번씩 vim을 사용할 때가 있습니다. 서버의 환경변수를 수정할 때…</p>
<p>이럴때는 몇가지 기능만 쓸수 있으면 됩니다. 불편하지만 사용하는데 문제 되지 않습니다. 여기서 조금더 나아가 필수 명령을 숙지 한다면 vim을 다른 어떤 에디터 보다 편하고 빠르게 사용할 수 있습니다.</p>
<p>vim을 메인 에디터로 사용하기 위해 기본으로 알아야 사항을 최소한으로 요약 했읍니다. 물론 전체 기능의 10%도 안되는 내용이지만 아래 내용만 알아도 vim을 사용하는데 큰 불편함을 느끼지 않을 겁니다. 또 알아서 필요한 기능을 찾을 수 있는 레벨까지 올라 갈 겁니다. vim은 모든 사람들이 사용하는 패턴이 틀립니다. 자신만의 사용 패턴을 빨리 찾는 것이 중요합니다.</p>
<h2 id="Mode"><a href="#Mode" class="headerlink" title="Mode"></a>Mode</h2><p>vim은 크게 4가지 모드로 동작되어 집니다.</p>
<ul>
<li>Normal Mode</li>
<li>Insert Mode</li>
<li>Visual Mode</li>
<li>Commnd-Line Mode</li>
</ul>
<p>이중에 가장 기본이 되는 모드는 Normal Mode(command mode)라고도 합니다.<br>언제든 <code>Ctrl+[</code> 키를 입력하면 Normal Mode가 됩니다.<br>이곳에서 Insert mode , Visual mode, Command-Line mode 로 이동이 가능합니다. 반대로 각각의 모드에서 모드 전환을 하려면 반드시 Normal mode 로 이동해서 전환 해야 합니다.</p>
<h2 id="Normal-mode"><a href="#Normal-mode" class="headerlink" title="Normal mode"></a>Normal mode</h2><ul>
<li>모드이동 명령<ul>
<li>Normal Mode : <esc>, <code>Ctrl+[</code></esc></li>
<li>Insert Mode : i, I, a, A, o, O</li>
<li>Visual Mode : v, V, Ctrl+v(windows는 Ctrl+q)</li>
<li>Command-line Mode : <code>:</code></li>
</ul>
</li>
<li>커서이동 명령 h: motion.txt<ul>
<li>h, j, k, l : 좌우로 한칸, 위아래로 한줄씩 커서를 이동합니다. 명령앞에 숫자를 입력하면 숫자 만큼 명령을 수행 합니다.<ul>
<li>예) 10l : 오른쪽으로 10칸 이동</li>
<li>예) 10h : 왼쪽으로 10칸 이동</li>
</ul>
</li>
<li>단어단위로 이동 : w, W, b, B, e, gE</li>
<li><code>0, $, ^, [, {, (, ), }, ]</code> : 현재줄의 처음과 끝, 문장의 처음과 끝, 문단의 처음과 끝으로 이동</li>
<li>H, M, L<ul>
<li>H : 화면 맨위로</li>
<li>M : 화면 중간으로</li>
<li>L : 화면 끝으로</li>
</ul>
</li>
<li>gg, nG : 줄단위로 커서를 이동 시킵니다.<ul>
<li>gg는 문서 맨 위로 커서를 이동 시킵니다.</li>
<li>nG는 숫자 위치로 커서를 이동 시킵니다.</li>
</ul>
</li>
</ul>
</li>
<li><p>찾아서 커서 이동하기 명령</p>
<ul>
<li>f, F, t, T, /, ? : 특정 문자, 키워드를 찾아 이동합니다.<ul>
<li>f : 오른쪽으로 문자를 찾아 이동합니다. F는 왼쪽으로 찾아 이동합니다.</li>
<li>t : 오른쪽으로 문자를 찾아 찾은 문자 왼쪽에 커서를 위치 시킵니다. T는 왼쪽에서 찾아 오른쪽에 커서를 위치시킵니다.</li>
<li>/ : /는 키워드를 현재 커서 아래로 모두 찾아 하이라이트 해줍니다. n, N으로 이동 할 수 있습니다. 키워드와 단어는 조금 다릅니다. 키워드는 단어와 공백을 포함합니다.</li>
<li>? : ?는 현재 커서 위로 키워드를 찾아 이동합니다.</li>
</ul>
</li>
</ul>
</li>
<li><p>삭제 명령 :h deleting</p>
<ul>
<li>x, X, d, dd, D<ul>
<li>x는 커서위의 문자를 지웁니다. 또는 범위 설정된 부분을 지웁니다.</li>
<li>X는 커서위의 문자를 지우고 왼쪽문자에 붙입니다.</li>
<li>d는 삭제 대기 명령입니다. 어떻게 삭제할 지를 대기 하고 있습니다. 이동명령과 조합 가능합니다.<ul>
<li>dw : 커서 위치에서 부터 한단어 삭제, 주의 have 란 단어의 a에 커서가 있을 경우 ave만 삭제</li>
<li>d5l : 커서를 기준으로 오른쪽으로 5칸 삭제.</li>
<li>daw : 커서 위치의 단어를 삭제.</li>
<li>nd : d앞에 반복 숫자를 사용할 수 있음. 3dw : 3단어 삭제</li>
<li><code>d$</code> : 커서 위치부터 줄 끝까지 삭제.</li>
<li><code>d0</code> : 커서 위치부터 줄 처음까지 삭제.</li>
<li>dG : 커서 위치부터 마지막 까지 삭제.</li>
<li>dd : 현재줄 모두 삭제.</li>
<li>D : 커서 위치부터 줄끝까지 삭제.<ul>
<li>2D: 현재 커서 위치부터 2줄을 삭제. 현재줄 끝까지 삭제되고 추가로 2줄이 삭제됨.</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>바꾸기 명령</p>
<ul>
<li>s, S, c, C</li>
<li>s : 커서위 문자를 지우고 insert mode가 됩니다.</li>
<li>S : 줄 전체를 지우고 insert mode 가 됩니다.</li>
<li>c : 바꾸기 대기 명령, 이동키와 조합 가능</li>
<li>cw : 현재 커서위치 부터 한단어를 지우고 insert mode</li>
<li>caw : 현재 커서위치의 단어를 지우고 insert mdoe</li>
<li>ci’ : ‘’ 안의 문자열을 지우고 insert mode</li>
<li>ca’ : ‘’ 포함해서 지우고 insert mode</li>
<li>ci” : “” 안의 문자열을 지우고 insert mode</li>
<li>ca” : “” 를 포함 문자열을 지우고 insert mode</li>
<li>C : 현재 커서부터 줄 끝까지 지우고 insert mode</li>
</ul>
</li>
<li><p>덮어쓰기 명령</p>
<ul>
<li>r, R</li>
<li>r : 현재 커서위의 1문자를 지우고 insert mode(1문자만), 이동 명령과 조합 가능.</li>
<li>10r : 현재 커서위치의 1문자를 지우고 입력대기(주의 최초r을 10번 반복). </li>
<li>v2lr : 현재 커서 위치부터 2칸을 지우고 입력대기<ul>
<li>==========================================<br>위와 같은 문자를 -로 바꾸려면<br>커서를 처음 =에 위치시키고 <code>v$r-</code></li>
</ul>
</li>
<li>R : 줄전체를 지우고 insert mode</li>
</ul>
</li>
<li><p>복사 명령/붙이기 명령</p>
<ul>
<li>y, yy, Y</li>
<li>y : 복사 대기 명령, 이동키와 조합 가능</li>
<li>3yW : 현재 커서 위치부터 3단어를 복사.</li>
<li>yy : 한줄을 복사.</li>
<li>Y : 현재 커서 줄부터 한줄을 복사.</li>
<li>2Y : 현재 커서 줄부터 2줄을 복사.</li>
<li>p : 현재 커서 뒤에 붙이기. 행을 복사한 경우 아랫줄에 붙여넣음.</li>
<li>P : 현재 커저 앞에 붙이기. 행을 복사한 경우 윗줄에 붙여넣음.<br>(주의)붙이기를 할때 복사 한것이 열을 복사한 것인지, 줄을 복사한 것인지에 따라 기준이 앞, 뒤, 윗줄, 아랫줄로 반영됩니다.</li>
</ul>
</li>
<li><p>스크롤 명령</p>
<ul>
<li>Ctrl+u, Ctrl+d, Ctrl+e, Ctrl+y, Ctrl+f, Ctrl+b<ul>
<li>Ctrl+u : 커서를 중앙에 두고 위로 한화면 스크롤</li>
<li>Ctrl+d : 커서를 중앙에 두고 아래로 한화면 스크롤</li>
<li>Ctrl+e : 한줄씩 위로</li>
<li>Ctrl+y : 한줄씩 아래로</li>
<li>Ctrl+f : 한화면 위로 커서는 화면 상단</li>
<li>Ctrl+b : 한화면 아래로 커서는 화면 하단</li>
</ul>
</li>
</ul>
</li>
<li>접고 펴기 명령 :h fold<ul>
<li>zf : 폴드 생성. 여러줄을 1줄로 압축 zip fold 해줍니다.</li>
<li>zo : 폴드를 열어줍니다. zip open</li>
<li>zc : 폴드를 닫아줍니다.</li>
<li>zd : 현재 위치의 폴드를 삭제해줍니다.</li>
<li>zR : 현재 문서의 모든 폴드 열기.</li>
<li>zM : 현재 문서의 모든 폴드 닫기.</li>
<li>zE : 현재 문서의 모든 폴드 삭제.</li>
<li>zD : 현재 위치의 겹쳐진 폴드 삭제.</li>
</ul>
</li>
</ul>
<h2 id="Insert-Mode"><a href="#Insert-Mode" class="headerlink" title="Insert Mode"></a>Insert Mode</h2><ul>
<li>i, I, a, A, o, O<ul>
<li>i : i명령은 커서 앞에 입력합니다. </li>
<li>I : 줄 처음에 입력을 합니다.</li>
<li>a : 커서 뒤에 입력을 합니다.</li>
<li>A : 줄 끝에 입력을 합니다.</li>
<li>o : 커서 아래에 새줄을 만들고 입력을 합니다.</li>
<li>O : 커서 위에 새줄을 만들고 입력을 합니다.</li>
</ul>
</li>
<li>문자를 지우려면 백스페이스 또는 <code>Ctrl+h</code>를 입력합니다.</li>
<li>단어를 지우려면 <code>Ctrl + w</code></li>
<li>줄을 지우려면 <code>Ctrl + u</code></li>
<li>Insert mode에서 커서이동은 마우스를 사용하거나 Normal Mode에서 하는 것이 편합니다.</li>
<li>단어 단위로 이동하려면 <code>Ctrl+좌우방향키</code></li>
<li>위 아래줄로 이동하려면 <code>Ctrl+gk</code> , <code>Ctrl+gj</code></li>
<li><code>Ctrl+n</code> 커서 이전에 입력한 단어를 모두 보여주고 자동완성 시켜줍니다. <code>Ctrl+p</code>는 후보를 반대로 찾음<ul>
<li>캘리포니아 란 단어를 입력 했었고, 다시 입력하려고 하면 캘 까지만 입력하고 Ctrl + n</li>
</ul>
</li>
</ul>
<h2 id="Visual-Mode"><a href="#Visual-Mode" class="headerlink" title="Visual Mode"></a>Visual Mode</h2><ul>
<li>v, V, Ctrl + V(windows Ctrl+q)</li>
<li>비주얼 모드는 범위를 지정할 때 사용하는 mode 입니다.</li>
<li>v : 라인을 기준으로 범위를 지정합니다. </li>
<li>V : 줄단위로 범위를 지정합니다.(단위가 줄입니다.)</li>
<li>Ctrl + v : 열을 기준으로 범위를 지정합니다.</li>
<li>이동키 또는 마우스로 범위를 지정할 수 있습니다.</li>
</ul>
<h2 id="Command-line-Mode"><a href="#Command-line-Mode" class="headerlink" title="Command-line Mode"></a>Command-line Mode</h2><ul>
<li>파일관리<ul>
<li>w, e, E, pwd, cd <ul>
<li>w : 파일을 저장합니다.</li>
<li>e : 파일을 오픈 합니다. 파일이 존재 하면 open, 없으면 새로 만듦.</li>
<li>E : netrw를 실행 합니다. vim용 파일 관리 매니저 입니다. 종료는 :bd</li>
<li>pwd : 현재 작업 디렉토리를 보여줍니다.</li>
<li>cd : 작업 디렉토리를 이동합니다.</li>
</ul>
</li>
</ul>
</li>
<li><p>버퍼관리</p>
<ul>
<li>ls, bn, bd, bp, b(숫자)<ul>
<li>ls : 버퍼 목록을 보여줍니다.</li>
<li>bn : 다음 버퍼로 이동합니다.</li>
<li>bp : 앞에 있는 버퍼로 이동합니다.</li>
<li>b(숫자) : 숫자에 해당하는 버퍼로 이동합니다. </li>
</ul>
</li>
</ul>
</li>
<li><p>창관리</p>
<ul>
<li>vs, sp, Ctrl+w</li>
<li>vs : 창을 세로로 나누어 줍니다.</li>
<li>sp : 창을 가로로 나누어 줍니다.</li>
<li>Ctrl + w : 찾을 이동합니다. 누를 때마다 창이 전환됩니다.</li>
</ul>
</li>
<li><p>외부명령</p>
<ul>
<li>!</li>
<li>외부명령을 실행 합니다.</li>
</ul>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> Vim </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Vim </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[vim의 기본사용법]]></title>
      <url>/2017/10/31/vim%EC%9D%98-%EA%B8%B0%EB%B3%B8%EC%82%AC%EC%9A%A9%EB%B2%95/</url>
      <content type="html"><![CDATA[<div class="video-container"><iframe src="//www.youtube.com/embed/SSu822Lgta8" frameborder="0" allowfullscreen></iframe></div>
<hr>
<h1 id="기본-사용법"><a href="#기본-사용법" class="headerlink" title="기본 사용법"></a>기본 사용법</h1><h2 id="실행하기"><a href="#실행하기" class="headerlink" title="실행하기"></a>실행하기</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$vi</span></div></pre></td></tr></table></figure>
<p>콘솔에서 vi를 입력하면 vi가 실행됩니다.</p>
<p>처음 실행이 되면 기본으로 normal mode 되고 이곳에 명령을 입력하면 됩니다.</p>
<p>텍스트를 입력하기 위해 i명령을 입력하면 하단의 상태줄 좌측에 입력하기 라고 변경됩니다.</p>
<p>이제 키보드로 타이핑하는 것이 입력이 됩니다. </p>
<p>텍스트를 입력해 보세요. ^^</p>
<ul>
<li>삭제 : 백스페이스를 누르면 키보드 앞의 1문자가 삭제되어 집니다. Ctrl + h 도 동일합니다.</li>
<li>이동 : 커서키 또는 마우스를 이용해서 이동합니다.</li>
<li>복사 : 마우스로 복사할 영역을 드래그하고 Y를 누릅니다. 이때 자동으로 visual mode 가 됩니다. 선택이 끝나면 자동으로 normal mode 가 됩니다. 다시 입력하려면 i 명령을 입력하세요.</li>
<li>붙여넣기 : 붙여넣기 할 위치에 마우스나 방향키를 이용해 커서를 위치시키고 P를 누릅니다. 다시 입력하려면 i 명령을 입력하세요.</li>
<li>저장하기 : <code>Ctrl + [</code> + <code>:</code> w abc.txt<ul>
<li>저장하기 명령을 내리려면 Command-lind mode로 이동해야 합니다. <code>&lt;Esc&gt;</code> 또는 <code>Ctrl + [</code> 를 누르고 : (콜론)을 입력하면 Command-line mode 로 이동됩니다.</li>
<li>vim 하단에 : 이 표시 되면 w 저장할파일명 을 입력합니다.<ul>
<li>파일명을 한글로 입력하지 마세요.</li>
<li>파일명에 띄어 쓰기를 하지 마세요.</li>
<li>파일명에 특수문자를 넣지 마세요.</li>
<li>컴퓨터를 사용하는 기본 규칙입니다.</li>
<li>파일명을 한글과 공백을 써야 한다면 “한글 파일명.md” 이렇게 써야 합니다.</li>
<li><code>Ctrl + [</code> + <code>:</code>  사용을 추천합니다.</li>
</ul>
</li>
</ul>
</li>
<li>종료 : <code>Ctrl+[</code> + <code>:</code> q</li>
<li>저장한 후 종료 해야 합니다. 저장하지 않고 종료하려면 <code>Ctrl+[</code> + <code>:</code> q!<ul>
<li>종료 명령도 normal mode에서 해야 합니다.</li>
</ul>
</li>
</ul>
<h2 id="파일-수정하기"><a href="#파일-수정하기" class="headerlink" title="파일 수정하기"></a>파일 수정하기</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$vi</span> abc.txt</div></pre></td></tr></table></figure>
<ul>
<li>실행시 수정할 파일명을 같이 입력합니다.<br>  이후 사용법은 동일합니다. 입력을 하려면 i 명령을, 이동하려면 커서키나 마우스사용…</li>
</ul>
]]></content>
      
        <categories>
            
            <category> Vim </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Vim </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[vim 실행과 종료]]></title>
      <url>/2017/10/31/vim-%EC%8B%A4%ED%96%89%EA%B3%BC-%EC%A2%85%EB%A3%8C/</url>
      <content type="html"><![CDATA[<div class="video-container"><iframe src="//www.youtube.com/embed/SSu822Lgta8" frameborder="0" allowfullscreen></iframe></div>
<hr>
<h1 id="vim의-실행과-종료"><a href="#vim의-실행과-종료" class="headerlink" title="vim의 실행과 종료"></a>vim의 실행과 종료</h1><h2 id="실행하기"><a href="#실행하기" class="headerlink" title="실행하기"></a>실행하기</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$vi</span></div></pre></td></tr></table></figure>
<p>콘솔에서 vi를 입력하면 vi가 실행됩니다.</p>
<p>처음 실행이 되면 기본으로 normal mode 되고 이곳에 명령을 입력하면 됩니다.</p>
<p>텍스트를 입력하기 위해 i명령을 입력하면 하단의 상태줄 좌측에 입력하기 라고 변경됩니다.</p>
<p>이제 키보드로 타이핑하는 것이 입력이 됩니다.</p>
<p>텍스트를 입력해 보세요. ^^</p>
<h2 id="종료하기"><a href="#종료하기" class="headerlink" title="종료하기"></a>종료하기</h2><figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">"Ctrl+[ or ``Esc key`` 입력</span></div><div class="line">:<span class="keyword">w</span> <span class="keyword">abc</span>.txt	<span class="comment">"abc.txt로 저장, 저장하지 않고 종료하려면 :q!</span></div><div class="line">:q			<span class="comment">"종료</span></div></pre></td></tr></table></figure>
<h2 id="수정하기"><a href="#수정하기" class="headerlink" title="수정하기"></a>수정하기</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$vi</span> abc.txt</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> Vim </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Vim </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[vim설치]]></title>
      <url>/2017/10/30/vim%EC%84%A4%EC%B9%98/</url>
      <content type="html"><![CDATA[<h1 id="vim-설치하기"><a href="#vim-설치하기" class="headerlink" title="vim 설치하기"></a>vim 설치하기</h1><div class="video-container"><iframe src="//www.youtube.com/embed/SSu822Lgta8" frameborder="0" allowfullscreen></iframe></div>
<hr>
<p>대부분의 Unix계열은 기본으로 vim이 설치 되어 있습니다.<br>vim은 별도로 설치 하지 않아도 됩니다.<br>윈도우 계열은 vim.org에서 자신의 운영체제에 맞는 버젼을 다운받아 설치 하면 됩니다.<br>Unix계열은 gui를 사용 한다면 편의상 gvim을 설치하는 것이 좋습니다. 그래야 클립보드를 사용할 수 있습니다.</p>
<p>설치 방법은 아래와 같습니다.</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#red hat 계열</span></div><div class="line">$ sudo yum install gvim </div><div class="line"></div><div class="line"><span class="comment"># macos</span></div><div class="line">$ brew install macvim-dev/macvim/macvim</div><div class="line"></div><div class="line"><span class="comment"># debian 계열</span></div><div class="line">$ suso apt-get install gvim</div></pre></td></tr></table></figure>
<p><code>.bash_profile</code> 또는 <code>.profile</code>에 다음과 같이 alias를 추가 합니다.</p>
<p><code>sh
alias vi=gvim -v</code></p>
]]></content>
      
        <categories>
            
            <category> Vim </category>
            
        </categories>
        
        
        <tags>
            
            <tag> vim </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[외부명령어]]></title>
      <url>/2017/10/29/%EC%99%B8%EB%B6%80%EB%AA%85%EB%A0%B9%EC%96%B4/</url>
      <content type="html"><![CDATA[<h1 id="외부명령어"><a href="#외부명령어" class="headerlink" title="외부명령어"></a>외부명령어</h1><p>외부 명령어는 명령라기 보다는 프로그램이라고 생각하는 것이 편합니다.<br>운영체제의 기본 기능을 프로그램으로 만들어서 실행 하는 겁니다.</p>
<p>/bin 또는 /usr/bin에 들어 있습니다.</p>
<p>파일관리 : 파일의 목록을 확인하고, 복사하고, 지우고, 링크걸고, 찾고 하는 프로그램등이 있습니다.</p>
<p>보안관리 : 파일의 권한(읽기, 쓰기, 실행)을 바꾸거나 , 소유권을 바꾸는 프로그램이 있습니다.</p>
<p>프로세스관리: 내부명령에 기본으로 포함되어 있고, 외부 명령으로 기능이 확장되거나 관리가 용이 하도록 만든 프로그램들이 있습니다.</p>
<p>서버관리 : ssh, web, ftp, dns, db 등 많은 서버 프로그램이 있으며, 이들 서버를 관리하는 프로그램이 있습니다.</p>
<p>응용프로그램 : 업무를 도와 줄수 있는 워드, 엑셀, 데이타베이스, 그래픽, 사운드 관련 프로그램이 있습니다.</p>
<p>프로그램의 종류가 워낙 많고 사용법 또한 외우기 쉽지 않기 때문에 최대한 man page를 사용하는 것을 추천 합니다.</p>
]]></content>
      
        <categories>
            
            <category> Centos </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Centos </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[내부명령어]]></title>
      <url>/2017/10/29/%EB%82%B4%EB%B6%80%EB%AA%85%EB%A0%B9%EC%96%B4/</url>
      <content type="html"><![CDATA[<div class="video-container"><iframe src="//www.youtube.com/embed/SSu822Lgta8" frameborder="0" allowfullscreen></iframe></div>
<hr>
<h1 id="내부명령어"><a href="#내부명령어" class="headerlink" title="내부명령어"></a>내부명령어</h1><p>내부명령은 Shell에 들어있고 별도 파일로 존재 하지 않는다고 했습니다. 내부명령어는 프로그램 언어 이기 때문에 당연히 변수, 상수, 조건문, 반복문, 배열,등이 있겠죠. 그걸 내부 명령어라고 합니다.</p>
<p>컴퓨터는 명령을 내리면 결과를 돌려 줍니다. 받은 결과를 다른 명령령의 인자로 돌려 줄 수 있다는 것도 꼭 기억하시기 바랍니다.</p>
<p>Terminal에서</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># enable</span></div></pre></td></tr></table></figure>
<p>위와 같이 입력하면 현재 사용자가 쓸수 있는 내부 명령어를 보여 줍니다.<br>권한과 옵션에 따라 더많이 보일 수도 있고 적게 보일 수도 있습니다.</p>
<table>
<thead>
<tr>
<th>.</th>
<th></th>
<th></th>
<th></th>
<th></th>
<th>.</th>
</tr>
</thead>
<tbody>
<tr>
<td>.</td>
<td>:</td>
<td>[</td>
<td>alias</td>
<td>bg</td>
<td>bind</td>
</tr>
<tr>
<td>break</td>
<td>builtin</td>
<td>caller</td>
<td>cd</td>
<td>command</td>
<td>compgen</td>
</tr>
<tr>
<td>complete</td>
<td>compopt</td>
<td>continue</td>
<td>declare</td>
<td>dirs</td>
<td>disown</td>
</tr>
<tr>
<td>echo</td>
<td>enable</td>
<td>eval</td>
<td>exec</td>
<td>exit</td>
<td>export</td>
</tr>
<tr>
<td>fc</td>
<td>fg</td>
<td>getopts</td>
<td>hash</td>
<td>help</td>
<td>history</td>
</tr>
<tr>
<td>jobs</td>
<td>kill</td>
<td>let</td>
<td>local</td>
<td>logout</td>
<td>mapfile</td>
</tr>
<tr>
<td>popd</td>
<td>printf</td>
<td>pushd</td>
<td>pwd</td>
<td>read</td>
<td>readarray</td>
</tr>
<tr>
<td>readonly</td>
<td>return</td>
<td>set</td>
<td>shift</td>
<td>shopt</td>
<td>source</td>
</tr>
<tr>
<td>suspend</td>
<td>test</td>
<td>times</td>
<td>trap</td>
<td>true</td>
<td>type</td>
</tr>
<tr>
<td>typeset</td>
<td>ulimit</td>
<td>umask</td>
<td>unalias</td>
<td>unset</td>
<td>wait</td>
</tr>
<tr>
<td>false</td>
<td></td>
</tr>
</tbody>
</table>
<p>맨 마지막에 위 명령어의 설명이 있습니다. </p>
<p>bash script 명령은 파이프라인과 리다이렉션만 설명하고 bash script를 설명할 때 다루도록 하겠습니다.</p>
<p>cd, pwd, bg, fg, fc, echo, exec, kill, umask, export, source, logout 이 정도가 많이 쓰입니다.</p>
<table>
<thead>
<tr>
<th>명령어</th>
<th>설명</th>
</tr>
</thead>
<tbody>
<tr>
<td>cd</td>
<td>경로를 이동합니다.</td>
</tr>
<tr>
<td>pwd</td>
<td>현재 위치한 경로를 알려줍니다.</td>
</tr>
<tr>
<td>bg</td>
<td>&amp;를 붙여 실행시 백그라운드로 보냅니다. </td>
</tr>
<tr>
<td></td>
<td>인수가 없으면 백그라운드로 실행되고 있는 프로그램을 포그라운드로 실행합니다.</td>
</tr>
<tr>
<td>fg</td>
<td>백그라운드에서 실행되는 프로그램을 포그라운드로 가져옵니다.</td>
</tr>
<tr>
<td>echo</td>
<td>문자를 출력합니다.</td>
</tr>
<tr>
<td>exec</td>
<td>프로그램을 실행한다.</td>
</tr>
<tr>
<td>kill</td>
<td>실행되고 있는 프로세스를 종료합니다.</td>
</tr>
<tr>
<td>umask</td>
<td>사용자가 생성하는 파일을 mode로 설정한다.</td>
</tr>
<tr>
<td>export</td>
<td>환경변수를 등록합니다.</td>
</tr>
<tr>
<td>source</td>
<td>bash script가 있는 파일을 실행합니다.</td>
</tr>
<tr>
<td>logout</td>
<td>현재 사용자를 로그아웃 시킵니다.</td>
</tr>
</tbody>
</table>
<h2 id="파이프라인과-리다이렉션"><a href="#파이프라인과-리다이렉션" class="headerlink" title="파이프라인과 리다이렉션"></a>파이프라인과 리다이렉션</h2><h3 id="파이프라인"><a href="#파이프라인" class="headerlink" title="파이프라인"></a>파이프라인</h3><p><code>|</code> 파이프라인 : 파이프라인을 기준으로 좌측 명령의 결과를 우측의 명령에 인자로 전달합니다.</p>
<h3 id="리다이렉션"><a href="#리다이렉션" class="headerlink" title="리다이렉션"></a>리다이렉션</h3><p><code>&gt;</code> 리다이렉션 : 왼쪽 명령 처리 방향을 오른쪽 옵션으로 바꾸어 줍니다. 옵션은 파일 또는 장치(장치도 파일)<br><code>&gt;&gt;</code> 리다이렉션 : 왼쪽 명령 처리 방향을 오른쪽 옵션으로 추가해 바꾸어 줍니다. 옵션은 파일 또는 장치</p>
<ul>
<li><p>처음엔 무슨 뜻인지 햇갈릴 겁니다.<br>  프로그램은 순차적으로 실행됩니다. 왼쪽에서 오른쪽으로.<br>  처음 실행되는 프로그램이 출력을 한다면 출력방향을 바꾸어 줍니다.<br>  처음 실행되는 프로그램 입력을 대기한다면 입력방향을 바꾸어 줍니다.</p>
</li>
<li><p>기본 출력방향은 모니터 입니다.</p>
</li>
<li>기본 입력방향은 키보드 입니다.<br><code>0</code> 표준입력: /dev/stdin 생략가능<br><code>1</code> 표준출력: /dev/stdout 생략가능<br><code>2</code> 표준에러출력: /dev/stderr 에러를 출력하기 위해서는 필수.</li>
</ul>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$echo</span> <span class="string">"hello"</span></div><div class="line"><span class="variable">$echo</span> <span class="string">"hello"</span> &gt; aaa.txt</div><div class="line"><span class="variable">$cat</span> aaa.txt</div><div class="line">hello</div><div class="line"><span class="variable">$cat</span> &lt; /dev/stdin</div><div class="line">hello world</div><div class="line">hello world</div><div class="line">^C</div></pre></td></tr></table></figure>
<ul>
<li><p>echo는 문자 또는 문자열을 출력해주는 프로그램입니다.<br>기본 방향이 모니터이기 때문에 모니터에 문자열을 출력해 주겠죠.<br>출력 방향을 aaa.txt(파일)로 바꾸면 화면에는 아무것도 출력되지 않고 aaa.txt을 생성해서 파일안에 hello라고 써 넣습니다.</p>
</li>
<li><p>cat이라는 프로그램은 파일을 출력해 주는 외부 명령어 입니다.<br>사용법은 cat 파일명 하면 파일명을 화면으로 출력해 줍니다.<br>입력을 파일로부터 받는다는 겁니다.<br>위 예제는 cat의 입력방향을 표준입력인 키보드로 바꾸어 준겁니다.<br>종료하려면 <code>Ctrl + C</code> 를 입력합니다.</p>
</li>
<li><p>옵션이 파일명이면 파일로 만들어 주거나 파일에 덧붙여 줍니다. xNIX는 장치도 파일입니다. 파이프라인과 리다이렉션은 무척 중요합니다. 지금은 가볍게 이해 정도만 해주세요. 이해가 안되도 넘어 가도 됩니다. </p>
</li>
</ul>
<h2 id="와일드카드"><a href="#와일드카드" class="headerlink" title="와일드카드"></a>와일드카드</h2><table>
<thead>
<tr>
<th>문자</th>
<th>설명</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>*</code></td>
<td>모든 문자</td>
</tr>
<tr>
<td><code>?</code></td>
<td>문자하나</td>
</tr>
<tr>
<td><code>[characters]</code></td>
<td>characters 문자 집합에 포함된 문자</td>
</tr>
<tr>
<td><code>[!characters]</code></td>
<td>characters 문자 집합에 포함 되지 않은 문자</td>
</tr>
<tr>
<td><code>[[:class:]]</code></td>
<td>알파벳과 숫자를 지정</td>
</tr>
<tr>
<td><code>[:alnum:]</code></td>
<td>알파벳과 숫자를 지정</td>
</tr>
<tr>
<td><code>[:alpha:]</code></td>
<td>알파벳 지정</td>
</tr>
<tr>
<td><code>[:digit:]</code></td>
<td>숫자를 지정</td>
</tr>
<tr>
<td><code>[:lower:]</code></td>
<td>모든 소문자</td>
</tr>
<tr>
<td><code>[:upper:]</code></td>
<td>모든 대문자</td>
</tr>
</tbody>
</table>
<p>와일드 카드도 너무 중요한 명령입니다. 지금은 이런것이 있다는 것만 너무 중요한데 그냥 넘어 가는구나 생각만 하세요. ls 명령에서 다시 알아 보겠습니다. </p>
<h2 id="man-page-도움말-보기"><a href="#man-page-도움말-보기" class="headerlink" title="man page 도움말 보기"></a>man page 도움말 보기</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># man cd</span></div><div class="line"><span class="comment"># man pwd</span></div><div class="line"><span class="comment"># man bash</span></div></pre></td></tr></table></figure>
<p>man 명령을 이용해 도움말을 볼 수 있습니다.<br>man 도움말에서 h-key를 누르면 사용법을 볼수 있습니다.<br>q-key를 누르면 종료됩니다. 커서키를 이용해서 위, 아래로 이동하며 스크롤도 할 수 있고, 찾기도 할 수 있습니다.</p>
<hr>
<h1 id="BASH-BUILTIN-명령어-설명"><a href="#BASH-BUILTIN-명령어-설명" class="headerlink" title="BASH BUILTIN 명령어 설명"></a>BASH BUILTIN 명령어 설명</h1><ul>
<li><code>: [인수들]</code> <ul>
<li>아무런 효과도 없다; 인수들을 확장하고 명시된 리다이렉션을 행하는 것을 제외하고 아무 일도 하지 않는다. 종료 상태값 0 을 반환한다.</li>
</ul>
</li>
<li><code>.</code> <ul>
<li>파일명 [인수들] | 현재의 디렉토리를 나타낸다. 인수로는 디렉토리와 파일명이 올수 있다.</li>
</ul>
</li>
<li><code>source 파일명 [인수들]</code> <ul>
<li>파일명 으로부터 명령을 읽어 현재 쉘 환경 안에서 실행한다. 파일명 에서 읽어 수행한 마지막 명령의 종료 상태값을 반환한다. 파일명 에 슬래쉬가 없으면 PATH 변수에 들어있는 경로명을 사용하여 파일명 을 검색한다. PATH 변수에서 찾는 파일이 실행 파일일 필요는 없다. PATH 에서 파일을 찾을 수 없으면 현재 디렉토리를 찾는다. 인수들을 적으면 파일을 실행할 때 위치 매개변수로 사용한다. 그렇지 않으면 위치 매개변수는 변하지 않는다. 스크립트 내에서 종료한 마지막 명령의 상태값을 반환하고(아무 명령도 실행되지 않았으면 0) 파일명 을 찾을 수 없으면 거짓을 반환한다.</li>
</ul>
</li>
<li><p><code>alias [이름[=값] ...]</code> </p>
<ul>
<li>아무런 인수 없이 <code>Alias</code>를 실행하면 표준 출력에 이름=값의 형식으로 앨리어스 목록을 출력해준다. 인수를 제공하면 각각의 이름에 대하여 값을 앨리어스로 정의한다. 값 뒤에 스페이스를 두면 앨리어스 확장 시 그 다음 단어에 대해서도 앨리어스 확장이 가능한지 점검하도록 할 수 있다. 인수 목록에서 값을 주지 않은 이름에 대해서는 앨리어스의 이름과 값을 출력한다. 주어진 이름에 대한 앨리어스가 정의되어 있지 않은 경우가 아니라면 참값을 반환한다.</li>
</ul>
</li>
<li><p><code>bg [작업명세]</code></p>
<ul>
<li><code>&amp;</code> 를 붙여 실행한 것처럼 작업명세가 가리키는 작업을 백그라운드로 보낸다. 작업명세가 없으면 현재 작업에 해당하는 작업이 사용된다. <code>bg</code> 작업명세 는 작업 제어가 불가능한 상태에서 실행하거나, 작업 제어는 가능하지만 작업명세를 찾을 수 없거나 작업 제어 없이 시작한 경우를 제외하고 0 을 반환한다.</li>
</ul>
</li>
<li><p><code>bind [-m 키맵] [-lvd] [-q 이름]</code></p>
</li>
<li><code>bind [-m 키맵] -f 파일명</code> </li>
<li><p><code>bind [-m 키맵] 키시퀀스:함수이름</code> </p>
<ul>
<li>readline 의 현재 키, 함수 바인딩을 표시하거나 readline 함수나 매크로에 키 시퀀스를 결합한다. 바인딩 문법은 .inputrc 의 문법과 같지만 각 바인딩을 개별적인 인수로 전달해야 한다; 예를 들어, ‘“\C-x\C-r”: re-read-init-file’. 옵션을 적는 경우에는 다음과 같은 의미를 가진다:<pre><code>- ``-m`` 키맵 뒤이어 나오는 바인딩에 의해 영향을 받는 키맵으로 키맵 을 사용한다. 가능하 키맵 이름으로는 emacs, emacs-standard, emacs-meta, emacs-ctlx, vi, vi-move, vi-command, 그리고 vi-insert 이 있다. vi는 vi-command와 같다; emacs는 emacs-standard와 같다.
- -l 모든 readline 함수의 이름을 나열한다.
- -v 현재 함수 이름과 바인딩을 나열한다.
- -d 다시 읽을 수 있는 형태로 함수 이름과 바인딩을 덤프한다.
- -f 파일명 filename으로부터 키 바인딩을 읽는다.
- -q 함수 함수를 실행시키는 키에 대하여 알아본다. 알 수 없는 옵션이 주어졌거나 에러가 발생한 경우가 아닐 때에는 0 이 반환된다.
</code></pre></li>
</ul>
</li>
<li><p><code>break [n]</code> </p>
<ul>
<li>for, while, until 루프 안에서 탈출한다. n을 명시하면 n 레벨을 탈출한다. n 은 ≥ 1 여야 한다. n 이 둘러 싸고 있는 루프의 갯수보다 크면 모든 루프를 탈출한다. break 이 실행될 때 루프를 실행 중이 아닌 경우를 제외하고 0 을 반환한다.</li>
</ul>
</li>
<li><p><code>builtin 쉘-내부명령 [인수들]</code> </p>
<ul>
<li>명시한 쉘 내부 명령에 인수들 을 주어 실행하고 종료 상태값을 반환한다. 쉘 내부 명령과 같은 이름의 함수를 정의하고 그 함수 안에서 내부 명령의 기능을 활용하고자 할 때 유용하다. 보통 cd 내부 명령을 이런 식으로 재정의하곤 한다. 쉘-내부명령 이 쉘 내부 명령이 아닐 때 거짓을 반환한다.</li>
</ul>
</li>
<li><p><code>cd [디렉토리]</code> </p>
<ul>
<li>현재 디렉토리를 디렉토리로 변경한다. HOME 변수 값이 기본 디렉토리 값이다. CDPATH 변수는 디렉토리 를 포함하는 디렉토리에 대한 검색 경로를 정의한다. 서로 다른 디렉토리는 콜론(:)으로 구분한다. CDPATH 에 널 디렉토리 이름을 넣으면 현재 디렉토리 즉 <code>.</code>와 같다. 디렉토리 가 슬래쉬(/)로 시작하면 CDPATH 는 사용되지 않는다. 전달인수로 - 를 사용하면 <code>$OLDPWD</code> 와 같다. 성공적으로 디렉토리를 변경하면 참, 그렇지 않으면 거짓을 반환한다.</li>
</ul>
</li>
<li><p><code>command [-pVv] 명령 [인수 ...]</code></p>
<ul>
<li>보통의 쉘 함수 찾아보기를 하지 않고 명령 을 인수 와 함께 실행한다. 내부 명령 또는 PATH 에서 찾을 수 있는 명령만을 실행한다. are executed. If the </li>
<li>-p 옵션을 주면 PATH 의 기본값을 사용하여 명령 에 대한 검색을 하므로 표준 유틸리티를 찾을 수 있도록 보장해 준다. </li>
<li>-V 또는 -v 옵션을 주면 명령 에 대한 설명을 출력한다. -v 옵션은 명령 을 호출할 때 사용할 명령 또는 경로명을 가리키는 간단한 단어를 출력한다; -V 옵션은 좀 더 자세한 설명을 출력한다. – 를 전달 인수로 적으면 나머지 인수에 대한 옵션 점검을 하지 않는다. -V 또는 -v 옵션을 주었을 때 종료 상태값은 명령 이 발견되면 0, 그렇지 않으면 1 이 된다. 두 옵션 모두 없고 에러가 발생하거나 명령 을 찾을 수 없으면 종료 상태값은 127 이 된다. 그렇지 않을 때 command 내부 명령의 종료 상태값은 명령 의 종료 상태값이다.</li>
</ul>
</li>
<li><p><code>continue [n]</code> </p>
<ul>
<li>둘러 싸고 있는 <code>for, while, until</code> 루프의 다음 순차 작업을 재개한다. <code>n</code> 을 명시하면, <code>n</code> 번째 루프를 재개한다. <code>n 은 ≥ 1</code> 여야 한다. <code>n</code> 이 둘러 싸고 있는 루프 갯수보다 크면 가장 바깥쪽의 루프(<code>최상위 레벨</code> 루프)를 재개한다. <code>continue</code> 명령을 실행할 때 쉘이 루프를 실행하고 있지 않은 경우가 아니라면 반환값은 0 이다.</li>
</ul>
</li>
<li><p><code>declare [-frxi] [이름[=값]]</code></p>
</li>
<li><p><code>typeset [-frxi] [이름[=값]]</code></p>
<ul>
<li>변수를 선언하거나 변수에 속성을 부여한다.    아무런 이름도 주어지지 않았을 때에는 변수의 값을 표시한다. 옵션을 사용하여 특정 속성의 변수에 대해서만 출력하도록 제한할 수 있다.<ul>
<li>-f | 함수 이름만 사용</li>
<li>-r | 이름을 읽기 전용으로 만든다. 그 뒤에는 지정문을 사용하여 값을 지정할 수 없다.</li>
<li>-x | 이름을 그 뒤에 나오는 명령에게 환경을 통해 export하도록 한다.</li>
<li>-i | 변수를 정수처럼 취급한다; 변수에 값을 지정하면 산술 평가( 산 이 옵션을 끄려면 <code>-</code> 대신 <code>+</code>를 사용한다. 함수 안에서 사용하면 local 명령처럼 이름을 지역적으로 만든다. 잘못된 옵션을 만났다든지, <code>&quot;-f foo=bar&quot;</code>를 사용하여 함수를 정의하려고 시도했다든지, 이름이 적접한 쉘 변수 이름이 아니라든지, 읽기 전용 변수의 읽기 전용 상태를 해제하려 한다든지, 또는 -f 를 가지고 존재하지 않은 함수를 표시하려 한 경우가 아니라면 반환값은 0 이다.</li>
</ul>
</li>
</ul>
</li>
<li><p><code>dirs [-l] [+/-n]</code></p>
<ul>
<li>현재까지 기억하고 있는 디렉토리 목록을 표시한다. 디렉토리를 목록에 추가할 때에는 pushd 명령을 사용한다; popd 명령은 목록으로부터 최근 디렉토리를 꺼내고 그 디렉토리로 이동하도록 한다.<br>  옵션 | 설명<br>  —|—<br>  <code>+n</code> | 옵션은 아무 옵션 없이 dirs 를 실행했을 때 보이는 목록의 왼쪽부터 세어 n번째 항목을 보여준다. 0 부터 시작한다.<br>  <code>-n</code> | 옵션은 아무 옵션 없이 dirs 를 실행했을 때 보이는 목록의 오른쪽부터 세어 n번째 항목을 보여준다. 0 부터 시작한다.<br>  <code>-l</code> | 긴 목록을 만들어 보여준다; 기본 목록 나열 형식에서는 홈 디렉토리를 나타낼 때 틸드를 사용한다. 틀린 옵션을 주거나 n 이 디렉토리 스택 범위를 넘어서는 경우가 아니라면 반환값은 0 이 된다.</li>
</ul>
</li>
<li><p><code>echo [-neE] [인수 ...]</code></p>
<ul>
<li><p>스페이스로 구분되어 있는 인수들을 출력한다. 반환값은 항상 0 이다.</p>
<ul>
<li>-n을 명시하면 마지막의 개행문자를 출력하지 않는다.</li>
<li>-e 옵션을 주면 백슬래쉬 이스케이프 문자를 해석할 수 있도록 해준다.</li>
<li><p>-E 옵션은 시스템에서 기본적으로 이스케이프 문자를 해석하는 상황이라 할 지라도 이스케이프 문자를 해석하지 않도록 지시한다.</p>
<p>escape 문자| 설명<br>—|—<br><code>\a</code>   |경 고 (벨)<br><code>\b</code>   |백스페이스<br><code>\c</code>   |마지막 개행문자를 생략함<br><code>\f</code>   |폼 피드<br><code>\n</code>   |개행문자<br><code>\r</code>   |캐리지 리턴<br><code>\t</code>   |수평 탭<br><code>\v</code>   |수직 탭<br><code>\\</code>   |백슬래쉬<br><code>\nnn</code> |ASCII 코드가 nnn (8진수)인 문자</p>
</li>
</ul>
</li>
</ul>
</li>
<li><p><code>enable [-n] [|-all] [이름 ...]</code></p>
<ul>
<li>쉘 내부 명령을 켜거나 끈다. 이 기능을 사용하면 쉘 내부 명령과 같은 이름을 갖는 디스크 명령에 대하여 완전한 경로명을 적지 않고도 실행할 수 있다. -n을 사용하면 각 이름의 사용을 끈다; 그렇지 않으면 이름의 사용을 켠다. 예를 들어, 쉘 내부 명령 버전 대신 PATH 에서 찾을 수 있는 test 바이너리를 사용하려면 <code>enable -n test</code> 라고 실행한다. 인수가 없으면 사용 가능한 모든 쉘 내부 명령 목록을 출력한다. -n만 주면 사용 불능 상태의 내부 명령 목록을 출력한다. -all만 주면 모두 내부 명령에 대하여 가능, 불가능 여부를 표시하여 출력해준다. enable 명령은 -all 대신 -a 도 받아들인다. 이름 이 쉘 내부 명령이 아닌 경우를 제외하고 반환값은 0 이다.</li>
</ul>
</li>
<li><p><code>eval [인수 ...]</code></p>
<ul>
<li>모든 인수를 읽어 하나의 명령으로 결합한다. 그 다음 이 명령을 읽어 쉘에서 실행하고 종료 상태값을 eval 명령의 반환값으로 돌려준다. 인수가 하나도 없거나 널 인수이면 eval 은 참을 반환한다.</li>
</ul>
</li>
<li><p><code>exec [[-] 명령 [인수]]</code></p>
<ul>
<li>명령 을 명시하면 그 명령으로 쉘 프로세스를 교체한다. 새로운 프로세스는 만들어지지 않는다. 인수 는 명령의 인수가 된다. 첫번째 인수가 - 이면 쉘은 명령 에 전달하는 0 번째 인수에 대쉬를 넣는다. 이 과정은 로그인이 하는 일과 같다. 어떤 이유에서든 파일을 실행할 수 없으면 쉘 변수 no_exit_on_failed_exec가 존재하여 거짓을 반환하는 경우를 제외하고 비대화형 쉘은 종료한다. 파일을 실행할 수 없을 때 대화형 쉘은 거짓을 반환한다. 명령 을 명시하지 않으면 현재 쉘에서 리다이렉션만 효력을 발휘하고 반환값은 0 이 된다.</li>
</ul>
</li>
<li><p><code>exit [n]</code></p>
<ul>
<li>상태값 n을 가지고 쉘을 종료한다. n 을 생략하면 실행한 마지막 명령의 종료 상태값을 갖는다. 쉘을 종료하기 전에 EXIT 에 대한 트랩(trap) 루틴이 실행된다.</li>
</ul>
</li>
<li><p><code>export [-nf] [이름[=단어]] ...</code></p>
</li>
<li><p><code>export -p</code></p>
<ul>
<li>나열한 이름 을 그 다음에 나오는 명령들의 환경에 자동적으로 export되도록 기억해 둔다.<br>  -f 옵션을 주면 이름 은 함수를 가리킨다. 아무런 이름 도 적지 않거나 또는<br>  -p 옵션을 주면 쉘에서 export되는 모든 이름 목록을 출력한다.<br>  -n 옵션은 주어진 이름의 변수로부터 export 속성을 제거하도록 한다.<br>  – 인수를 주면 그 나머지 인수에 대한 옵션 점검을 하지 않도록 한다. 잘못된 옵션을 만나거나 이름이 적법한 쉘 변수 이름이 아니거나 또는 함수가 아닌 이 상태값 0 을 반환한다.</li>
</ul>
</li>
<li><p><code>fc [-e 편집기이름] [-nlr] [처음] [마지막]</code></p>
</li>
<li><p><code>fc -s [패턴=치환텍스트] [명령]</code></p>
<ul>
<li>명령을 수정한다. 첫번째 형식에서, 명령의 범위는 처음 부터 마지막 범위에 있는 명령을 히스토리 목록에서 선택한다. 처음 과 마지막 은 문자열(그 문자열로 시작하는 최근 명령을 찾고자 할 때) 또는 숫자 (히스토리 목록의 인덱스로 사용하며 음수일 때에는 현재 명령 번호로부터 떨어진 만큼을 뜻한다)로 명시할 수 있다. 마지막 을 명시하지 않으면 현재 명령으로 설정되고(따라서 fc -l -10 은 최근 10 개의 명령을 출력하게 된다) 그렇지 않으면 처음 까지 출력한다. If 처음 을 명시하지 않으면 편집을 위해 이전 명령으로 설정하고 표시를 위해 -16 을 설정한다.<br>-n 플래그를 적으면 나열할 때 명령 번호가 나타나지 않게 한다.<br>-r 플래그는 명령의 표시 순서를 반대로 한다.<br>-l 플래그가 있으면 명령을 표준 출력에 나열한다. 그렇지 않을 때에는 편집기이름 이 가리키는 편집기에서 이 명령들을 포함하는 파일을 열면서 시작한다. 편집기이름 이 없으면 FCEDIT 변수의 값을 사용하며 FCEDIT 가 설정되어 있지 않을 때에는 EDITOR 값을 사용한다. 둘 다 설정되어 있지 않으면 를 사용한다. 편집을 마친 후에는 편집한 명령들이 화면에 표시되고 실행된다.<br>두번째 형태에서, 명령은 패턴이 치환텍스트로 교체된 후에 다시 실행된다. 유용한 앨리어스로는 <code>r=fc -s</code>가 있다. 앨리어스 적용 후 <code>r cc</code> 라고 치면 <code>cc</code>로 시작하는 최근 명령을 실행하고 <code>r</code>이라고 치면 마지막 명령을 다시 실행하게 된다.<br>첫번째 형태를 사용하면 잘못된 옵션이 있거나 처음 또는 마지막 이 히스토리 행 범위를 벗어나지만 않으면 반환값 0 을 갖는다. -e 옵션을 주면 마지막 실행 명령의 값이 반환값이 되거나 명령의 임시 파일에서 오류가 발생하는 경우 실패 값을 가진다. 두번째 형태를 사용하면 명령 이 유효한 히스토리 행을 가리키지 못하여 fc 가 실패를 반환하는 경우가 아니라면 재실행한 명령의 반환값을 반환값으로 사용한다.</li>
</ul>
</li>
<li><p><code>fg [작업스펙]</code> </p>
<ul>
<li>작업스펙 이 가리키는 바를 포그라운드에 놓고 현재 작업이 되도록 한다. 작업스펙 이 존재하지 않으면 쉘에서 현재 작업이라고 부르는 것을 사용한다. 반환값은 포그라운드에 놓인 명령의 반환값이거나 작업 제어 불가능 상태에서 실행된 경우에는 실패이다. 그리고 작업 제어 가능한 상태에서도 작업스펙 이 유효한 작업을 가리키지 않거나 작업스펙 이 작업 제어 없이 실행된 작업을 가리킬 때에도 실패이다.</li>
</ul>
</li>
<li><p><code>getopts 옵션문자열 이름 [인수]</code> </p>
<ul>
<li>getopts 는 위치 매개변수를 파싱하기 위해 사용하는 쉘 프로시져이다.    옵션문자열 은 인식하고자 하는 옵션 문자를 포함한다; 문자 뒤에 콜론이 오면 옵션 다음에 화이트스페이스로 분리된 인수가 온다는 뜻이다. 매번 실행될 때마다, getopts 는 다음 옵션을 쉘 변수 이름 에 넣는다. 이름 이 존재하지 않을 때에는 초기화한다. 그리고 처리할 다음 인수의 인덱스는 OPTIND 변수에 넣는다. OPTIND 는 쉘 또는 쉘 스크립트가 실행될 때마다 1 로 초기화된다. 옵션에서 인수를 필요로 할 때에는 getopts 에서 그 인수를 OPTARG 변수에 넣는다. 쉘이 자동으로 OPTIND 변수를 재설정하지는 않는다;같은 쉘 실행 상태에서 새로운 매개변수 집합을 사용하려면 getopts 를 부를 때마다 수동으로 재설정해 주어야 한다.<br>getopts 는 두 가지 방식으로 오류를 보고할 수 있다. 옵션문자열 의 첫번째 문자가 콜론이면 조용한 오류 보고가 사용된다. 정상 동작 상태에서는 잘못된 옵션 또는 누락된 인수의 경우 증상을 설명하는 메시지가 출력된다. OPTERR 변수를 0 으로 설정하면 옵션문자열 의 첫번째 문자가 콜론이 아니라 하더라도 오류 메시지를 출력하지 않는다.<br>잘못된 옵션을 만나면, getopts 는 이름 에 ? 를 넣고 조용하게 보고하는 상태가 아닌 경우, 오류 메시지를 출력하고 OPTARG 를 unset 한다. getopts 이 조용한 모드에 있는 경우 찾아낸 옵션 문자를 OPTARG 에 넣고 증상 설명 메시지를 출력하지 않는다.<br>필요한 인수를 찾을 수 없으며 getopts 가 조용한 모드에 있지 않을 때에는 물음표를 (?) 이름 에 넣고 OPTARG 를 unset 하며 증상 설명 메시지를 출력한다. getopts 가 조용한 모드에 있으면 콜론을 (:) 이름 에 넣고 OPTARG 을 찾아낸 옵션 문자로 설정한다.<br>getopts 는 보통 위치 매개변수를 파싱하지만 인수 부분에 더 많은 인수를 주면 getopts 는 대신 그 인수를 파싱한다. getopts 는 명시한 것이든 명시하지 않은 것이든 옵션을 찾으면 참을 반환한다. 옵션의 끝이거나 에러가 발생하면 거짓을 반환한다.</li>
</ul>
</li>
<li><p><code>hash [-r] [이름]</code><br>  각 이름 에 대하여, 그 이름이 가리키는 명령의 완전한 경로명을 결정하여 기억해 둔다.<br>  -r 옵션을 주면 기억해 둔 위치를 모두 잊도록 지시한다. 아무런 인수도 적지 않으면 기억해 둔 명령에 대한 정보를 출력한다.<br>  – 라는 인수를 주면 그 뒤에 있는 인수에 점검을 하지 않도록 지시한다. 이름 이 없거나 잘못된 옵션이<br>   주어진 경우가 아닌 경우에는 참을 반환한다.</p>
</li>
<li><p><code>help [패턴]</code><br>  내부명령에 대한 도움말을 출력한다. 패턴 을 적으면, help 는 패턴과 일치하는 모든 명령에 대하여 자세한 도움말을 준다; 패턴을 적지 않으면 모든 내부명령 목록을 출력한다. 패턴과 일치하는 명령이 없는 경우를 제외하고 반환값은 0 이다.</p>
</li>
<li><p><code>history [n]</code></p>
</li>
<li><p><code>history -rwan [filename]</code><br>  옵션이 없으면, 행 번호와 함께 명령 히스토리 목록을 표시한다. <code>*</code> 표시가 있는 행은 수정한 적이 있다는 뜻이다. n 인수를 주면 최근 n 행만을 표시한다. 옵션이 아닌 인수를 적으면, 히스토리 파일 이름으로 간주한다 ;없으면 HISTFILE 변수의 값을 사용한다.<br>   옵션이 있는 경우 다음과 같은 뜻을 갖는다:<br>   -a     히스토리 파일에 <code>새로운</code> 히스토리 행(현재 bash 세션의 시작부터 입력한 히스토리 행)을 추가한다.<br>   -n     히스토리 파일로부터 현재 히스토리 목록으로 아직 읽어들이지 않는 히스토리 행을 읽어들인다. 현재 bash 세션 시작부터 히스토리 파일에 추가한 행을 말한다.<br>   -r     히스토리 파일의 내용을 읽어 현재 히스토리로 사용한다.<br>   -w     현재 히스토리를 히스토리 파일의 기존 내용에 덮어 쓴다. 옵션을 잘못 적거나 히스토리 파일을 읽거나 쓰는 도중 오류가 발생한 경우를 제외하고 반환값은 0 이다.</p>
</li>
<li><p><code>jobs [-lnp] [ 작업스펙 ... ]</code></p>
</li>
<li><p><code>jobs -x 명령 [ 인수 ... ]</code><br>  첫번째 형태는 활동 중인 작업을 나열한다. -l 옵션을 더하면 일반적인 정보에 프로세스 ID까지 더하여 나열하도록 한다; -p 옵션은 작업의 프로세스 그룹 리더의 프로세스 ID만 나열하도록 한다. -n 옵션은 지난 번 통보 이후 상태 변화를 일으킨 작업만 표시하도록 한다. 작업스펙 을 적으면, 작업스펙에 맞는 작업에 대한 정보만으로 출력을 제한한다. 잘못된 옵션을 적거나 잘못된 작업스펙 을 적은 경우가 아니라면 반환값은 0 이다.<br>  -x 옵션을 붙이면, jobs 명령은 명령 또는 인수 안 에서 작업스펙 을 발견할 때마다 해당 프로세스 그룹 ID로 치환하고 명령 에 인수 를 주어 실행하고 그 종료 상태값을 반환한다.</p>
</li>
<li><p><code>kill [-s 시</code></p>
</li>
<li><p><code>kill -l [시그널번호]</code><br>  pid 또는 작업스펙이 가리키는 프로세스에게 시그널스펙 이 가리키는 시그널을 보낸다. 시그널스펙 은 SIGKILL 과 같은 시그널 이름 또는 시그널 번호이다. 시그널스펙 이 시그널 이름인 경우, 대소문자는 구별하지 않으며 SIG 라는 접두어를 써도 되고 쓰지 않아도 된다. 시그널스펙 이 없으면, SIGTERM 이라고 가정한다.<br>  -l 인수를 적으면 시그널 이름을 나열해 준다. -l 이 있을 때에는 어떤 인수가 있으면, 특정 시그널의 이름을 나열하고 반환값은 0 이다.<br>  – 인수를 주면 그 후 나머지 인수에 대한 옵션 점검을 하지 않도록 강제한다. kill 최소한 한 개의 시그널을 성공적으로 전송했으면 참을 반환한다. 오류가 발생하거나 잘못된 옵션을 만나면 거짓을 반환한다.</p>
</li>
<li><p><code>let 인수 [인수 ...]</code></p>
<ul>
<li>각각의 인수 는 계산한 수치 표현식이다.( 산 마지막 인수 를 평가하여 그 결과가 0 이면, let 은 1 을 반환한다; 나머지 경우에는 0 을 반환한다.</li>
</ul>
</li>
<li><p><code>local [이름[=값] ...]</code></p>
<ul>
<li>각 인수에 대하여 이름 이라는 지역 변수를 만들고 값 을 할당한다. local 을 함수 안에서 사용하면, 이름 변수의 가시 범위(scope)를 그 함수와 자식 함수로 제한한다. 피연산자가 없으면, local 은 지역변수 목록을 표준 출력으로 출력한다. local 를 함수 안에서 사용하지 않는 것은 오류이다. local 을 함수 외부에서 사용했거나 잘못된 이름 을 적은 경우가 아니라면 반환 상태값은 0 이다.</li>
</ul>
</li>
<li><p><code>logout</code> </p>
<ul>
<li>로그인 쉘을 마친다.</li>
</ul>
</li>
<li><p><code>popd [+/-n]</code></p>
<ul>
<li>디렉토리 스택에서 항목을 제거한다. 인수가 없으면 스택의 최상위 디렉토리를 제거하고 그 새로운 상위 디렉토리로 cd 한다.</li>
<li><code>+n</code> dirs 명령 결과 보이는 목록의 왼쪽부터 세기 시작하여 n번째 항목을 제거한다. 0 부터 센다. 예를 들어, <code>popd +0</code>는 첫번째 디렉토리를, <code>popd +1</code>는 두번째 디렉토리를 제거한다.</li>
<li><code>-n</code> dirs 명령 결과 보이는 목록의 오른쪽부터 세기 시작하여 n번째 항목을 제거한다. 0 부터 센다. 예를 들어, <code>popd -0</code>는 맨 마지막 디렉토리를, <code>popd -1</code>는 맨 마지막 바로 전 디렉토리를 제거한다.</li>
<li>popd 명령이 성공적이면, dirs 명령도 실행하며 반환 상태값은 0 이다. popd 는 잘못된 옵션을 적거나, 디렉토리 스택이 비어 있거나, 존재하지 않는 디렉토리 스택 항목을 명시하거나 디렉토리 이동이 실패할 경우 거짓을 반환한다.</li>
</ul>
</li>
<li><p><code>pushd [디렉토리]</code></p>
</li>
<li><p><code>pushd +/-n</code></p>
<ul>
<li>디렉토리를 디렉토리 스택의 맨 위에 추가하거나, 스택을 회전시켜 스택의 최 상위 항목을 현재 작업 디렉토리로 만든다. 인수가 없으면, 최상위 두 디렉토리를 교환한다. 디렉토리 스택이 비어 있지 않으면 0을 반환한다.</li>
<li><code>+n</code> n번째 디렉토리( dirs 명령이 보여주는 목록의 맨 왼쪽부터 센다) 이 맨 위에 놓이도록 스택을 회전시킨다. )</li>
<li><code>-n</code> n번째 디렉토리(오른쪽부터 센다)가 맨 위에 놓이도록 스택을 회전시킨다. 디렉토리를 디렉토리 스택 맨 위에 추가하여 새로운 작업 디렉토리가 되도록 한다. </li>
<li>pushd 명령이 성공적이면, dirs 명령도 수행한다. 첫번째 형식을 사용하면, pushd 는 디렉토리 로 cd 하는 것을 실패하지 않는 한, 0 을 반환한다. 두번째 형식을 사용하면, pushd 는 디렉토리 스택이 비어 있거나, 존재하지 않는 디렉토리 스택 항목을 선택하거나, 지정한 새 현재 디렉토리로 이동하는데 실패한 경우가 아니면 0을 반환한다.</li>
</ul>
</li>
<li><p><code>pwd</code></p>
<ul>
<li>현재 디레토리의 절대 경로명을 출력한다. set 내부명령의 -P 옵션이 설정되어 있으면 경로명에 심볼릭 링크를 포함하지 않는다. ( 쉘 현재 디렉토리의 경로명을 읽는 도중 오류가 발생하지 않았다면 결과 반환값은 0이다.</li>
</ul>
</li>
<li><p><code>read [-r] [이름 ...]</code> </p>
<ul>
<li>표준 입력으로부터 한 줄을 읽어들여 그 첫번째 단어를 첫번째 이름 에 할당하고 두번째 단어를 두번째 이름 에 할당하고 나머지 남은 단어들을 마지막 이름 에 할당한다. IFS 에 있는 단어만을 단어 구분자로 인식한다. 아무런 이름 도 적지 않으면 읽어들인 행을 REPLY 변수에 할당한다. 파일 끝 문자를 만난 경우를 제외하고 반환값은 0 이다. -r 옵션을 주면 백슬래쉬-개행 문자 쌍을 무시하지 않고 백슬래쉬를 행의 일부로 인식한다.</li>
</ul>
</li>
<li><p><code>readonly [-f] [이름 ...]</code></p>
</li>
<li><p><code>readonly -p</code> </p>
<ul>
<li>주어진 이름들을 읽기 전용으로 표기하고 다음에 나올 대입문에 의해 이름들의 값이 바뀌지 않도록 해 준다. -f 옵션을 더하면, 이름에 해당하는 함수를 읽기 전용으로 표기한다. 아무런 인수도 없거나 -p 옵션을 주어져 있는 경우에는, 모든 읽기 전용 변수 목록을 출력한다. – 인수는 나머지 인수에 대한 점검을 하지 않도록 지시한다. 잘못된 옵션이 있거나 이름들 중 하나라도 적접한 쉘 변수 이름이 아닌 경우 또는 -f 다음에 나온 이름 이 함수가 아닌 경우를 제외하고는 반환 상태값이 0 이다.</li>
</ul>
</li>
<li><p><code>return [n]</code><br>  함수를 상태 반환값 n 을 갖고 종료하도록 한다. n 을 생략하면 함수 몸체 안에서 실행한 마지막 명령의 반환 상태값을 사용한다. 함수 밖에서 사용했지만 . (source) 명령으로 실행한 스크립트에서 사용하면, 쉘은 그 스크립트 실행을 멈추고 n 또는 스크립트에서 실행한 마지막 명령의 종료 상태값을 스크립트의 종료 상태값으로 반환한다. 함수 밖에서 사용했으며 .[uB85C] 실행한 스크립트가 아니라면 반환 상태값은 거짓이 된다.</p>
</li>
<li><p><code>set [--abefhkmnptuvxldCHP] [-o 옵션] [인수 ...]</code><br>  -a     뒤이어 나올 명령의 환경으로 export하기 위해 수정 또는 생성할 변수를 자동으로 표기한다.<br>  -b     종료한 백그라운드 작업의 상태를 다음 번 주 프롬프트 전에 보여 주는 것이 아니라 즉시 보여 주도록 한다. ( 쉘 섹션에서 notify 참고)<br>  -e     간단한-명령 ( 쉘 종료하면 즉시 종료한다. 만약 실패한 명령이 until 또는 while 루프의 일부, if 문의 일부, <code>&amp;&amp;</code> 의 일부, or <code>⎪⎪</code> 목록의 일부이거나 또는 명령의 반환값이 <code>!</code> 으로 반전되면 종료하지 않는다.<br>  -f     경로명 확장을 하지 않는다.<br>  -h     함수를 정의할 때 함수 명령을 찾아 기억해 둔다. 함수를 실행할 때 함수 명령을 정상적으로 찾아 본다.<br>  -k     명령 이름 앞에 적은 것 뿐 아니라, 모든 키워드 인수를 명령의 환경에 둔다.<br>  -m     모니터(감시) 모드. 작업 제어를 사용한다. 지원하는 시스템에서 실행하는 대화형 쉘에 대해서는 이 플래그가 자동으로 켜진다. ( 작 별도의 프로세스 그룹 안에서 실행되며 실행을 완료하면 종료 상태값을 포함하는 행을 출력한다.<br>  -n     명령을 읽지만 실행하지는 않는다. 쉘 스크립트 문법 오류를 점검할 때 사용할 수 있다. 대화형 쉘에서는 무시한다.<br>  -o 옵션-이름<br>  옵션-이름은 다음 중 한 가지이다:<br>  allexport -a 와 같다.<br>  braceexpand 쉘이 중괄호 확장을 행한다. ( 앞서 나온 중 확 emacs 이맥스 스타일의 명령행 편집 인터페이스를 사용한다. 쉘을 시작할 때 -nolineediting 옵션을 붙이지 않은 한, 쉘이 대화형 모드일 때의 기본값이다.<br>   errexit -e와 같다.<br>   histexpand -H와 같다.<br>   ignoreeof 마치 쉘 명령 <code>IGNOREEOF=10</code>을 실행한 것과 같은 효과를 발휘한다. (앞서 나온 쉘 interactive-comments<br>   어떤 단어를 # 로 시작하면 그 단어와 그 뒤의 모든 문자를 대화형 쉘에서 무시하도록 한다. (앞서 나온 주 monitor -m와 같다.<br>   noclobber -C와 같다.<br>   noexec -n와 같다.<br>   noglob -f와 같다.<br>   nohash -d와 같다.<br>   notify -b와 같다.<br>   nounset -u와 같다.<br>   physical -P와 같다.<br>   posix POSIX 1003.2 표준과 기본적으로 다른 bash의 행동방식을 POSIX 표준을 따르도록 만든다.<br>   privileged -p와 같다.<br>   verbose -v와 같다.<br>   vi     vi 스타일의 명령행 편집 인터페이스를 사용한다.<br>   xtrace -x와 같다.<br>   옵션-이름을 적지 않으면 현재 옵션값을 출력한다.<br>   -p     privileged 모드를 켠다. 이 모드에서는 <code>$ENV</code> 파일을 처리하지 않으며, 쉘 함수를 환경으로부터 상속하지 않는다. 유효 사용자 (그룹) ID와 실제 사용자 (그룹) ID가 일치하지 않으면 시동할 때 자동으로 작동한다. 이 옵션을 끄면 유효 사용자, 그룹 ID를 실제 사용자, 그룹 ID로 설정한다.<br>   -t     명령 하나를 읽어 실행한 후 종료한다.<br>   -u     매개변수 확장 시 설정되어 있지 않은 변수를 오류로 간주한다. 미설정 변수에 대한 확장을 시도하면, 쉘은 에러 메시지를 출력하고 대화형 모드가 아니면 0 아닌 상태를 갖고 종료한다.<br>   -v     쉘에서 행 입력을 받을 때마다 그 입력행을 출력한다.<br>   -x     각각의 간단한-명령 을 확장한 후, bash PS4, 의 확장값을 표시하고 명령과 확장된 인수를 표시한다.<br>   -l     for 이름 [in 단 복원한다. (앞서 나온 쉘<br>   -d     실행하기 위해 참조하는 명령 해쉬를 사용하지 않는다. 보통 명령을 해쉬 테이블에 기억해 두고 일단 발견하면 다시는 참조할 필요 없다.<br>   -C     쉘 명령 <code>noclobber=</code>을 실행한 것과 같은 효력을 발휘한다. (앞서 나온 쉘<br>   -H     ! 스타일의 히스토리 치환을 사용한다. 쉘이 대화형 모드이면 기본으로 켜지는 플래그이다.<br>   -P     설정하면, 현재 디렉토리를 변경하는 cd 와 같은 명령 실행 중 심볼릭 링크를 따르지 않는다.    대신 물리적인 디렉토리를 사용한다.<br>   –     이 플래그 뒤에 아무런 인수도 나오지 않으면 위치 매개변수를 unset한다. 만약 나오면, - 로 시작하는 것이 있다 할 지라도 위치 매개변수를 인수로 설정한다.<br>   <code>-</code>     옵션의 끝을 나타내며, 그 뒤에 나오는 모든 인수들을 위치 매개변수로 설정한다. -x 와 -v 옵션이 꺼진다. 만약 아무런 인수도 없다면, 위치 매개변수는 그대로이다.<br>   다른 식으로 언급하지 않는 한, 이 플래그는 기본적으로 꺼져 있다. - 대신 + 를 사용하면 플래그를 끈다. 쉘을 실행할 때 옵션으로 적을 수 있다. 현재 플래그 상태는 <code>$-</code> 를 보면 알 수 있다. 옵션 인수를 처리한 후, 나머지 n 개의 인수는 위 매개변수의 값으로 간주하고 차례대로 <code>$1, $2, ... $n</code> 에 할당한다. 아무런 옵션도 없고 인수도 없으면 모든 쉘 변수를 출력한다. 잘못된 옵션이 없는 한, 반환 상태값은 항상 참이다.</p>
</li>
<li><p><code>shift [n]</code><br>  n+1 부터의 위치 매개변수 이름을 <code>$1 ....</code> 로 변경한다. <code>$#</code>부터 <code>$#-n+1</code>까지의 매개변수는 unset된다. n 이 0 이면, 매개변수의 변화는 없다. n 이 주어지지 않으면 1 로 간주한다. n 은 <code>$#</code>보다 작거나 같은 음수 아닌 숫자여야 한다. n 이 <code>$#</code>보다 크면, 위치 매개변수의 변화는 없다. n 이 <code>$#</code> 보다 크거나 0 보다 작으면 반환 상태값은 0 보다 크다; 그렇지 않으면 0 이다.</p>
</li>
<li><p><code>suspend [-f]</code><br>  SIGCONT 시그널을 받을 때까지 쉘의 실행을 정지시킨다. -f 옵션은 로그인 쉘이라 할 지라도 불평 메시지를 출력하지 않도록 한다; 어찌 되었든 일시 정지한다. 쉘이 로그인 쉘이면서도 -f 이 없거나 또는 작업 제어 기능이 작동 중인 상태가 아니면 반환 상태값은 0 이 된다.</p>
</li>
<li><p><code>test 표현식</code><br><code>[ 표현식 ]</code><br>  조건 표현식을 평가하여 0 (참) 또는 1 (거짓)을 상태값으로 반환한다. 표현식은 일항 또는 이항 표현식일 수 있다. 일항 표현식은 주로 파일의 상태를 점검할 때 사용한다. 문자열 연산자와 수치 비교 연산자도 있다. 각 연산자와 피연산자는 개별적인 인수 형태를 띠어야 한다. 파일이 /dev/fd/n의 형태일 때에는, 파일 기술자 n를 점검한다.<br>  -b 파일: 파일이 존재하고 블럭 특수 파일이면 참.<br>  -c 파일: 파일이 존재하고 문자 특수 파일이면 참.<br>  -d 파일: 파일이 존재하고 디렉토리이면 참.<br>  -e 파일: 파일이 존재하면 참.<br>  -f 파일: 파일이 존재하고 일반 파일이면 참.<br>  -g 파일: 파일이 존재하고 set-group-id이면 참.<br>  -k 파일: 파일에 <code>스틱키(sticky)</code>비트가 설정되어 있으면 참.<br>  -L f파일: 파일이 존재하고 심볼릭 링크이면 참.<br>  -p 파일: 파일이 존재하고 명명된(named) 파이프이면 참.<br>  -r 파일: 파일이 존재하고 읽을 수 있으면 참.<br>  -s 파일: 파일이 존재하고 그 크기가 0 보다 크면 참.<br>  -S 파일: 파일이 존재하고 소켓이면 참.<br>  -t fd fd (파일 기술자)가 열린 상태이고 터미널이면 참.<br>  -u 파일: 파일이 존재하고 set-user-id 비트가 설정되어 있으면 참.<br>  -w 파일: 파일이 존재하고 쓸 수 있으면 참.<br>  -x 파일: 파일이 존재하고 실행 가능하면 참.<br>  -O 파일: 파일이 존재하고 유효(effective) 사용자 ID의 소유이면 참.<br>  -G 파일: 파일이 존재하고 유효 그룹 ID의 소유이면 참.<br>  파일1 -nt 파일2: 파일1이 (수정 일시에 의거하여) 파일2보다 새로운 파일이면 참.<br>  파일1 -ot 파일2: 파일1이 파일2보다 오래 된 파일이면 참.<br>  파일1 -ef 파일2: 파일1과 파일2가 같은 장치이며 아이노드 번호가 같으면 참.<br>  -z 문자열: 문자열의 길이가 0이면 참.<br>  -n 문자열: 문자열 문자열 의 길이가 0이 아니면 참.<br>  문자열1 = 문자열2: 두 문자열이 같으면 참.<br>  문자열1 != 문자열2: 두 문자열이 같지 않으면 참.<br>  ! 표현식: 표현식 이 거짓이면 참.<br>  표현식1 -a 표현식2: 표현식1 과 표현식2 둘 다 참이면 참.<br>  표현식1 -o 표현식2: 표현식1 또는 표현식2 둘 중 하나가 참이면 참.<br>  인수1 연산자: 위와 같은 수치 이항 연산자는 각각 인수1이 인수2와 같거나, 같지 않거나, 작거나, 작거나 같거나, 크거나, 크거나 같을 때에 참이다. 인수1 과 인수2 는 양의 정수, 음의 정수 또는 -l 문자열과 같이 문자열 의 길이로 평가되는 특별한 표현식이 될 수 있다.</p>
</li>
<li><p><code>times</code> </p>
<ul>
<li>쉘과 쉘로부터 실행한 프로세스들에 대하여 사용자 영역에서의 소모 시간, 시스템 영역에서의 소모 시간을 출력한다. 반환값은 0 이다.</li>
</ul>
</li>
<li><p><code>trap [-l] [인수] [시그널스펙]</code><br>  쉘이 시그널스펙 이 가리키고 있는 시그널을 받으면 인수로 주어진 명령을 읽어 실행하도록 한다. 인수 가 없거나 - 이면, 제시한 모든 시그널에 대하여 원래의 값으로 돌아간다. (즉 쉘을 시작했을 때의 값) 인수가 널 문자열이면 쉘과 쉘이 실행한 명령이 그 시그널을 무시해 버린다. 시그널스펙은 <signal.h>에 정의되어 있으면 시그널 이름이거나, 시그널 번호이다. 시그널스펙 이 EXIT (0) 이면 인수로 주어진 명령을 쉘 종료시에 실행한다. 아무런 인수도 없으면, trap 은 각 시그널 번호와 연관된 명령 목록을 출력한다. -l 옵션을 주면 시그널 이름과 해당하는 번호 목록을 출력한다. – 인수는 그 뒤에 나오는 인수에 대한 옵션 점검을 하지 않도록 한다. 쉘을 시작할 때 무시한 시그널에 대해서는 가로채거나 재설정할 수 없다. 가로 챈 시그널은 자식 프로세스가 새롭게 생성될 때 원래의 값으로 재설정된다. 가로채기 이름 또는 번호가 유효하지 않으면 거짓이고 그렇지 않으면 trap 은 참을 반환한다.</signal.h></p>
</li>
<li><p><code>type [-all] [-type | -path] 이름 [이름 ...]</code><br>  옵션없이 사용하면, 이름 이 명령 이름으로 사용하였을 때 어떻게 해석할 것인지 알려 준다. -type 플래그를 사용하면, type 은 이름 이 각각 앨리어스, 쉘의 예약된 단어, 함수, 내부함수, 또는 디스크 파일일 때, alias, keyword, function, builtin, 그리고 file 중 하나를 출력한다. 이름을 찾을 수 없으면 아무 것도 출력하지 않고 반환값은 거짓이 된다. -path 플래그를 사용하면, type 은 이름 이 명령 이름으로 사용되었을 때 실행될 디스크 파일 이름을 반환하거나, -type 이 file 을 반환하지 않을 때에는 아무 것도 반환하지 않는다. 명령이 해쉬된 상태이면, -path 는 PATH 상에서 처음으로 나오는 파일이 아니라 해쉬 값을 반환할 것이다. -all 플래그를 사용하면, type 은 이름 이라는 이름을 포함하는 실행 파일이 포함된 모든 장소를 포함한다. -path 플래그를 함께 사용하지 않을 때에만, 앨리어스와 함수를 포함한다. -all 을 사용할 때에는 해쉬 명령 테이블을 참조하지 않는다. type 은 -all, -type, 과 -path 대신 각각 -a, -t, 과 -p 를 받아들인다. – 인수는 그 뒤에 나오는 인수에 대한 옵션 점검을 하지 않도록 한다. type 은 인수를 발견했을 때에만 참을 반환하고 발견하지 못했을 때에는 거짓을 반환한다.</p>
</li>
<li><p><code>ulimit [-SHacdfmstpnuv [제한]]</code><br>  Ulimit 은 제한 기능을 지원하는 시스템 상에서 쉘과 쉘이 실행한 프로세스에 대하여 사용 자원을 제한할 수 있도록 해 준다. 제한 값은 각 자원에 대한 단위 값이거나 unlimited 라는 값을 가질 수 있다.    H와 S 옵션은 주어진 자원에 대한 하드(hard) 또는 소프트(soft) 설정을 명시한다. 하드 제한은 일단 설정되면 더 이상 늘릴 수 없다; 한편 소프트 제한은 하드 제한 값까지 늘릴 수도 있다. H 와 S 중 아무 것도 명시되어 있지 않으면 소프트 제한이라고 간주한다. 제한을 생략하면 H 옵션이 없는 한, 자원의 현재 소프트 제한 값을 출력한다. 여러 개의 자원을 명시했다면 값 앞에 제한 이름과 단위를 출력해 준다. 기타 다른 옵션은 다음과 같이 해석한다:<br>  -d     프로세스의 데이터 세그먼트의 최대 크기<br>  -f     쉘이 만들 수 있는 파일의 최대 크기<br>  -m     상주 설정(resident size) 최대 크기<br>  -s     최대 스택 크기<br>  -t     초 단위의 최대 CPU 시간<br>  -p     512 바이트 블럭 단위로 파이프의 크기(설정 가능하지 않을 수 있음)<br>  -n     열 수 있는 파일 기술자의 최대 크기 (대부분의 시스템에서는 설정을 허용하지 않고 오로지 출력만 한다.)<br>  -u     단일 사용자에게 허용하는 프로세스 최대 갯수<br>  -v     쉘에 허용하는 가상 메모리의 최대량<br>  – 인수는 그 뒤에 나오는 인수에 대한 옵션 점검을 금지한다. 제한 이 주어지면, 명시한 자원에 대한 새로운 값이 된다.( -a 옵션은 표시할 때만 사용한다.) 아무런 옵션도 없으면 -f 로 간주한다. 값은 초 단위의 -t, 512 바이트의 블럭 단위인 -p, 그리고 단위가 없는 -n 과 -u 를 제외하고, 1024 바이트 단위로 생각한다. 잘못된 옵션이 있거나, 제한 값에 unlimited 이외의 수치 아닌 인수를 적거나 또는 새로운 제한을 설정하는데 오류가 발생한 경우를 제외하고 반환 상태값은 0 이다.</p>
</li>
<li><p><code>umask [-S] [모드]</code><br>  사용자 파일 생성 매스크를 모드로 설정한다. 모드가 숫자로 시작하면 8 진수로 해석한다. 그렇지 않으면 chmod(1) 와 비슷한 심볼릭 매스크로 해석한다. 모드 를 생략하거나, -S 옵션을 적으면, 현재의 매스크 값을 출력한다. -S 옵션은 매스크 값을 심볼릭 형태로 출력하도록 한다; 기본 출력 형태는 8 진수이다. – 인수는 뒤에 나오는 인수에 대한 옵션 점검을 금지시킨다. 모드를 성공적으로 변경하거나 아무런 모드 값도 적지 않으면 반환 상태값은 0 이고 그 나머지 경우에 대해서는 거짓이다.</p>
</li>
<li><p><code>unalias [-a] [이름 ...]</code><br>  정의된 앨리어스 목록에서 이름을 제거한다. -a 를 적으면 모든 앨리어스 정의를 제거한다. 적은 이름 이 정의되어 있는 앨리어스가 아닌 경우를 제외하고 반환값은 참이다.</p>
</li>
<li><p><code>unset [-fv] [이름 ...]</code><br>  각각의 이름 에 대하여, 해당하는 변수를 제거하거나, -f 옵션의 경우 함수를 제거한다. – 인수는 뒤에 나오는 인수에 대한 옵션 점검을 금지시킨다. PATH, IFS, PPID, PS1, PS2, UID, 그리고 EUID 는 unset할 수 없다. RANDOM, SECONDS, LINENO, 또는 HISTCMD 중 하나를 unset하면, 그 값은 나중에 다시 설정한다 할 지라도 고유의 특성을 잃게 된다. 이름 이 존재하지 않거나 unset할 수 없는 것이 아닌 한, 종료 상태값은 참이다.</p>
</li>
<li><p><code>wait [n]</code><br>  특정 프로세스를 기다리다가 종료값을 반환한다. n 은 프로세스 ID이거나 작업 스펙이다; 작업 스펙이면 그 작업의 파이프라인에 존재하는 모든 프로세스를 기다린다. n 을 적지 않으면, 현재 활성 중인 모든 프로세스를 기다리며 반환값은 0 이다. n 이 존재하지 않는 프로세스 또는 작업을 가리키는 경우 반환 상태값은 127 이다. 그렇지 않으면, 반환값은 기다렸던 마지막 프로세스 또는 작업의 종료 상태값이 된다.</p>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> Centos </category>
            
        </categories>
        
        
        <tags>
            
            <tag> pwd </tag>
            
            <tag> cd </tag>
            
            <tag> bg </tag>
            
            <tag> fg </tag>
            
            <tag> fc </tag>
            
            <tag> echo </tag>
            
            <tag> exec </tag>
            
            <tag> kill </tag>
            
            <tag> umask </tag>
            
            <tag> export </tag>
            
            <tag> source </tag>
            
            <tag> logout </tag>
            
            <tag> 리다이렉션 </tag>
            
            <tag> 파이프라인 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[내부명령어와 외부명령어]]></title>
      <url>/2017/10/29/%EB%82%B4%EB%B6%80%EB%AA%85%EB%A0%B9%EC%96%B4%EC%99%80-%EC%99%B8%EB%B6%80%EB%AA%85%EB%A0%B9%EC%96%B4/</url>
      <content type="html"><![CDATA[<div class="video-container"><iframe src="//www.youtube.com/embed/SSu822Lgta8" frameborder="0" allowfullscreen></iframe></div>
<hr>
<h1 id="내부명령어와-외부명령어"><a href="#내부명령어와-외부명령어" class="headerlink" title="내부명령어와 외부명령어"></a>내부명령어와 외부명령어</h1><p>리눅스의 명령은 내부명령과 외부명령으로 나뉘어 집니다.</p>
<p>내부명령은 별도의 파일이 존재 하지 않습니다.<br>Shell이라고 하는 인터프리터(명령해석기)에 명령이 들어 있습니다.<br>리눅스의 터미널을 실행하면 커서가 깜빡거립니다. 명령입력 대기를 하고있는 겁니다.<br>사용자가 명령을 내리면 Shell이 해석해서 Kernel에 전달하고<br>kernel은 cpu에 전달하고 cpu는 명령을 처리해서 다시<br>Kernel로 전달해 최종적으로 Shell에 돌려줍니다.</p>
<img src="/2017/10/29/내부명령어와-외부명령어/2017-10-30_19-50-59.png" alt="[그림1]" title="[그림1]">
<p>외부명령은 OS가 갖추어야할 기본 프로그램이 존재하며 /bin 과 /usr/bin에 들어 있는 파일들이 외부명령 프로그램들입니다.</p>
<ul>
<li>파일 및 디렉토리 관리 명령</li>
<li>프로세스 관리 명령</li>
<li>JOB 관리 명령</li>
<li>보안 및 권한관리 명령</li>
</ul>
]]></content>
      
        <categories>
            
            <category> Centos </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 외부명령어 </tag>
            
            <tag> 내부명령어 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[디렉토리]]></title>
      <url>/2017/10/29/%EB%94%94%EB%A0%89%ED%86%A0%EB%A6%AC/</url>
      <content type="html"><![CDATA[<div class="video-container"><iframe src="//www.youtube.com/embed/SSu822Lgta8" frameborder="0" allowfullscreen></iframe></div>
<hr>
<p>/<br>최상위 디렉토리(root directory).</p>
<p>/bin<br>리눅스의 외부명령 파일들이 있습니다.</p>
<p>/boot<br>리눅스 부팅에 관련된 파일들이 있습니다.</p>
<p>/dev<br>디바이스 파일들이 있습니다.</p>
<p>/etc<br>리눅스의 설정 파일들이 있습니다.</p>
<p>/home<br>일반 계정 사용자들의 홈 디렉토리가 있습니다.</p>
<p>/lib<br>라이브러리 파일들이 담겨 있습니다.</p>
<p>/mnt<br>다른 장치들을 마운트하는 디렉토리</p>
<p>/proc<br>프로세스 정보를 담고 있는 파일들이 담겨 있습니다.</p>
<p>/root<br>root의 홈 디렉토리.</p>
<p>/sbin<br>root가 시스템 운영을 위해 필요한 실행 파일이 있습니다.</p>
<p>/tmp<br>임시 디렉토리</p>
<p>/usr<br>사용자들을 위한 대부분의 프로그램들과 설정 파일들이 있습니다.</p>
<p>/var<br>각종 로그 파일 등의 시스템 관리와 관련된 정보들이 저장되는 디렉토리.</p>
<p>/run<br>FHS 관련 데몬과 파일시스템 관련 파일들이 있습니다. 리눅스가 사용하는 디렉토리.</p>
]]></content>
      
        <categories>
            
            <category> Centos </category>
            
        </categories>
        
        
        <tags>
            
            <tag> directory </tag>
            
            <tag> 디렉토리 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[부팅 순서]]></title>
      <url>/2017/10/29/%EB%B6%80%ED%8C%85-%EC%88%9C%EC%84%9C/</url>
      <content type="html"><![CDATA[<div class="video-container"><iframe src="//www.youtube.com/embed/SSu822Lgta8" frameborder="0" allowfullscreen></iframe></div>
<hr>
<h1 id="부팅순서"><a href="#부팅순서" class="headerlink" title="부팅순서"></a>부팅순서</h1><img src="/2017/10/29/부팅-순서/2017-10-27_00-40-50.png" alt="[그림1]" title="[그림1]">
<h2 id="1-전원on"><a href="#1-전원on" class="headerlink" title="1. 전원on"></a>1. 전원on</h2><p>컴퓨터에 전원이 공급되면 제일 먼저 ROM BIOS의 프로그램들이 자동으로 실행됩니다.</p>
<h2 id="2-BIOS-실행"><a href="#2-BIOS-실행" class="headerlink" title="2. BIOS 실행"></a>2. BIOS 실행</h2><p>BIOS가 실행되면, 컴퓨터가 구동되기 위한 최소한의 장치가 있는지, 이상은 없는지를 테스트하고, 이상이 있다면 Beep음으로 알려줍니다. 이상이 없다면 BIOS에 저장된 부팅장치로 부팅을 시작합니다.</p>
<h2 id="3-부팅장치-선택"><a href="#3-부팅장치-선택" class="headerlink" title="3. 부팅장치 선택"></a>3. 부팅장치 선택</h2><p>부팅장치(CD-ROM, HDD…)로 부터 부트섹터를 읽어 메모리에 적재합니다. 이때 GRUB가 적재되는 겁니다.</p>
<h2 id="4-부트로더-실행"><a href="#4-부트로더-실행" class="headerlink" title="4. 부트로더 실행"></a>4. 부트로더 실행</h2><p>GRUB가 실행되면 부트 메뉴를 보여주고 부팅할 커널을 선택합니다.</p>
<h2 id="5-커널-이미지-적재"><a href="#5-커널-이미지-적재" class="headerlink" title="5. 커널 이미지 적재"></a>5. 커널 이미지 적재</h2><p>선택된 커널 이미지를 MEMORY에 적재합니다.</p>
<h2 id="6-파일시스템-마운트"><a href="#6-파일시스템-마운트" class="headerlink" title="6. 파일시스템 마운트"></a>6. 파일시스템 마운트</h2><p>루트 파일시스템을 적재 합니다.</p>
<h2 id="7-init-프로세스-실행"><a href="#7-init-프로세스-실행" class="headerlink" title="7. init 프로세스 실행"></a>7. init 프로세스 실행</h2><p>시스템을 초기화 하고 사용자가 시스템을 사용할 수 있도록 해줍니다.<br>이때 설정된 각종 DEAMON도 같이 실행 되어집니다.</p>
<p>DAEMON : 종료되지 않고 계속 실행되는 프로그램</p>
<h2 id="8-로그인-및-사용"><a href="#8-로그인-및-사용" class="headerlink" title="8. 로그인 및 사용"></a>8. 로그인 및 사용</h2><p>리눅스시스템은 부팅이 완료되면 각종 설정및 SERVER등이 자동으로 실행 되어 스스로 설정된 명령에 의해 동작됩니다. 시스템에 허가된 사용자는 로그인을 이용해 컴퓨터에접속해서 컴퓨터 사용이 가능합니다.</p>
<hr>
<p>앞으로 위 [그림1]에서 NORTH BRIDGE 와 SOUTH BRIDGE, BIOS를 생략하고 아래 [그림2]로 시스템 설명을 설명할 겁니다. 메모리와 CPU사이에는 NB, SB가 있다는것을 잊으면 안됩니다.</p>
<p>입력장치: RAM, HDD(각종저장장치), 마이크, 키보드, 마우스, 스케너<br>출력장치: RAM, HDD(각종저장장치), 모니터, 스피커, 프린터<br>처리장치: CPU<br><img src="/2017/10/29/부팅-순서/2017-10-27_00-41-08.png" alt="[그림2]" title="[그림2]"></p>
]]></content>
      
        <categories>
            
            <category> Centos </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Centos </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[리눅스의 특징]]></title>
      <url>/2017/10/29/%EB%A6%AC%EB%88%85%EC%8A%A4%EC%9D%98-%ED%8A%B9%EC%A7%95/</url>
      <content type="html"><![CDATA[<div class="video-container"><iframe src="//www.youtube.com/embed/SSu822Lgta8" frameborder="0" allowfullscreen></iframe></div>
<hr>
<h1 id="리눅스의-특징과-역할"><a href="#리눅스의-특징과-역할" class="headerlink" title="리눅스의 특징과 역할"></a>리눅스의 특징과 역할</h1><h2 id="특징"><a href="#특징" class="headerlink" title="특징"></a>특징</h2><ul>
<li>멀티유저, 멀티태스킹, 멀티 프로세싱, 서버용 운영체제</li>
<li>GUI 와 CUI 를 지원</li>
<li>무료이며, 수많은 소스가 공개 되어 있다.</li>
<li>안정성, 적은 리소스 점유로 mobile, embeded에서도 사용</li>
</ul>
<h2 id="운영체제-역할"><a href="#운영체제-역할" class="headerlink" title="운영체제 역할"></a>운영체제 역할</h2><p>리눅스는 많은 OS(Operating System) 운영체제중의 하나입니다.<br><img src="/2017/10/29/리눅스의-특징/2017-10-27_00-40-50.png" alt="2017-10-27_00-40-50.png" title=""></p>
<p>위에 보는 그림과 같이 컴퓨터는 많은 장치로 구성되어 있습니다. 운영체제는 각각의 장치를 유기적으로 연결해서 컴퓨터를 사용할 수 있도록 해줍니다. SB는 각종 입출력 장치를 제어하고, NB는 PCI BUS 와 SB를 제어 합니다. OS가 없으면 컴퓨터는 동작 하지 않습니다.</p>
<h2 id="기능"><a href="#기능" class="headerlink" title="기능"></a>기능</h2><ul>
<li>파일(디렉토리)관리<ul>
<li>파일생성, 이동, 삭제, 복사</li>
</ul>
</li>
<li>프로세스관리<ul>
<li>프로그램의 실행및 종료,  background, forground</li>
</ul>
</li>
<li>메모리관리<ul>
<li>프로그램의 메모리 적제, 사용, 삭제</li>
</ul>
</li>
<li>스케줄관리(job management)<ul>
<li>프로그램의 실행및 종료를 언제 할지 관리</li>
</ul>
</li>
<li>보안관리<ul>
<li>파일의 소유, 생성, 실행, 읽고쓰기 등…</li>
</ul>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> Centos </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Centos </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[터미널 단축키]]></title>
      <url>/2017/10/29/%ED%84%B0%EB%AF%B8%EB%84%90-%EB%8B%A8%EC%B6%95%ED%82%A4/</url>
      <content type="html"><![CDATA[<div class="video-container"><iframe src="//www.youtube.com/embed/SSu822Lgta8" frameborder="0" allowfullscreen></iframe></div>
<h1 id="터미널-단축키"><a href="#터미널-단축키" class="headerlink" title="터미널 단축키"></a>터미널 단축키</h1><p>xNIX 계열의 터미널에서 공통적으로 사용되는 단축키 입니다.<br>터미널과 shell에 따라 조금씩 다르고, 더많은 단축키가 있지만 아래 키는 대부분 공통적으로 동작 됩니다.</p>
<table>
<thead>
<tr>
<th>단축키</th>
<th>설명</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>TAB</code></td>
<td>자동완성(파일및디렉토리, 명령을 자동완성)</td>
</tr>
<tr>
<td><code>Ctrl+h</code></td>
<td>백스페이와 같습니다.(더 편합니다.)</td>
</tr>
<tr>
<td><code>Ctrl+a</code></td>
<td>처음으로 이동</td>
</tr>
<tr>
<td><code>Ctrl+e</code></td>
<td>행 끝으로 이동</td>
</tr>
<tr>
<td><code>Ctrl+b</code></td>
<td>한 문자 뒤로 이동</td>
</tr>
<tr>
<td><code>Alt+b</code></td>
<td>한 단어 뒤로 이동</td>
</tr>
<tr>
<td><code>Ctrl+f</code></td>
<td>한 문자 앞으로 이동</td>
</tr>
<tr>
<td><code>Alt+f</code></td>
<td>한 단어 앞으로 이동</td>
</tr>
<tr>
<td><code>Ctrl+u</code></td>
<td>현재줄을 삭제합니다.</td>
</tr>
<tr>
<td><code>Ctrl+k</code></td>
<td>커서 위치에서 행 끝까지 삭제합니다.</td>
</tr>
<tr>
<td><code>Ctrl+w</code></td>
<td>커서앞 한단어를 삭제합니다.</td>
</tr>
<tr>
<td><code>Esc+Backspace</code></td>
<td>이전 단어 삭제</td>
</tr>
<tr>
<td><code>Ctrl+y</code></td>
<td>클립보드에서 텍스트를 붙여넣습니다.</td>
</tr>
<tr>
<td><code>Ctrl+l</code></td>
<td>화면 상단에 현재 줄을 남겨두고 화면을 지웁니다.</td>
</tr>
<tr>
<td><code>Ctrl+r</code></td>
<td>증분 검색 기록 을 역순으로 추적</td>
</tr>
<tr>
<td><code>Alt+p</code></td>
<td>비 증분 검색 기록을 역순으로 추적</td>
</tr>
<tr>
<td><code>Ctrl+p</code></td>
<td>비 증분 검색 기록을 역순으로 추적</td>
</tr>
</tbody>
</table>
<p>터미널 단축키는 man page, sed, edlin, vim, python, perl, rube 에서도 동일하게 사용됩니다.</p>
<h1 id="TAB-Ctrl-l-Ctrl-u-Ctrl-w-Ctrl-e-Ctrl-a-Ctrl-p-Ctrl-r"><a href="#TAB-Ctrl-l-Ctrl-u-Ctrl-w-Ctrl-e-Ctrl-a-Ctrl-p-Ctrl-r" class="headerlink" title="TAB, Ctrl+l, Ctrl+u, Ctrl+w, Ctrl+e, Ctrl+a, Ctrl+p, Ctrl+r"></a>TAB, Ctrl+l, Ctrl+u, Ctrl+w, Ctrl+e, Ctrl+a, Ctrl+p, Ctrl+r</h1><p>위 키는 반드시 손에 익히세요.</p>
]]></content>
      
        <categories>
            
            <category> Centos </category>
            
        </categories>
        
        
        <tags>
            
            <tag> centos </tag>
            
            <tag> terminal </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Centos설치]]></title>
      <url>/2017/10/28/Centos%EC%84%A4%EC%B9%98/</url>
      <content type="html"><![CDATA[<h1 id="Centos설치"><a href="#Centos설치" class="headerlink" title="Centos설치"></a>Centos설치</h1><p>실습의 편의를 위해 VirtualBox에 Centos를 설치하겠습니다.</p>
<h2 id="1-virtualbox-다운로드"><a href="#1-virtualbox-다운로드" class="headerlink" title="1. virtualbox 다운로드"></a>1. virtualbox 다운로드</h2><p><a href="http://virtualbox.org" target="_blank" rel="external">http://virtualbox.org</a> 사이트에서 자신의 운영체제에 맞는 최신 버전의 virtualbox를 다운로드 받습니다.</p>
<h2 id="2-Centos-다운로드"><a href="#2-Centos-다운로드" class="headerlink" title="2. Centos 다운로드"></a>2. Centos 다운로드</h2><p><a href="http://centos.org" target="_blank" rel="external">http://centos.org</a> 에서 centos7 dvd iso 이미지를 다운로드 받습니다.</p>
<h2 id="3-virtualbox-설치"><a href="#3-virtualbox-설치" class="headerlink" title="3. virtualbox 설치"></a>3. virtualbox 설치</h2><h2 id="4-virtualbox-실행-및-centos설치"><a href="#4-virtualbox-실행-및-centos설치" class="headerlink" title="4. virtualbox 실행 및 centos설치"></a>4. virtualbox 실행 및 centos설치</h2>]]></content>
      
        <categories>
            
            <category> Centos </category>
            
        </categories>
        
        
        <tags>
            
            <tag> centos </tag>
            
            <tag> virtualbox </tag>
            
            <tag> 리눅스설치 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[post]]></title>
      <url>/2017/10/28/post/</url>
      <content type="html"></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[clang]]></title>
      <url>/2017/10/24/clang/</url>
      <content type="html"><![CDATA[<p>포스트를 수정합니다. </p>
<h1 id="설치"><a href="#설치" class="headerlink" title="설치"></a>설치</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"hi"</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[test new]]></title>
      <url>/2017/10/07/test-new/</url>
      <content type="html"><![CDATA[<p>hexo</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>/2017/10/07/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
      
        
    </entry>
    
  
  
</search>
