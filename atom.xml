<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>KORCOW</title>
  
  <subtitle>HANS</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://korcow.github.io/"/>
  <updated>2017-12-12T10:06:50.778Z</updated>
  <id>http://korcow.github.io/</id>
  
  <author>
    <name>woo-seok Han</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>자료형</title>
    <link href="http://korcow.github.io/2017/12/12/mysql-%EC%9E%90%EB%A3%8C%ED%98%95/"/>
    <id>http://korcow.github.io/2017/12/12/mysql-자료형/</id>
    <published>2017-12-12T10:06:50.778Z</published>
    <updated>2017-12-12T10:06:50.778Z</updated>
    
    <content type="html"><![CDATA[<h3 id="mysql-데이터-타입"><a href="#mysql-데이터-타입" class="headerlink" title="mysql 데이터 타입"></a>mysql 데이터 타입</h3><p>문자형</p><p>데이터 타입| 길이<br>CHAR()      | 0 to 255 고정문자 길이<br>VARCHAR()   | 0~65535 가변 문자 길이<br>TINYTEXT    | 최대 255 문자길이<br>TEXT        | 최대 65535 문자길이<br>BLOB        | 최대 65535 문자길이(이진파일)<br>MEDIUMTEXT  | 최대 16777215 문자길이<br>MEDIUMBLOB  | 최대 16777215 문자길이(이진파일)<br>LONGTEXT    | 최대 4294967295 문자길이<br>LONGBLOB    | 최대 4294967295 문자길이(이진파일)</p><p>숫자형</p><p>데이터 타입| 길이<br>TINYINT()     | 정수형 -128 ~ 127 , UNSIGNED 0 ~ 255 정수형<br>SMALLINT()    | 정수형 -32768 ~ 32767, UNSIGNED 정수형 0 ~ 65535<br>MEDIUMINT()   | 정수형 -8388608 to 8388607, UNSIGNED 정수형 0 to 16777215<br>INT()         | 정수형 -2147483648 ~ 2147483647 UNSIGNED 정수형 0 ~ 4294967295<br>BIGINT()      | 정수형 -9223372036854775808 ~ 9223372036854775807, UNSIGNED 정수형 0 ~ 18446744073709551615<br>FLOAT         | 부동소수점<br>DOUBLE( , )   | 배정도 부동소수점<br>DECIMAL( , )  | 숫자형</p><p>날짜형</p><p>데이터 타입| 길이<br>DATE       | YYYY-MM-DD<br>TIME       | HH:MM:SS<br>DATETIME   | YYYY-MM-DD HH:MM:SS<br>TIMESTAMP  | YYYY-MM-DD HH:MM:SS<br>YEAR       | 0000</p><p>기타</p><p>데이터 타입| 길이<br>ENUM () | 열거된 값으로 제한<br>SET | 0개 이상의 집합</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;mysql-데이터-타입&quot;&gt;&lt;a href=&quot;#mysql-데이터-타입&quot; class=&quot;headerlink&quot; title=&quot;mysql 데이터 타입&quot;&gt;&lt;/a&gt;mysql 데이터 타입&lt;/h3&gt;&lt;p&gt;문자형&lt;/p&gt;
&lt;p&gt;데이터 타입| 길이&lt;br&gt;CHAR(
      
    
    </summary>
    
      <category term="Mysql" scheme="http://korcow.github.io/categories/Mysql/"/>
    
    
      <category term="자료형" scheme="http://korcow.github.io/tags/%EC%9E%90%EB%A3%8C%ED%98%95/"/>
    
  </entry>
  
  <entry>
    <title>유니온</title>
    <link href="http://korcow.github.io/2017/12/10/c-%EC%9C%A0%EB%8B%88%EC%98%A8/"/>
    <id>http://korcow.github.io/2017/12/10/c-유니온/</id>
    <published>2017-12-10T01:47:07.812Z</published>
    <updated>2017-12-10T01:47:07.812Z</updated>
    
    <content type="html"><![CDATA[<h3 id="유니온"><a href="#유니온" class="headerlink" title="유니온"></a>유니온</h3><img src="/c언어기초/2017-12-02_19-30-05.png" width="500" title="구조체그림1"><p>선언 방법은 구조체와 동일합니다. 사용하는 용도와 내부적으로 처리하는 방식이 다릅니다. 자료형 중에 가장 큰 자료형을 다른 자료형과 같이 사용합니다.</p><h3 id="선언-및-사용"><a href="#선언-및-사용" class="headerlink" title="선언 및 사용"></a>선언 및 사용</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt; // strcpy()</span></span></div><div class="line"></div><div class="line"><span class="keyword">union</span> _Score&#123;</div><div class="line">    <span class="keyword">char</span> name[<span class="number">20</span>];</div><div class="line">    <span class="keyword">int</span> kor;</div><div class="line">    <span class="keyword">int</span> eng;</div><div class="line">    <span class="keyword">int</span> math;</div><div class="line">    <span class="keyword">int</span> sum;</div><div class="line">    <span class="keyword">double</span> avg;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> *argv[])</span> </span>&#123;</div><div class="line">    </div><div class="line">    <span class="keyword">union</span> _Score score;</div><div class="line"></div><div class="line">    <span class="built_in">strcpy</span>(score.name, <span class="string">"유재석"</span>);</div><div class="line">    score.kor = <span class="number">90</span>;</div><div class="line">    score.eng = <span class="number">95</span>;</div><div class="line">    score.math = <span class="number">100</span>;</div><div class="line">    score.sum = score.kor + score.eng + score.math;</div><div class="line">    score.avg = score.sum / <span class="number">3</span>;</div><div class="line"></div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s%d\n"</span>, <span class="string">"국어 점수: "</span>, score.kor);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s%d\n"</span>, <span class="string">"영어 점수: "</span>, score.eng);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s%d\n"</span>, <span class="string">"수학 점수: "</span>, score.math);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s%d\n"</span>, <span class="string">"총점 점수: "</span>, score.sum);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s%f\n"</span>, <span class="string">"평균 점수: "</span>, score.avg);</div><div class="line"></div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">국어 점수: 0</div><div class="line">영어 점수: 0</div><div class="line">수학 점수: 0</div><div class="line">총점 점수: 0</div><div class="line">평균 점수: 100.000000</div></pre></td></tr></table></figure><p>위와 같은 결과가 나왔습니다. 이유는 공용체는 자료형중에서 가장큰 자료형을 공유해서 사용합니다. 따라서 바로 자료값을 사용하지 않으면 다음 자료값으로 덮어 써지기 때문에 원하는 값을 얻지 못한겁니다. 값을 다음 값이 써지기 전까지만 기억 되므로 국, 영, 수 값을 다른 값이 덮어 쓰기 전에 사용해야 합니다.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt; // strcpy()</span></span></div><div class="line"></div><div class="line"><span class="keyword">union</span> _Score&#123;</div><div class="line">    <span class="keyword">int</span> a;</div><div class="line">    <span class="keyword">short</span> b;</div><div class="line">    <span class="keyword">char</span> c;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> *argv[])</span> </span>&#123;</div><div class="line">    </div><div class="line">    <span class="keyword">union</span> _Score score;</div><div class="line"></div><div class="line">    score.a = <span class="number">655236</span>;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s%d\n"</span>, <span class="string">"a : "</span>, score.a);</div><div class="line">    score.b = <span class="number">256</span>;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s%d\n"</span>, <span class="string">"b : "</span>, score.b);</div><div class="line">    score.c = <span class="string">'c'</span>;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s%c\n"</span>, <span class="string">"c : "</span>, score.c);</div><div class="line"></div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt; // strcpy()</span></span></div><div class="line"></div><div class="line"><span class="keyword">union</span> _BankNo&#123;</div><div class="line">    <span class="keyword">char</span> shinhan[<span class="number">12</span>];</div><div class="line">    <span class="keyword">char</span> kukmin[<span class="number">10</span>];</div><div class="line">    <span class="keyword">char</span> seoul[<span class="number">9</span>];</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> *argv[])</span> </span>&#123;</div><div class="line">    </div><div class="line">    <span class="keyword">union</span> _BankNo bankno;</div><div class="line"></div><div class="line">    <span class="built_in">strcpy</span>(bankno.a , <span class="string">"122236553236"</span>);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s%s\n"</span>, <span class="string">"a : "</span>, bankno.a);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s%s\n"</span>, <span class="string">"b : "</span>, bankno.b);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s%s\n"</span>, <span class="string">"c : "</span>, bankno.c);</div><div class="line"></div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;유니온&quot;&gt;&lt;a href=&quot;#유니온&quot; class=&quot;headerlink&quot; title=&quot;유니온&quot;&gt;&lt;/a&gt;유니온&lt;/h3&gt;&lt;img src=&quot;/c언어기초/2017-12-02_19-30-05.png&quot; width=&quot;500&quot; title=&quot;구조체그림1&quot;&gt;
      
    
    </summary>
    
      <category term="C언어기초" scheme="http://korcow.github.io/categories/C%EC%96%B8%EC%96%B4%EA%B8%B0%EC%B4%88/"/>
    
    
      <category term="유니온" scheme="http://korcow.github.io/tags/%EC%9C%A0%EB%8B%88%EC%98%A8/"/>
    
  </entry>
  
  <entry>
    <title>쿼리입력하기</title>
    <link href="http://korcow.github.io/2017/12/09/mysql-%EC%BF%BC%EB%A6%AC%EC%9E%85%EB%A0%A5%ED%95%98%EA%B8%B0/"/>
    <id>http://korcow.github.io/2017/12/09/mysql-쿼리입력하기/</id>
    <published>2017-12-08T16:17:42.866Z</published>
    <updated>2017-12-08T16:17:42.866Z</updated>
    
    <content type="html"><![CDATA[<h3 id="쿼리입력하기"><a href="#쿼리입력하기" class="headerlink" title="쿼리입력하기"></a>쿼리입력하기</h3><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql&gt;select version(), current_date;</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">+-----------------+--------------+</div><div class="line">| version()       | current_date |</div><div class="line">+-----------------+--------------+</div><div class="line">| 5.5.57-0+deb8u1 | 2017-12-08   |</div><div class="line">+-----------------+--------------+</div><div class="line">1 row in set (0.01 sec)</div></pre></td></tr></table></figure><p>쿼리문은 대소문자를 구분하지 않습니다.<br>단, 데이터는 대소문자를 구분합니다.</p><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql&gt;seLect verSion(), currEnt_date;</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">+-----------------+--------------+</div><div class="line">| verSion()       | currEnt_date |</div><div class="line">+-----------------+--------------+</div><div class="line">| 5.5.57-0+deb8u1 | 2017-12-08   |</div><div class="line">+-----------------+--------------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure><h3 id="계산하기"><a href="#계산하기" class="headerlink" title="계산하기"></a>계산하기</h3><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mysql&gt;select 10 + 5;</div><div class="line">mysql&gt;select (2 + 1)* 4;</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">--------------</div><div class="line">select 10 + 5</div><div class="line">--------------</div><div class="line"></div><div class="line">+--------+</div><div class="line">| 10 + 5 |</div><div class="line">+--------+</div><div class="line">|     15 |</div><div class="line">+--------+</div><div class="line">1 row in set (0.00 sec)</div><div class="line"></div><div class="line">--------------</div><div class="line">select (2 + 1)* 4</div><div class="line">--------------</div><div class="line"></div><div class="line">+------------+</div><div class="line">| (2 + 1)* 4 |</div><div class="line">+------------+</div><div class="line">|         12 |</div><div class="line">+------------+</div><div class="line">1 row in set (0.01 sec)</div></pre></td></tr></table></figure><h3 id="한줄에-여러문장을-입력할-수-있습니다"><a href="#한줄에-여러문장을-입력할-수-있습니다" class="headerlink" title="한줄에 여러문장을 입력할 수 있습니다."></a>한줄에 여러문장을 입력할 수 있습니다.</h3><p>단, 반드시 세미콜론을 붙여야 합니다.<br>mysql은 명령이 끝나면 <code>;</code>를 붙여야 합니다.<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql&gt;select version(); select now();</div></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">+-----------------+</div><div class="line">| version()       |</div><div class="line">+-----------------+</div><div class="line">| 5.5.57-0+deb8u1 |</div><div class="line">+-----------------+</div><div class="line">1 row in set (0.00 sec)</div><div class="line"></div><div class="line">+---------------------+</div><div class="line">| now()               |</div><div class="line">+---------------------+</div><div class="line">| 2017-12-08 14:30:48 |</div><div class="line">+---------------------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure><h3 id="쿼리를-여러줄에-입력할-수도-있습니다"><a href="#쿼리를-여러줄에-입력할-수도-있습니다" class="headerlink" title="쿼리를 여러줄에 입력할 수도 있습니다."></a>쿼리를 여러줄에 입력할 수도 있습니다.</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">mysql&gt; SELECT</div><div class="line">    -&gt; USER()</div><div class="line">    -&gt; ,</div><div class="line">    -&gt; CURRENT_DATE;</div><div class="line">+<span class="comment">---------------+--------------+</span></div><div class="line">| USER()        | CURRENT_DATE |</div><div class="line">+<span class="comment">---------------+--------------+</span></div><div class="line">| jon@localhost | 2010-08-06   |</div><div class="line">+<span class="comment">---------------+--------------+</span></div></pre></td></tr></table></figure><h3 id="쿼리를-입력하다-취소-하려면-c를-입력하세요"><a href="#쿼리를-입력하다-취소-하려면-c를-입력하세요" class="headerlink" title="쿼리를 입력하다 취소 하려면 \c를 입력하세요."></a>쿼리를 입력하다 취소 하려면 <code>\c</code>를 입력하세요.</h3><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">mysql&gt; SELECT</div><div class="line">    -&gt; USER()</div><div class="line">    -&gt; \c</div><div class="line">mysql&gt;</div></pre></td></tr></table></figure><table><thead><tr><th>프롬프트</th><th>의미</th></tr></thead><tbody><tr><td>mysql&gt;</td><td>새 쿼리 준비</td></tr><tr><td><code>-&gt;</code></td><td>다음 줄의 여러 줄 쿼리 대기 중</td></tr><tr><td><code>&#39;&gt;</code></td><td>다음 줄을 기다리며 작은 따옴표 (‘)로 시작하는 문자열의 완성을 기다리고 있습니다.</td></tr><tr><td><code>&quot;&gt;</code></td><td>다음 줄을 기다리면서 큰 따옴표 (“)로 시작하는 문자열의 완성을 기다리고 있습니다.</td></tr><tr><td>&#96;&gt;</td><td>다음 줄을 기다리면서 역 따옴표 (&#96;)로 시작하는 식별자의 완성을 기다리고 있습니다.</td></tr><tr><td><code>/*</code>&gt;</td><td>다음 줄을 기다리고, (/*)으로 시작하는 주석 완성을 기다리고 있습니다.</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;쿼리입력하기&quot;&gt;&lt;a href=&quot;#쿼리입력하기&quot; class=&quot;headerlink&quot; title=&quot;쿼리입력하기&quot;&gt;&lt;/a&gt;쿼리입력하기&lt;/h3&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;
      
    
    </summary>
    
      <category term="Mysql" scheme="http://korcow.github.io/categories/Mysql/"/>
    
    
  </entry>
  
  <entry>
    <title>마크다운 특수문자</title>
    <link href="http://korcow.github.io/2017/12/08/markdwon-%ED%8A%B9%EC%88%98%EB%AC%B8%EC%9E%90/"/>
    <id>http://korcow.github.io/2017/12/08/markdwon-특수문자/</id>
    <published>2017-12-08T14:03:16.359Z</published>
    <updated>2017-12-08T14:03:16.359Z</updated>
    
    <content type="html"><![CDATA[<h3 id="특수문자"><a href="#특수문자" class="headerlink" title="특수문자"></a>특수문자</h3><p><a href="https://www.ascii.cl/htmlcodes.htm" target="_blank" rel="external">html code table</a><br>마크다운 사용시 특수문자 표시 안될경우 html code를 사용.</p><p>&#96;  : <code>&amp;#96;</code> grave accent or backtick</p><table><thead><tr><th>Dec</th><th>Hex</th><th>Symbol</th><th>Html Number</th><th>Html Name</th><th>Text</th></tr></thead><tbody><tr><td>32</td><td>20</td><td></td><td><code>&amp;#32;</code></td><td></td><td>space</td></tr><tr><td>33</td><td>21</td><td>!</td><td><code>&amp;#33;</code></td><td><code>&amp;quot;</code></td><td>exclamation point</td></tr><tr><td>34</td><td>22</td><td>“</td><td><code>&amp;#34;</code></td><td></td><td>double quotes</td></tr><tr><td>35</td><td>23</td><td>#</td><td><code>&amp;#35;</code></td><td></td><td>number sign</td></tr><tr><td>36</td><td>24</td><td><code>$</code></td><td><code>&amp;#36;</code></td><td></td><td>dollar sign</td></tr><tr><td>37</td><td>25</td><td>%</td><td><code>&amp;#37;</code></td><td><code>&amp;amp;</code></td><td>percent sign</td></tr><tr><td>38</td><td>26</td><td>&amp;</td><td><code>&amp;#38;</code></td><td></td><td>ampersand</td></tr><tr><td>39</td><td>27</td><td>‘</td><td><code>&amp;#39;</code></td><td></td><td>single quote</td></tr><tr><td>40</td><td>28</td><td>(</td><td><code>&amp;#40;</code></td><td></td><td>opening parenthesis</td></tr><tr><td>41</td><td>29</td><td>)</td><td><code>&amp;#41;</code></td><td></td><td>closing parenthesis</td></tr><tr><td>42</td><td>2A</td><td>*</td><td><code>&amp;#42;</code></td><td></td><td>asterisk</td></tr><tr><td>43</td><td>2B</td><td>+</td><td><code>&amp;#43;</code></td><td></td><td>plus sign</td></tr><tr><td>44</td><td>2C</td><td>,</td><td><code>&amp;#44;</code></td><td></td><td>comma</td></tr><tr><td>45</td><td>2D</td><td>-</td><td><code>&amp;#45;</code></td><td></td><td>minus sign - hyphen</td></tr><tr><td>46</td><td>2E</td><td>.</td><td><code>&amp;#46;</code></td><td></td><td>period</td></tr><tr><td>47</td><td>2F</td><td>/</td><td><code>&amp;#47;</code></td><td></td><td>slash</td></tr><tr><td>96</td><td>60</td><td>&#96;</td><td><code>&amp;#96;</code></td><td></td><td>grave accent</td></tr><tr><td>8211</td><td>2013</td><td>–</td><td><code>&amp;#8211;</code></td><td></td><td>en dash</td></tr><tr><td>8212</td><td>2014</td><td>—</td><td><code>&amp;#8212;</code></td><td></td><td>em dash</td></tr><tr><td>8216</td><td>2018</td><td>‘</td><td><code>&amp;#8216;</code></td><td></td><td>left single quotation mark</td></tr><tr><td>8217</td><td>2019</td><td>’</td><td><code>&amp;#8217;</code></td><td></td><td>right single quotation mark</td></tr><tr><td>8218</td><td>201A</td><td>‚</td><td><code>&amp;#8218;</code></td><td></td><td>single low-9 quotation mark</td></tr><tr><td>8220</td><td>201C</td><td>“</td><td><code>&amp;#8220;</code></td><td></td><td>left double quotation mark</td></tr><tr><td>8221</td><td>201D</td><td>”</td><td><code>&amp;#8221;</code></td><td></td><td>right double quotation mark</td></tr><tr><td>8222</td><td>201E</td><td>„</td><td><code>&amp;#8222;</code></td><td></td><td>double low-9 quotation mark</td></tr><tr><td>8224</td><td>2020</td><td>†</td><td><code>&amp;#8224;</code></td><td></td><td>dagger</td></tr><tr><td>8225</td><td>2021</td><td>‡</td><td><code>&amp;#8225;</code></td><td></td><td>double dagger</td></tr><tr><td>8226</td><td>2022</td><td>•</td><td><code>&amp;#8226;</code></td><td></td><td>bullet</td></tr><tr><td>8230</td><td>2026</td><td>…</td><td><code>&amp;#8230;</code></td><td></td><td>horizontal ellipsis</td></tr><tr><td>8240</td><td>2030</td><td>‰</td><td><code>&amp;#8240;</code></td><td></td><td>per thousand sign</td></tr><tr><td>8364</td><td>20AC</td><td>€</td><td><code>&amp;#8364;</code></td><td><code>&amp;euro;</code></td><td>euro sign</td></tr><tr><td>8482</td><td>2122</td><td>™</td><td><code>&amp;#8482;</code></td><td></td><td>trade mark sign</td></tr><tr><td>180</td><td>B4</td><td>´</td><td><code>&amp;#180;</code></td><td><code>&amp;acute;</code></td><td>acute accent - spacing acute</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;특수문자&quot;&gt;&lt;a href=&quot;#특수문자&quot; class=&quot;headerlink&quot; title=&quot;특수문자&quot;&gt;&lt;/a&gt;특수문자&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://www.ascii.cl/htmlcodes.htm&quot; target=&quot;_blank&quot; r
      
    
    </summary>
    
      <category term="markdown" scheme="http://korcow.github.io/categories/markdown/"/>
    
    
  </entry>
  
  <entry>
    <title>정보기능 함수</title>
    <link href="http://korcow.github.io/2017/12/08/mysql-%EC%A0%95%EB%B3%B4%EA%B8%B0%EB%8A%A5%ED%95%A8%EC%88%98/"/>
    <id>http://korcow.github.io/2017/12/08/mysql-정보기능함수/</id>
    <published>2017-12-08T05:03:13.603Z</published>
    <updated>2017-12-08T05:03:13.603Z</updated>
    
    <content type="html"><![CDATA[<h3 id="정보-기능"><a href="#정보-기능" class="headerlink" title="정보 기능"></a>정보 기능</h3><p><a href="https://dev.mysql.com/doc/refman/5.7/en/information-functions.html" target="_blank" rel="external">정보 기능 함수</a></p><table><thead><tr><th>이름</th><th>기술</th></tr></thead><tbody><tr><td>BENCHMARK()</td><td>표현식을 반복적으로 실행</td></tr><tr><td>CHARSET()</td><td>인수의 캐릭터 세트를 돌려줍니다.</td></tr><tr><td>COERCIBILITY()</td><td>문자열 인수의 조합 강제력 값을 반환합니다.</td></tr><tr><td>COLLATION()</td><td>캐릭터 라인 인수의 조합을 돌려줍니다.</td></tr><tr><td>CONNECTION_ID()</td><td>접속의 접속 ID (thread ID)를 돌려줍니다.</td></tr><tr><td>CURRENT_USER(), CURRENT_USER</td><td>인증 된 사용자 이름 및 호스트 이름</td></tr><tr><td>DATABASE()</td><td>기본 (현재) 데이터베이스 이름을 반환합니다.</td></tr><tr><td>FOUND_ROWS()</td><td>LIMIT 절이있는 SELECT의 경우 반환되는 행 수에는 LIMIT 절이 없었습니다</td></tr><tr><td>LAST_INSERT_ID()</td><td>마지막 INSERT에 대한 AUTOINCREMENT 열의 값</td></tr><tr><td>ROW_COUNT()</td><td>업데이트 된 행 수</td></tr><tr><td>SCHEMA()</td><td>DATABASE ()의 동의어</td></tr><tr><td>SESSION_USER()</td><td>USER () 동의어</td></tr><tr><td>SYSTEM_USER()</td><td>USER () 동의어</td></tr><tr><td>USER()</td><td>클라이언트가 제공 한 사용자 이름과 호스트 이름</td></tr><tr><td>VERSION()</td><td>MySQL 서버 버전을 나타내는 문자열을 반환합니다.</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;정보-기능&quot;&gt;&lt;a href=&quot;#정보-기능&quot; class=&quot;headerlink&quot; title=&quot;정보 기능&quot;&gt;&lt;/a&gt;정보 기능&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/informati
      
    
    </summary>
    
      <category term="Mysql" scheme="http://korcow.github.io/categories/Mysql/"/>
    
    
  </entry>
  
  <entry>
    <title>날짜 및 시간함수</title>
    <link href="http://korcow.github.io/2017/12/08/mysql-%EB%82%A0%EC%A7%9C%EB%B0%8F%EC%8B%9C%EA%B0%84%ED%95%A8%EC%88%98/"/>
    <id>http://korcow.github.io/2017/12/08/mysql-날짜및시간함수/</id>
    <published>2017-12-08T04:57:26.897Z</published>
    <updated>2017-12-08T04:57:26.897Z</updated>
    
    <content type="html"><![CDATA[<h3 id="날짜와-시간-함수"><a href="#날짜와-시간-함수" class="headerlink" title="날짜와 시간 함수"></a>날짜와 시간 함수</h3><p><a href="https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html" target="_blank" rel="external">날짜와 시간함수</a><br>이 섹션에서는 시간 값을 조작하는 데 사용할 수있는 함수에 대해 설명합니다. 각 날짜와 시간 유형에있는 값 범위와 값을 지정할 수있는 유효한 형식에 대한 설명은 11.3 절, “날짜와 시간 유형”을 참조하십시오 .</p><table><thead><tr><th>이름</th><th>기술</th></tr></thead><tbody><tr><td>ADDDATE()</td><td>날짜 값에 시간 값 (간격) 추가</td></tr><tr><td>ADDTIME()</td><td>시간 추가</td></tr><tr><td>CONVERT_TZ()</td><td>한 시간대에서 다른 시간대로 변환</td></tr><tr><td>CURDATE()</td><td>현재 날짜를 반환합니다.</td></tr><tr><td>CURRENT_DATE(), CURRENT_DATE</td><td>CURDATE ()의 동의어</td></tr><tr><td>CURRENT_TIME(), CURRENT_TIME</td><td>CURTIME ()의 동의어</td></tr><tr><td>CURRENT_TIMESTAMP(), CURRENT_TIMESTAMP</td><td>NOW ()의 동의어</td></tr><tr><td>CURTIME()</td><td>현재 시간 반환</td></tr><tr><td>DATE()</td><td>날짜 또는 datetime 식의 날짜 부분 추출</td></tr><tr><td>DATE_ADD()</td><td>날짜 값에 시간 값 (간격) 추가</td></tr><tr><td>DATE_FORMAT()</td><td>지정된 날짜 형식</td></tr><tr><td>DATE_SUB()</td><td>날짜에서 시간 값 (간격)을 뺍니다.</td></tr><tr><td>DATEDIFF()</td><td>두 날짜 빼기</td></tr><tr><td>DAY()</td><td>DAYOFMONTH ()의 동의어</td></tr><tr><td>DAYNAME()</td><td>평일의 이름을 반환합니다.</td></tr><tr><td>DAYOFMONTH()</td><td>그 달의 일 반환 (0-31)</td></tr><tr><td>DAYOFWEEK()</td><td>인수의 요일 색인을 반환합니다.</td></tr><tr><td>DAYOFYEAR()</td><td>요일 반환 (1-366)</td></tr><tr><td>EXTRACT()</td><td>날짜의 일부 추출</td></tr><tr><td>FROM_DAYS()</td><td>일자 번호를 날짜로 변환하십시오.</td></tr><tr><td>FROM_UNIXTIME()</td><td>유닉스 타임 스탬프를 날짜로 표시</td></tr><tr><td>GET_FORMAT()</td><td>날짜 형식 문자열 반환</td></tr><tr><td>HOUR()</td><td>시간 추출</td></tr><tr><td>LAST_DAY</td><td>인수의 달의 마지막 날을 반환합니다.</td></tr><tr><td>LOCALTIME(), LOCALTIME</td><td>NOW ()의 동의어</td></tr><tr><td>LOCALTIMESTAMP, LOCALTIMESTAMP()</td><td>NOW ()의 동의어</td></tr><tr><td>MAKEDATE()</td><td>년과 년의 날짜 만들기</td></tr><tr><td>MAKETIME()</td><td>시간, 분, 초에서 시간 생성</td></tr><tr><td>MICROSECOND()</td><td>인수에서 마이크로 초를 반환합니다.</td></tr><tr><td>MINUTE()</td><td>인수에서 분 반환</td></tr><tr><td>MONTH()</td><td>전달 된 날짜로부터 해당 달 반환</td></tr><tr><td>MONTHNAME()</td><td>그 달의 이름을 반환하십시오.</td></tr><tr><td>NOW()</td><td>현재 날짜와 시간을 반환합니다.</td></tr><tr><td>PERIOD_ADD()</td><td>한 달에서 한 달 추가</td></tr><tr><td>PERIOD_DIFF()</td><td>마침표 사이의 개월 수 반환</td></tr><tr><td>QUARTER()</td><td>날짜 인수에서 쿼터를 반환합니다.</td></tr><tr><td>SEC_TO_TIME()</td><td>초를 ‘HH : MM : SS’형식으로 변환합니다.</td></tr><tr><td>SECOND()</td><td>두 번째 (0-59)</td></tr><tr><td>STR_TO_DATE()</td><td>문자열을 날짜로 변환</td></tr><tr><td>SUBDATE()</td><td>세 개의 인수로 호출 할 때 DATE_SUB ()의 동의어</td></tr><tr><td>SUBTIME()</td><td>시간 빼기</td></tr><tr><td>SYSDATE()</td><td>함수가 실행되는 시간을 반환합니다.</td></tr><tr><td>TIME()</td><td>전달 된 표현식의 시간 부분을 추출합니다.</td></tr><tr><td>TIME_FORMAT()</td><td>시간 형식</td></tr><tr><td>TIME_TO_SEC()</td><td>인수가 초로 변환 된 것을 반환합니다.</td></tr><tr><td>TIMEDIFF()</td><td>시간 빼기</td></tr><tr><td>TIMESTAMP()</td><td>인수가 하나 인 경우이 함수는 날짜 또는 datetime 식을 반환합니다. 두 개의 인수, 인수의 합계</td></tr><tr><td>TIMESTAMPADD()</td><td>날짜 시간 표현식에 간격 추가</td></tr><tr><td>TIMESTAMPDIFF()</td><td>datetime 표현식에서 간격 빼기</td></tr><tr><td>TO_DAYS()</td><td>요일로 변환 된 날짜 인수를 반환합니다.</td></tr><tr><td>TO_SECONDS()</td><td>연도 0부터 초로 변환 된 날짜 또는 datetime 인수를 반환합니다.</td></tr><tr><td>UNIX_TIMESTAMP()</td><td>Unix 타임 스탬프 반환</td></tr><tr><td>UTC_DATE()</td><td>현재의 UTC 날짜를 반환합니다.</td></tr><tr><td>UTC_TIME()</td><td>현재의 UTC 시간을 반환합니다.</td></tr><tr><td>UTC_TIMESTAMP()</td><td>현재의 UTC 날짜와 시간을 반환합니다.</td></tr><tr><td>WEEK()</td><td>주 번호를 반환하십시오.</td></tr><tr><td>WEEKDAY()</td><td>평일 색인 반환</td></tr><tr><td>WEEKOFYEAR()</td><td>달력 주 날짜를 반환합니다 (1-53).</td></tr><tr><td>YEAR()</td><td>연중 무휴</td></tr><tr><td>YEARWEEK()</td><td>연도와 주를 반환하십시오.</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;날짜와-시간-함수&quot;&gt;&lt;a href=&quot;#날짜와-시간-함수&quot; class=&quot;headerlink&quot; title=&quot;날짜와 시간 함수&quot;&gt;&lt;/a&gt;날짜와 시간 함수&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://dev.mysql.com/doc/refman/
      
    
    </summary>
    
      <category term="Mysql" scheme="http://korcow.github.io/categories/Mysql/"/>
    
    
  </entry>
  
  <entry>
    <title>수치함수 와 연산자</title>
    <link href="http://korcow.github.io/2017/12/08/mysql-%EC%88%98%EC%B9%98%ED%95%A8%EC%88%98/"/>
    <id>http://korcow.github.io/2017/12/08/mysql-수치함수/</id>
    <published>2017-12-08T04:52:19.426Z</published>
    <updated>2017-12-08T04:52:19.426Z</updated>
    
    <content type="html"><![CDATA[<h3 id="ContentInput"><a href="#ContentInput" class="headerlink" title="ContentInput"></a>ContentInput</h3><p><a href="https://dev.mysql.com/doc/refman/5.7/en/numeric-functions.html" target="_blank" rel="external">12.6 수치 함수와 연산자</a><br>12.6.1 산술 연산자<br>12.6.2 수학 함수</p><table><thead><tr><th>이름</th><th>기술</th></tr></thead><tbody><tr><td>ABS()</td><td>절대 값 반환</td></tr><tr><td>ACOS()</td><td>아크 코사인 반환</td></tr><tr><td>ASIN()</td><td>아크 사인 반환</td></tr><tr><td>ATAN()</td><td>아크 탄젠트를 반환합니다.</td></tr><tr><td>ATAN2(), ATAN()</td><td>두 인수의 아크 탄젠트를 반환합니다.</td></tr><tr><td>CEIL()</td><td>인수보다 작지 않은 가장 작은 정수 값을 반환합니다.</td></tr><tr><td>CEILING()</td><td>인수보다 작지 않은 가장 작은 정수 값을 반환합니다.</td></tr><tr><td>CONV()</td><td>서로 다른 숫자 사이의 숫자 변환</td></tr><tr><td>COS()</td><td>코사인을 반환합니다.</td></tr><tr><td>COT()</td><td>코탄 센트를 반환하십시오.</td></tr><tr><td>CRC32()</td><td>순환 중복 검사 값 계산</td></tr><tr><td>DEGREES()</td><td>라디안을도 단위로 변환하십시오.</td></tr><tr><td>DIV</td><td>정수 부</td></tr><tr><td><code>/</code></td><td>분할 연산자</td></tr><tr><td>EXP()</td><td>의 힘을 키우다</td></tr><tr><td>FLOOR()</td><td>인수보다 크지 않은 가장 큰 정수 값을 반환합니다.</td></tr><tr><td>LN()</td><td>인수의 자연 로그를 반환합니다.</td></tr><tr><td>LOG()</td><td>첫 번째 인수의 자연 로그를 반환합니다.</td></tr><tr><td>LOG10()</td><td>인수의 기본 10 로그를 반환합니다.</td></tr><tr><td>LOG2()</td><td>인수의 기본 2 로그를 반환합니다.</td></tr><tr><td><code>-</code></td><td>마이너스 연산자</td></tr><tr><td>MOD()</td><td>나머지를 돌려 준다.</td></tr><tr><td><code>%</code>, MOD</td><td>모듈러스 연산자</td></tr><tr><td>PI()</td><td>파이의 값을 돌려 준다.</td></tr><tr><td><code>+</code></td><td>더하기 연산자</td></tr><tr><td>POW()</td><td>지정된 인수로 설정된 인수를 리턴합니다.</td></tr><tr><td>POWER()</td><td>지정된 인수로 설정된 인수를 리턴합니다.</td></tr><tr><td>RADIANS()</td><td>라디안으로 변환 된 반환 인수</td></tr><tr><td>RAND()</td><td>임의의 부동 소수점 값 반환</td></tr><tr><td>ROUND()</td><td>인수 라운드</td></tr><tr><td>SIGN()</td><td>인수의 부호를 돌려 준다.</td></tr><tr><td>SIN()</td><td>인수의 사인을 돌려 준다.</td></tr><tr><td>SQRT()</td><td>인수의 제곱근을 반환합니다.</td></tr><tr><td>TAN()</td><td>인수의 탄젠트를 반환합니다.</td></tr><tr><td><code>*</code></td><td>곱셈 연산자</td></tr><tr><td>TRUNCATE()</td><td>소수점 이하 자릿수로 자릅니다.</td></tr><tr><td><code>-</code></td><td>인수의 부호 변경</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;ContentInput&quot;&gt;&lt;a href=&quot;#ContentInput&quot; class=&quot;headerlink&quot; title=&quot;ContentInput&quot;&gt;&lt;/a&gt;ContentInput&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://dev.mysql.com
      
    
    </summary>
    
      <category term="Mysql" scheme="http://korcow.github.io/categories/Mysql/"/>
    
    
  </entry>
  
  <entry>
    <title>문자열함수</title>
    <link href="http://korcow.github.io/2017/12/08/mysql-%EB%AC%B8%EC%9E%90%EC%97%B4%ED%95%A8%EC%88%98/"/>
    <id>http://korcow.github.io/2017/12/08/mysql-문자열함수/</id>
    <published>2017-12-08T04:47:39.988Z</published>
    <updated>2017-12-08T04:47:39.989Z</updated>
    
    <content type="html"><![CDATA[<h3 id="문자열-함수"><a href="#문자열-함수" class="headerlink" title="문자열 함수"></a>문자열 함수</h3><p><a href="&quot;https://dev.mysql.com/doc/refman/5.7/en/string-functions.html&quot;">12.5 문자열 함수</a><br>12.5.1 문자열 비교 함수<br>12.5.2 정규 표현식<br>12.5.3 함수 결과의 문자 집합 및 데이터 정렬</p><table><thead><tr><th>이름</th><th>기술</th></tr></thead><tbody><tr><td>ASCII()</td><td>맨 왼쪽 문자의 숫자 값을 반환합니다.</td></tr><tr><td>BIN()</td><td>숫자의 2 진 표현을 포함하는 문자열을 반환합니다.</td></tr><tr><td>BIT_LENGTH()</td><td>인자의 길이를 비트 단위로 반환</td></tr><tr><td>CHAR()</td><td>전달 된 각 정수에 대한 문자를 반환합니다.</td></tr><tr><td>CHAR_LENGTH()</td><td>인수의 문자 수를 반환합니다.</td></tr><tr><td>CHARACTER_LENGTH()</td><td>CHAR_LENGTH ()의 동의어</td></tr><tr><td>CONCAT()</td><td>연결된 문자열 반환</td></tr><tr><td>CONCAT_WS()</td><td>구분 기호로 연결 문자열 반환</td></tr><tr><td>ELT()</td><td>인덱스 번호의 문자열 반환</td></tr><tr><td>EXPORT_SET()</td><td>값 비트에 설정된 모든 비트에 대해 on 문자열을 가져오고 모든 unset 비트에 대해 off 문자열을 가져 오는 문자열을 반환합니다.</td></tr><tr><td>FIELD()</td><td>후속 인수의 최초의 인수의 인덱스 (위치)를 돌려줍니다.</td></tr><tr><td>FIND_IN_SET()</td><td>2 번째의 인수의 최초의 인수의 인덱스 위치를 돌려줍니다.</td></tr><tr><td>FORMAT()</td><td>지정된 소수 자릿수로 포맷 된 숫자를 반환합니다.</td></tr><tr><td>FROM_BASE64()</td><td>64 진수 문자열로 디코드하고 결과를 반환합니다.</td></tr><tr><td>HEX()</td><td>십진수 또는 문자열 값의 16 진수 표현을 반환합니다.</td></tr><tr><td>INSERT()</td><td>지정된 위치에 지정된 문자 수까지 부분 문자열을 삽입하십시오.</td></tr><tr><td>INSTR()</td><td>최초의 substring의 인덱스를 돌려줍니다.</td></tr><tr><td>LCASE()</td><td>LOWER ()의 동의어</td></tr><tr><td>LEFT()</td><td>지정된 최대 수의 문자를 반환합니다.</td></tr><tr><td>LENGTH()</td><td>캐릭터 라인의 길이를 바이트 단위로 돌려줍니다.</td></tr><tr><td>LIKE</td><td>단순한 패턴 매칭</td></tr><tr><td>LOAD_FILE()</td><td>명명 된 파일로드</td></tr><tr><td>LOCATE()</td><td>부분 문자열의 첫 번째 위치의 위치를 반환합니다.</td></tr><tr><td>LOWER()</td><td>인수를 소문자로 반환하십시오.</td></tr><tr><td>LPAD()</td><td>지정된 캐릭터 라인을 사용해 왼쪽으로 패딩 된 캐릭터 라인 인수를 돌려줍니다.</td></tr><tr><td>LTRIM()</td><td>선행 공백 제거</td></tr><tr><td>MAKE_SET()</td><td>해당 비트가 비트 단위로 설정된 쉼표로 구분 된 문자열 집합을 반환합니다.</td></tr><tr><td>MATCH</td><td>전체 텍스트 검색 수행</td></tr><tr><td>MID()</td><td>지정된 위치로부터 시작되는 부분 캐릭터 라인을 돌려줍니다.</td></tr><tr><td>NOT LIKE</td><td>간단한 패턴 매칭 부정</td></tr><tr><td>NOT REGEXP</td><td>REGEXP의 부정</td></tr><tr><td>OCT()</td><td>숫자의 8 진수 표현을 포함하는 문자열을 반환합니다.</td></tr><tr><td>OCTET_LENGTH()</td><td>LENGTH ()의 동의어</td></tr><tr><td>ORD()</td><td>인수의 가장 왼쪽 문자에 대한 문자 코드를 반환합니다.</td></tr><tr><td>POSITION()</td><td>LOCATE ()의 동의어</td></tr><tr><td>QUOTE()</td><td>SQL 문에서 사용할 인수 탈출</td></tr><tr><td>REGEXP</td><td>문자열이 정규 표현식과 일치하는지 여부</td></tr><tr><td>REPEAT()</td><td>지정된 횟수만큼 문자열 반복</td></tr><tr><td>REPLACE()</td><td>지정된 문자열의 발생 바꾸기</td></tr><tr><td>REVERSE()</td><td>문자열의 문자를 반대로합니다.</td></tr><tr><td>RIGHT()</td><td>지정된 가장 오른쪽의 문자 수를 돌려줍니다.</td></tr><tr><td>RLIKE</td><td>REGEXP에 대한 동의어</td></tr><tr><td>RPAD()</td><td>지정한 횟수만큼 문자열 추가</td></tr><tr><td>RTRIM()</td><td>후행 공백 제거</td></tr><tr><td>SOUNDEX()</td><td>soundex 문자열을 반환합니다.</td></tr><tr><td>SOUNDS LIKE</td><td>소리 비교</td></tr><tr><td>SPACE()</td><td>지정된 갯수의 공백을 반환</td></tr><tr><td>STRCMP()</td><td>두 문자열 비교</td></tr><tr><td>SUBSTR()</td><td>지정된대로 부분 문자열을 반환합니다.</td></tr><tr><td>SUBSTRING()</td><td>지정된대로 부분 문자열을 반환합니다.</td></tr><tr><td>SUBSTRING_INDEX()</td><td>delimiter가 지정된 횟수만큼 나오기 전에 문자열에서 부분 문자열을 반환합니다.</td></tr><tr><td>TO_BASE64()</td><td>base-64 문자열로 변환 된 인수를 반환합니다.</td></tr><tr><td>TRIM()</td><td>선행 및 후행 공백 제거</td></tr><tr><td>UCASE()</td><td>UPPER ()의 동의어</td></tr><tr><td>UNHEX()</td><td>숫자의 16 진수 표현을 포함하는 문자열을 반환합니다.</td></tr><tr><td>UPPER()</td><td>대문자로 변환</td></tr><tr><td>WEIGHT_STRING()</td><td>문자열에 대한 가중치 문자열을 반환합니다.</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;문자열-함수&quot;&gt;&lt;a href=&quot;#문자열-함수&quot; class=&quot;headerlink&quot; title=&quot;문자열 함수&quot;&gt;&lt;/a&gt;문자열 함수&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;&amp;quot;https://dev.mysql.com/doc/refman/5.7/en
      
    
    </summary>
    
      <category term="Mysql" scheme="http://korcow.github.io/categories/Mysql/"/>
    
    
  </entry>
  
  <entry>
    <title>사용자 및 database 생성</title>
    <link href="http://korcow.github.io/2017/12/07/mysql-%EC%82%AC%EC%9A%A9%EC%9E%90%EB%B0%8Fdb%EC%83%9D%EC%84%B1/"/>
    <id>http://korcow.github.io/2017/12/07/mysql-사용자및db생성/</id>
    <published>2017-12-07T09:48:18.014Z</published>
    <updated>2017-12-07T09:48:18.014Z</updated>
    
    <content type="html"><![CDATA[<h3 id="데이타베이스-생성"><a href="#데이타베이스-생성" class="headerlink" title="데이타베이스 생성"></a>데이타베이스 생성</h3><h5 id="기본구문"><a href="#기본구문" class="headerlink" title="기본구문"></a>기본구문</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">CREATE</span> &#123;<span class="keyword">DATABASE</span> | <span class="keyword">SCHEMA</span>&#125; [<span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span>] db_name</div><div class="line">    [create_specification] ...</div><div class="line"></div><div class="line">create_specification:</div><div class="line">    [<span class="keyword">DEFAULT</span>] <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> [=] charset_name</div><div class="line">  | [<span class="keyword">DEFAULT</span>] <span class="keyword">COLLATE</span> [=] collation_name</div></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">show</span> <span class="keyword">databases</span>;</div><div class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> dbname <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin;</div></pre></td></tr></table></figure><h3 id="사용자-생성"><a href="#사용자-생성" class="headerlink" title="사용자 생성"></a>사용자 생성</h3><p>mysql 5.7 이상은 Create User 구문 사용<br>MySQL 5.7 이상</p><h4 id="기본구문-1"><a href="#기본구문-1" class="headerlink" title="기본구문"></a>기본구문</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> [<span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span>]</div><div class="line">    <span class="keyword">user</span> [auth_option] [, <span class="keyword">user</span> [auth_option]] ...</div><div class="line">    [REQUIRE &#123;<span class="keyword">NONE</span> | tls_option [[<span class="keyword">AND</span>] tls_option] ...&#125;]</div><div class="line">    [<span class="keyword">WITH</span> resource_option [resource_option] ...]</div><div class="line">    [password_option | lock_option] ...</div><div class="line"></div><div class="line">auth_option: &#123;</div><div class="line">    <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'auth_string'</span></div><div class="line">  | <span class="keyword">IDENTIFIED</span> <span class="keyword">WITH</span> auth_plugin</div><div class="line">  | <span class="keyword">IDENTIFIED</span> <span class="keyword">WITH</span> auth_plugin <span class="keyword">BY</span> <span class="string">'auth_string'</span></div><div class="line">  | <span class="keyword">IDENTIFIED</span> <span class="keyword">WITH</span> auth_plugin <span class="keyword">AS</span> <span class="string">'hash_string'</span></div><div class="line">  | <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="keyword">PASSWORD</span> <span class="string">'hash_string'</span></div><div class="line">&#125;</div><div class="line"></div><div class="line">tls_option: &#123;</div><div class="line">   SSL</div><div class="line"> | X509</div><div class="line"> | CIPHER <span class="string">'cipher'</span></div><div class="line"> | ISSUER <span class="string">'issuer'</span></div><div class="line"> | SUBJECT <span class="string">'subject'</span></div><div class="line">&#125;</div><div class="line"></div><div class="line">resource_option: &#123;</div><div class="line">    MAX_QUERIES_PER_HOUR <span class="keyword">count</span></div><div class="line">  | MAX_UPDATES_PER_HOUR <span class="keyword">count</span></div><div class="line">  | MAX_CONNECTIONS_PER_HOUR <span class="keyword">count</span></div><div class="line">  | MAX_USER_CONNECTIONS <span class="keyword">count</span></div><div class="line">&#125;</div><div class="line"></div><div class="line">password_option: &#123;</div><div class="line">    <span class="keyword">PASSWORD</span> <span class="keyword">EXPIRE</span></div><div class="line">  | <span class="keyword">PASSWORD</span> <span class="keyword">EXPIRE</span> <span class="keyword">DEFAULT</span></div><div class="line">  | <span class="keyword">PASSWORD</span> <span class="keyword">EXPIRE</span> <span class="keyword">NEVER</span></div><div class="line">  | <span class="keyword">PASSWORD</span> <span class="keyword">EXPIRE</span> <span class="built_in">INTERVAL</span> N <span class="keyword">DAY</span></div><div class="line">&#125;</div><div class="line"></div><div class="line">lock_option: &#123;</div><div class="line">    <span class="keyword">ACCOUNT</span> <span class="keyword">LOCK</span></div><div class="line">  | <span class="keyword">ACCOUNT</span> <span class="keyword">UNLOCK</span></div><div class="line">&#125;</div></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"># 생성과 동시에 기간만료, 사용자가 서버에 처음 연결할 때 비밀번호를 선택</div><div class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">'jeffrey'</span>@<span class="string">'localhost'</span></div><div class="line">  <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'new_password'</span> <span class="keyword">PASSWORD</span> <span class="keyword">EXPIRE</span>;</div><div class="line"></div><div class="line"># 암호와 방식과 만료일자 지정</div><div class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">'jeffrey'</span>@<span class="string">'localhost'</span></div><div class="line">  <span class="keyword">IDENTIFIED</span> <span class="keyword">WITH</span> sha256_password <span class="keyword">BY</span> <span class="string">'new_password'</span></div><div class="line">  <span class="keyword">PASSWORD</span> <span class="keyword">EXPIRE</span> <span class="built_in">INTERVAL</span> <span class="number">180</span> <span class="keyword">DAY</span>;</div><div class="line"></div><div class="line"># 암호를 일반 텍스트로 지정하면, 기본 플러그인이 사용됨.</div><div class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">'jeffrey'</span>@<span class="string">'localhost'</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'password'</span>;</div></pre></td></tr></table></figure><p>IDENTIFIED BY PASSWORD 구문은 더 이상 사용되지 않으며 향후 MySQL 릴리스에서 제거예정</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">'userid'</span>@<span class="string">'localhost'</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'secret'</span> <span class="keyword">PASSWORD</span> <span class="keyword">EXPIRE</span> <span class="keyword">NEVER</span>;</div><div class="line"><span class="keyword">GRANT</span> ALL <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> database.* <span class="keyword">TO</span> <span class="string">'userid'</span>@<span class="string">'localhost'</span>;</div><div class="line"></div><div class="line"><span class="keyword">flush</span> <span class="keyword">privileges</span>;</div></pre></td></tr></table></figure><p>MySQL 5.7 미만<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">GRANT</span> ALL <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> database.* <span class="keyword">TO</span> <span class="string">'userid'</span>@<span class="string">'localhost'</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'secret'</span>;</div><div class="line"></div><div class="line"><span class="keyword">flush</span> <span class="keyword">privileges</span>;</div></pre></td></tr></table></figure></p><p>MySQL 암호 변경<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SET</span> <span class="keyword">PASSWORD</span> 사용</div><div class="line"><span class="keyword">SET</span> <span class="keyword">PASSWORD</span> [<span class="keyword">FOR</span> <span class="keyword">user</span>] = password_option</div><div class="line"></div><div class="line">password_option: &#123;</div><div class="line">    <span class="string">'auth_string'</span></div><div class="line">  | <span class="keyword">PASSWORD</span>(<span class="string">'auth_string'</span>)</div><div class="line">&#125;</div><div class="line"><span class="keyword">SET</span> <span class="keyword">PASSWORD</span> <span class="keyword">FOR</span> <span class="string">'userid'</span>@<span class="string">'localhost'</span> = <span class="string">'secret'</span>;</div><div class="line"></div><div class="line"><span class="keyword">Alter</span> <span class="keyword">user</span> 사용</div><div class="line"><span class="keyword">alter</span> <span class="keyword">USER</span> <span class="string">'userid'</span>@<span class="string">'localhost'</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'secret'</span> <span class="keyword">PASSWORD</span> <span class="keyword">EXPIRE</span> <span class="keyword">NEVER</span>;</div></pre></td></tr></table></figure></p><p>MySQL password policy 변경<br>5.7부터는 암호화 방식이 바뀌었음.(복잡한 암호 지원)<br>보안을 위해 복잡한 암호를 쓰라고 만들었는데, 이걸 안쓰는건 좀…</p><p>아무튼,</p><p>validate password plugin 삭제하거나 암호규정을 낮추는 방법이 있음. </p><p>mysql root 로 로그인한 후에 다음 명령어 실행후 mysql 재구동<br>uninstall plugin validate_password;</p><p>암호 규칙을 낮게 설정<br><a href="https://dev.mysql.com/doc/refman/5.7/en/validate-password-plugin.html" target="_blank" rel="external">https://dev.mysql.com/doc/refman/5.7/en/validate-password-plugin.html</a><br>my.cnf에 다음과 같이 설정하고 mysql 재구동<br>[mysqld]<br>validate_password_policy=LOW</p><p>기본 값은 1(MEDIUM) 입니다. </p><table><thead><tr><th>Policy</th><th>암호적용</th></tr></thead><tbody><tr><td>0 or LOW</td><td>Length</td></tr><tr><td>1 or MEDIUM</td><td>Length; numeric, lowercase/uppercase, and special characters</td></tr><tr><td>2 or STRONG</td><td>Length; numeric, lowercase/uppercase, and special characters; dictionary file</td></tr></tbody></table><h3 id="UTF8MB4로-테이블-생성"><a href="#UTF8MB4로-테이블-생성" class="headerlink" title="UTF8MB4로 테이블 생성"></a>UTF8MB4로 테이블 생성</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> mydatabase <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> = utf8mb4 <span class="keyword">COLLATE</span> = utf8mb4_unicode_ci;</div><div class="line"></div><div class="line"><span class="keyword">GRANT</span> ALL <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> database.selectTable <span class="keyword">TO</span> <span class="string">'userid'</span>@<span class="string">'localhost'</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'password'</span>;</div><div class="line"><span class="keyword">flush</span> <span class="keyword">privileges</span>;</div></pre></td></tr></table></figure><p>mysql utf8은 3바이트로 인식, 이모티콘은 4바이트 이므로 저장이 안됩니다.<br>모든 테이블을 MB4로 만드는건 db 관점에서 효율적이지 못하므로 이모티콘이 사용되는 테이블만 MB4로 만들거나 변경해야 합니다.<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> database_name <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> = utf8mb4 <span class="keyword">COLLATE</span> = utf8mb4_unicode_ci;</div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> table_name <span class="keyword">CONVERT</span> <span class="keyword">TO</span> <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_unicode_ci;</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;데이타베이스-생성&quot;&gt;&lt;a href=&quot;#데이타베이스-생성&quot; class=&quot;headerlink&quot; title=&quot;데이타베이스 생성&quot;&gt;&lt;/a&gt;데이타베이스 생성&lt;/h3&gt;&lt;h5 id=&quot;기본구문&quot;&gt;&lt;a href=&quot;#기본구문&quot; class=&quot;headerli
      
    
    </summary>
    
      <category term="Mysql" scheme="http://korcow.github.io/categories/Mysql/"/>
    
    
      <category term="사용자생성" scheme="http://korcow.github.io/tags/%EC%82%AC%EC%9A%A9%EC%9E%90%EC%83%9D%EC%84%B1/"/>
    
      <category term="database 생성" scheme="http://korcow.github.io/tags/database-%EC%83%9D%EC%84%B1/"/>
    
  </entry>
  
  <entry>
    <title>보안연결</title>
    <link href="http://korcow.github.io/2017/12/07/mysql-%EB%B3%B4%EC%95%88%EC%97%B0%EA%B2%B0/"/>
    <id>http://korcow.github.io/2017/12/07/mysql-보안연결/</id>
    <published>2017-12-07T09:40:08.931Z</published>
    <updated>2017-12-07T09:40:08.931Z</updated>
    
    <content type="html"><![CDATA[<h3 id="보안-접속-생성"><a href="#보안-접속-생성" class="headerlink" title="보안 접속 생성"></a>보안 접속 생성</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql_config_editor <span class="built_in">set</span> --login-path=[접속이름] --host=[host정보] --user=[계정명] --password --socket=/tmp/mysql.sock --port=3306</div></pre></td></tr></table></figure><p>소켓은 옵션이고, 패스워드는 실행시 입력해줍니다.</p><h4 id="등록-list-확인"><a href="#등록-list-확인" class="headerlink" title="등록 list 확인"></a>등록 list 확인</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql_config_editor <span class="built_in">print</span> --all</div></pre></td></tr></table></figure><h4 id="mysql-에-접속"><a href="#mysql-에-접속" class="headerlink" title="mysql 에 접속"></a>mysql 에 접속</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql --login-path=myconn</div></pre></td></tr></table></figure><p>데이터베이스를 선택할려면</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql --login-path=myconn --database=데이터베이스명</div></pre></td></tr></table></figure><p>vim에서 </p><figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">"vimrc에 추가</span></div><div class="line"><span class="keyword">vmap</span> <span class="symbol">&lt;Leader&gt;</span>sql :<span class="string">'&lt;,'</span>&gt;!mysql --login-path=local -vvv --database=mydb<span class="symbol">&lt;CR&gt;</span></div><div class="line"><span class="keyword">nnoremap</span> <span class="symbol">&lt;Leader&gt;</span>sql :.!mysql --login-path=local -vvv --database=mydb<span class="symbol">&lt;CR&gt;</span></div></pre></td></tr></table></figure><p>옵션이 궁금하면<br>mysql –help</p><h4 id="접속-정보-삭제"><a href="#접속-정보-삭제" class="headerlink" title="접속 정보 삭제"></a>접속 정보 삭제</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql_config_editor remove --login-path=myconn</div></pre></td></tr></table></figure><h4 id="전체-정보를-삭제"><a href="#전체-정보를-삭제" class="headerlink" title="전체 정보를 삭제"></a>전체 정보를 삭제</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql_config_editor remove</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;보안-접속-생성&quot;&gt;&lt;a href=&quot;#보안-접속-생성&quot; class=&quot;headerlink&quot; title=&quot;보안 접속 생성&quot;&gt;&lt;/a&gt;보안 접속 생성&lt;/h3&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class
      
    
    </summary>
    
      <category term="Mysql" scheme="http://korcow.github.io/categories/Mysql/"/>
    
    
      <category term="mysql_config_editor" scheme="http://korcow.github.io/tags/mysql-config-editor/"/>
    
  </entry>
  
  <entry>
    <title>구조체</title>
    <link href="http://korcow.github.io/2017/12/03/c-%EA%B5%AC%EC%A1%B0%EC%B2%B4/"/>
    <id>http://korcow.github.io/2017/12/03/c-구조체/</id>
    <published>2017-12-03T04:08:32.575Z</published>
    <updated>2017-12-03T04:08:32.575Z</updated>
    
    <content type="html"><![CDATA[<h3 id="구조체"><a href="#구조체" class="headerlink" title="구조체"></a>구조체</h3><p>서로 다른 형식의 자료의 집합</p><img src="/c언어기초/2017-12-02_19-30-05.png" width="500" title="구조체그림1"><p>지금까지는 변수를 선언 할 때 문자형, 정수형, 실수형 자료를 별도로 선언해서 사용했습니다. 구조체는 이런 자료형을 모아서 사용자가 원하는 자료형으로 만들어 줍니다.</p><h3 id="선언-및-사용"><a href="#선언-및-사용" class="headerlink" title="선언 및 사용"></a>선언 및 사용</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt; // strcpy()</span></span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">struct</span> _<span class="title">Score</span>&#123;</span></div><div class="line">    <span class="keyword">char</span> name[<span class="number">20</span>];</div><div class="line">    <span class="keyword">int</span> kor;</div><div class="line">    <span class="keyword">int</span> eng;</div><div class="line">    <span class="keyword">int</span> math;</div><div class="line">    <span class="keyword">int</span> sum;</div><div class="line">    <span class="keyword">double</span> avg;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> *argv[])</span> </span>&#123;</div><div class="line">    </div><div class="line">    <span class="class"><span class="keyword">struct</span> _<span class="title">Score</span> <span class="title">score</span>;</span></div><div class="line"></div><div class="line">    <span class="built_in">strcpy</span>(score.name, <span class="string">"유재석"</span>);</div><div class="line">    score.kor = <span class="number">90</span>;</div><div class="line">    score.eng = <span class="number">95</span>;</div><div class="line">    score.math = <span class="number">100</span>;</div><div class="line">    score.sum = score.kor + score.eng + score.math;</div><div class="line">    score.avg = score.sum / <span class="number">3</span>;</div><div class="line"></div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s%d\n"</span>, <span class="string">"국어 점수: "</span>, score.kor);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s%d\n"</span>, <span class="string">"영어 점수: "</span>, score.eng);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s%d\n"</span>, <span class="string">"수학 점수: "</span>, score.math);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s%d\n"</span>, <span class="string">"총점 점수: "</span>, score.sum);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s%f\n"</span>, <span class="string">"평균 점수: "</span>, score.avg);</div><div class="line"></div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="typedef"><a href="#typedef" class="headerlink" title="typedef"></a>typedef</h3><p>typedef는 자료형을 재정의하는 기능입니다. 단순히 이름을 변경하는 기능입니다.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> *argv[])</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">typedef</span> <span class="keyword">int</span> I;</div><div class="line"></div><div class="line">    I iNum;</div><div class="line">    iNum = <span class="number">100</span>;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s%d\n"</span>, <span class="string">"값은:"</span>, iNum);</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>구조체도 자료형이기 때문에 typedef를 이용해 별칭을 만들 수 있습니다.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt; // strcpy()</span></span></div><div class="line"></div><div class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">Score</span>&#123;</span></div><div class="line">    <span class="keyword">char</span> name[<span class="number">20</span>];</div><div class="line">    <span class="keyword">int</span> kor;</div><div class="line">    <span class="keyword">int</span> eng;</div><div class="line">    <span class="keyword">int</span> math;</div><div class="line">    <span class="keyword">int</span> sum;</div><div class="line">    <span class="keyword">double</span> avg;</div><div class="line">&#125; Score;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> *argv[])</span> </span>&#123;</div><div class="line">    </div><div class="line">    Score score;</div><div class="line"></div><div class="line">    <span class="built_in">strcpy</span>(score.name, <span class="string">"유재석"</span>);</div><div class="line">    score.kor = <span class="number">90</span>;</div><div class="line">    score.eng = <span class="number">95</span>;</div><div class="line">    score.math = <span class="number">100</span>;</div><div class="line">    score.sum = score.kor + score.eng + score.math;</div><div class="line">    score.avg = score.sum / <span class="number">3</span>;</div><div class="line"></div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s%d\n"</span>, <span class="string">"국어 점수: "</span>, score.kor);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s%d\n"</span>, <span class="string">"영어 점수: "</span>, score.eng);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s%d\n"</span>, <span class="string">"수학 점수: "</span>, score.math);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s%d\n"</span>, <span class="string">"총점 점수: "</span>, score.sum);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s%f\n"</span>, <span class="string">"평균 점수: "</span>, score.avg);</div><div class="line"></div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;구조체&quot;&gt;&lt;a href=&quot;#구조체&quot; class=&quot;headerlink&quot; title=&quot;구조체&quot;&gt;&lt;/a&gt;구조체&lt;/h3&gt;&lt;p&gt;서로 다른 형식의 자료의 집합&lt;/p&gt;
&lt;img src=&quot;/c언어기초/2017-12-02_19-30-05.png&quot; wid
      
    
    </summary>
    
      <category term="C언어기초" scheme="http://korcow.github.io/categories/C%EC%96%B8%EC%96%B4%EA%B8%B0%EC%B4%88/"/>
    
    
      <category term="구조체" scheme="http://korcow.github.io/tags/%EA%B5%AC%EC%A1%B0%EC%B2%B4/"/>
    
  </entry>
  
  <entry>
    <title>REPL 사용하기</title>
    <link href="http://korcow.github.io/2017/12/02/python-repl-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/"/>
    <id>http://korcow.github.io/2017/12/02/python-repl-사용하기/</id>
    <published>2017-12-02T01:49:16.867Z</published>
    <updated>2017-12-02T01:49:16.867Z</updated>
    
    <content type="html"><![CDATA[<h3 id="REPL"><a href="#REPL" class="headerlink" title="REPL"></a>REPL</h3><p>파이썬의 REPL은 기본적으로 readline api를 사용하기 때문에 키보드 단축키 사용법이 terminal 과 거의 같습니다. </p><h4 id="단축키"><a href="#단축키" class="headerlink" title="단축키"></a>단축키</h4><table><thead><tr><th>단축키</th><th>설명</th></tr></thead><tbody><tr><td><code>TAB</code></td><td>자동완성(파일및디렉토리, 명령을 자동완성)</td></tr><tr><td><code>Ctrl+h</code></td><td>백스페이와 같습니다.(더 편합니다.)</td></tr><tr><td><code>Ctrl+a</code></td><td>처음으로 이동</td></tr><tr><td><code>Ctrl+e</code></td><td>행 끝으로 이동</td></tr><tr><td><code>Ctrl+b</code></td><td>한 문자 뒤로 이동</td></tr><tr><td><code>Alt+b</code></td><td>한 단어 뒤로 이동</td></tr><tr><td><code>Ctrl+f</code></td><td>한 문자 앞으로 이동</td></tr><tr><td><code>Alt+f</code></td><td>한 단어 앞으로 이동</td></tr><tr><td><code>Ctrl+u</code></td><td>현재줄을 삭제합니다.</td></tr><tr><td><code>Ctrl+k</code></td><td>커서 위치에서 행 끝까지 삭제합니다.</td></tr><tr><td><code>Ctrl+w</code></td><td>커서앞 한단어를 삭제합니다.</td></tr><tr><td><code>Esc+Backspace</code></td><td>이전 단어 삭제</td></tr><tr><td><code>Ctrl+y</code></td><td>클립보드에서 텍스트를 붙여넣습니다.</td></tr><tr><td><code>Ctrl+l</code></td><td>화면 상단에 현재 줄을 남겨두고 화면을 지웁니다.</td></tr><tr><td><code>Ctrl+r</code></td><td>증분 검색 기록 을 역순으로 추적</td></tr><tr><td><code>Alt+p</code></td><td>비 증분 검색 기록을 역순으로 추적</td></tr><tr><td><code>Ctrl+p</code></td><td>비 증분 검색 기록을 역순으로 추적</td></tr></tbody></table><h4 id="help"><a href="#help" class="headerlink" title="help"></a>help</h4><p>프롬프트에서 help()를 입력합니다.<br>도움말 유틸리티로 들어가게 되는데 이때 topics를 입력합니다.<br>도움말 목차가 리스트되고 원하는 타이틀을 입력하면 도움말을 보여줍니다.<br>사용법은 less와 동일합니다. 종료는 quit 또는 q<br>modules, keywords, symbols 동일하게 사용할 수 있습니다.<br>symbols 는 예약된 표시문자를 확인 할 수 있습니다.<br>keywords 는 예약어를 볼수 있습니다.<br>modules는 클래스 리스트를 볼수 있습니다.</p><h4 id="dir"><a href="#dir" class="headerlink" title="dir"></a>dir</h4><p>python은 c언어와 다르게 한번에 컴파일해서 사용하는 것이 아니라 스크립트를 한줄씩 인터프리터가 처리하는 방식으로 구동됩니다.<br>처음에 실행된 인터프리터의 머리는 텅 비어있습니다.<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt;dir()</div><div class="line">[<span class="string">'__annotations__'</span>, <span class="string">'__builtins__'</span>, <span class="string">'__doc__'</span>, <span class="string">'__loader__'</span></div><div class="line">, <span class="string">'__name__'</span>, <span class="string">'__package__'</span>, <span class="string">'__spec__'</span>]</div><div class="line">&gt;&gt;&gt;</div></pre></td></tr></table></figure></p><p>언더바 2개로 감싸저 있는 것을 모듈이라고 합니다. 클래스의 집합이라고 생각하면 됩니다.<br>클래스는 변수의 집합이구요.<br>각각의 모듈이 궁금하면 help(“모듈명”) 하면 됩니다.<br>위에 리스트된 모듈이 파이썬기 동작되기 위한 기본 모듈입니다. 이 모듈들이 메모리에 적재되어 있는 겁니다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>iKor = <span class="number">100</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>iEng = <span class="number">90</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>iMath = <span class="number">90</span></div></pre></td></tr></table></figure><p>위와 같이 입력하고 dir() 해보세요.<br>변수를 선언 한겁니다. 변수는 메모리의 스택영역에 적재 됩니다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>dir()</div><div class="line">[<span class="string">'__annotations__'</span>, <span class="string">'__builtins__'</span>, <span class="string">'__doc__'</span>, <span class="string">'__loader__'</span></div><div class="line">, <span class="string">'__name__'</span>, <span class="string">'__package__'</span>, <span class="string">'__spec__'</span>, <span class="string">'iEng'</span>, <span class="string">'iMath'</span>, <span class="string">'ikor'</span>]</div></pre></td></tr></table></figure><p>그럼 메모리 속을 들여다 봅시다. 처음에 있는 모듈 부터 차례로 입력하세요.<br>잠깐 REPL는 shell과 사용법이 똑같다고 했습니다. 전부 입력하지 말고 tab자동완성을 쓰세요.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>__annotations__</div><div class="line">&#123;&#125;</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>__builtins__</div><div class="line">&lt;module <span class="string">'builtins'</span> (built-<span class="keyword">in</span>)&gt;</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>__doc__</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>__loader__</div><div class="line">&lt;<span class="class"><span class="keyword">class</span> '<span class="title">_frozen_importlib</span>.<span class="title">BuiltinImporter</span>'&gt;</span></div><div class="line"><span class="class">&gt;&gt;&gt; <span class="title">__name__</span></span></div><div class="line"><span class="class">'<span class="title">__main__</span>'</span></div><div class="line"><span class="class">&gt;&gt;&gt; <span class="title">__package__</span></span></div><div class="line"><span class="class">&gt;&gt;&gt; <span class="title">__spec__</span></span></div><div class="line"><span class="class">&gt;&gt;&gt; <span class="title">iEng</span></span></div><div class="line"><span class="class">90</span></div><div class="line"><span class="class">&gt;&gt;&gt; <span class="title">iMath</span></span></div><div class="line"><span class="class">90</span></div><div class="line"><span class="class">&gt;&gt;&gt; <span class="title">iKor</span></span></div><div class="line"><span class="class">100</span></div><div class="line"><span class="class">&gt;&gt;&gt;</span></div></pre></td></tr></table></figure><ul><li><code>__annotations__</code>은 주석입니다. 우리가 주석을 사용하지 않았으니 아무것도 없네요.</li><li><code>__builtins__</code>은 내장객체입니다. 자동완성하면 괄호가 나왔을 겁니다. 뭔가 많이 있는데 우리가 지정하지 않은 겁니다.</li><li><code>__doc__</code>는 설명서입니다. 우리가 설명서를 만들지 않았으니 아무것도 없는 겁니다.</li><li><code>__loader__</code>는 뭔가 많이 있는데 우리가 호출하지 않은 겁니다. 모듈이름이 뭔가 읽어 온다는 느낌만 갖이면 됩니다.</li><li><code>__name__</code>은 우리가 만들고 있는 클래스 이름입니다. 기본이 main입니다.</li><li><code>__package__</code>는 여러 프로그램을 합칠때 호출하는 건데 이것도 사용하지 않았으니 비어 있네요.</li><li><code>__spec__</code>는 파이썬의 기본 설정값을 세팅하는 겁니다. 이것도 설정하지 않았으니 비어 있습니다.</li><li>iEng 이건 우리가 iEng라는 변수를 생성했기 때문에 90 이라는 값이 나왔습니다. iMath, iKor동일 합니다.</li></ul><p>변수를 하나 더 만들고 dir() 해보세요. 이번에는 iSum = 0 으로 만드세요.<br>국, 영, 수 점수를 더해서 iSum에 넣을 겁니다. 자동완성 잊지마세요.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>iSum = iKor + iEng + iMath</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>iSum</div><div class="line"><span class="number">280</span></div><div class="line">&gt;&gt;&gt;</div></pre></td></tr></table></figure><p>이번에는 프롬프트에서 dir(iSum) 해보세요.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>dir(iSum)</div><div class="line">[<span class="string">'__abs__'</span>, <span class="string">'__add__'</span>, <span class="string">'__and__'</span>, <span class="string">'__bool__'</span>, <span class="string">'__ceil__'</span></div><div class="line">, <span class="string">'__class__'</span>, <span class="string">'__delattr__'</span>, <span class="string">'__dir__'</span>, <span class="string">'__divmod__'</span>, <span class="string">'__doc__'</span></div><div class="line">, <span class="string">'__eq__'</span>, <span class="string">'__float__'</span>, <span class="string">'__floor__'</span>, <span class="string">'__floordiv__'</span>, <span class="string">'__format__'</span></div><div class="line">, <span class="string">'__ge__'</span>, <span class="string">'__getattribute__'</span>, <span class="string">'__getnewargs__'</span>, <span class="string">'__gt__'</span>, <span class="string">'__hash__'</span></div><div class="line">, <span class="string">'__index__'</span>, <span class="string">'__init__'</span>, <span class="string">'__init_subclass__'</span>, <span class="string">'__int__'</span>, <span class="string">'__invert__'</span></div><div class="line">, <span class="string">'__le__'</span>, <span class="string">'__lshift__'</span>, <span class="string">'__lt__'</span>, <span class="string">'__mod__'</span>, <span class="string">'__mul__'</span></div><div class="line">, <span class="string">'__ne__'</span>, <span class="string">'__neg__'</span>, <span class="string">'__new__'</span>, <span class="string">'__or__'</span>, <span class="string">'__pos__'</span></div><div class="line">, <span class="string">'__pow__'</span>, <span class="string">'__radd__'</span>, <span class="string">'__rand__'</span>, <span class="string">'__rdivmod__'</span>, <span class="string">'__reduce__'</span></div><div class="line">, <span class="string">'__reduce_ex__'</span>, <span class="string">'__repr__'</span>, <span class="string">'__rfloordiv__'</span>, <span class="string">'__rlshift__'</span> , <span class="string">'__rmod__'</span></div><div class="line">, <span class="string">'__rmul__'</span>, <span class="string">'__ror__'</span>, <span class="string">'__round__'</span>, <span class="string">'__rpow__'</span> , <span class="string">'__rrshift__'</span></div><div class="line">, <span class="string">'__rshift__'</span>, <span class="string">'__rsub__'</span>, <span class="string">'__rtruediv__'</span> , <span class="string">'__rxor__'</span> , <span class="string">'__setattr__'</span></div><div class="line">, <span class="string">'__sizeof__'</span>, <span class="string">'__str__'</span> , <span class="string">'__sub__'</span>, <span class="string">'__subclasshook__'</span> , <span class="string">'__truediv__'</span> </div><div class="line">, <span class="string">'__trunc__'</span>, <span class="string">'__xor__'</span>, <span class="string">'bit_length'</span>, <span class="string">'conjugate'</span> , <span class="string">'denominator'</span> </div><div class="line">, <span class="string">'from_bytes'</span>, <span class="string">'imag'</span>, <span class="string">'numerator'</span>, <span class="string">'real'</span> , <span class="string">'to_bytes'</span>]</div><div class="line">&gt;&gt;&gt;</div></pre></td></tr></table></figure><p>iSum은 정수형 변수가 생성되면서 상속받는 속성들 입니다.</p><p>우리는 국,영,수 점수만 더해서 저장했는데 뭔가 많이 들어있네요.<br>int class에서 상속받아 기본으로 사용할 수 있는 객체들입니다.<br>용어를 처음 듣는다고 해서 어려워 하지 말고 그냥 받아 들이세요.<br>부모님이 재산이 많으면 자식에게 상속하듯 파이썬도 정수형 변수를 찍어 낼때 정수형 클래스의 속성을 iSum 변수에 상속해 준겁니다.</p><p>c언어는 함수로 시작해서 함수로 끝납니다.<br>python은 클래스로 시작해서 클래스로 끝납니다.<br>c언어는 모든 것을 만들어야 하는데, 파이썬은 상속 받아 쓰기만 하면 됩니다.</p><p>클래스, 객체(Object), 속성(Method), 데이터(Data)는 많이 나오는 단어이니 간단히 이해 하고 있으면 됩니다.</p><p>클래스는 객체를 구분하는 단위, 클래스로 찍어 낸것을 객체라고 합니다. 클래스가 자식 객체에게 속성과 데이터를 쓸수 있게 해주는 것을 상속이라 합니다. </p><p>정리하면 클래스는 객체를 찍어 낼수 있고 객체는 속성과 DATA가 있다 라고 합니다. 한번더 헛갈리게 할 께요. 영어와 한글을 혼용해서 사용하는데, 속성은 메쏘드라고 부르고 메쏘드는 함수라고 부릅니다. 객체는 object라고 부릅니다. 마지막으로 정리 해볼께요.</p><p>파이썬은 클래스로 시작해서 클래스로 끝납니다.<br>클래스에는 메쏘드와 데이터가 있습니다.<br>클래스로 찍어낸 것을 오브젝트라고 합니다.<br>오브젝트는 클래스로부터 상속받은 메쏘드와 데이터를 사용할 수 있습니다.</p><p>iSum은 int클래스가 생성한 Object이니 int클래스의 메쏘드를 물려 받은 겁니다.</p><p>이제 모두 잊어 버리세요. 이런거 외우는거 아닙니다. 쓰면서 느끼면 됩니다.</p><h3 id="ipython"><a href="#ipython" class="headerlink" title="ipython"></a>ipython</h3><p>기본 REPL은 기능이 없어 많이 불편합니다. </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ipython</div></pre></td></tr></table></figure><p>프롬프트가 좀 바뀌긴 했지만 그냥 한번 써보세요.<br>색깔도 변한것 같습니다. 자동완성도 지원하고, 명령을 입력하다 잘 모르겠으면 Tab을 누르세요.<br>파일저장, 읽어오기등 부족하지만 ide처럼 사용할 수 있습니다.</p><p>종료는 똑같이 quit()</p><p>시작할때 각종 도움말 보는 법 나와 있으니 참고 하세요. 이것도 안쓸 겁니다.</p><h3 id="jupyter-notebook"><a href="#jupyter-notebook" class="headerlink" title="jupyter notebook"></a>jupyter notebook</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ jupyter notebook</div></pre></td></tr></table></figure><p>뭔가 이것저것 실행 되고 브라우저가 열립니다.<br>이놈이 앞으로 우리가 사용할 python 입니다.<br>종료하려면 브라우저 닫고 터미널에서는 Ctrl+c 누르면 종료 됩니다.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;REPL&quot;&gt;&lt;a href=&quot;#REPL&quot; class=&quot;headerlink&quot; title=&quot;REPL&quot;&gt;&lt;/a&gt;REPL&lt;/h3&gt;&lt;p&gt;파이썬의 REPL은 기본적으로 readline api를 사용하기 때문에 키보드 단축키 사용법이 terminal 
      
    
    </summary>
    
      <category term="python" scheme="http://korcow.github.io/categories/python/"/>
    
    
      <category term="python REPL" scheme="http://korcow.github.io/tags/python-REPL/"/>
    
  </entry>
  
  <entry>
    <title>설치</title>
    <link href="http://korcow.github.io/2017/12/01/mysql-%EC%84%A4%EC%B9%98/"/>
    <id>http://korcow.github.io/2017/12/01/mysql-설치/</id>
    <published>2017-12-01T00:24:11.011Z</published>
    <updated>2017-12-01T00:24:11.011Z</updated>
    
    <content type="html"><![CDATA[<h4 id="mysql-설치"><a href="#mysql-설치" class="headerlink" title="mysql 설치"></a>mysql 설치</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">brew install mysql</div></pre></td></tr></table></figure><h4 id="mysql-시작"><a href="#mysql-시작" class="headerlink" title="mysql 시작"></a>mysql 시작</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql.server start</div></pre></td></tr></table></figure><h4 id="보안-설정"><a href="#보안-설정" class="headerlink" title="보안 설정"></a>보안 설정</h4><p>비밀번호 및 각종 보안 관련 설정</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql_secure_installation</div></pre></td></tr></table></figure><ul><li>Would you like to setup VALIDATE PASSWORD plugin? : 복잡한 비밀번호를 사용하도록 제한해주는 플러그인을 사용하려면 yes, 비밀번호 제한받지 않고 쓰고 싶다면 no.</li><li>Remove anonymous users? : 익명사용자 삭제 여부. no 하면 <code>$ mysql -u root</code>가 아니라 <code>$ mysql</code>만으로도 접속 가능. yes하면 -u 옵션 필수.</li><li>Disallow root login remotely? : localhost외에 다른 ip에서 root 아이디로 원격접속 가능하게 할지. yes하면 원겹접속 불가.</li><li>Remove test database and access to it? : mysql에 기본적으로 설정된 test 디비 삭제 여부.</li><li>Reload privilege tables now? : 권한 갱신. </li></ul><h4 id="blew-service-설치"><a href="#blew-service-설치" class="headerlink" title="blew service 설치"></a>blew service 설치</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">brew tap homebrew/services</div><div class="line"></div><div class="line">brew services start mysql</div><div class="line">brew services restart mysql</div><div class="line">brew services list</div><div class="line">brew services cleanup</div></pre></td></tr></table></figure><h4 id="로그인시-데몬-자동-실행"><a href="#로그인시-데몬-자동-실행" class="headerlink" title="로그인시 데몬 자동 실행"></a>로그인시 데몬 자동 실행</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ln -sfv /usr/<span class="built_in">local</span>/opt/mysql/*.plist ~/Library/LaunchAgents</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;mysql-설치&quot;&gt;&lt;a href=&quot;#mysql-설치&quot; class=&quot;headerlink&quot; title=&quot;mysql 설치&quot;&gt;&lt;/a&gt;mysql 설치&lt;/h4&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class
      
    
    </summary>
    
      <category term="Mysql" scheme="http://korcow.github.io/categories/Mysql/"/>
    
    
      <category term="설치" scheme="http://korcow.github.io/tags/%EC%84%A4%EC%B9%98/"/>
    
  </entry>
  
  <entry>
    <title>commnet 설정 및 조회</title>
    <link href="http://korcow.github.io/2017/12/01/mysql-comment/"/>
    <id>http://korcow.github.io/2017/12/01/mysql-comment/</id>
    <published>2017-11-30T17:01:55.751Z</published>
    <updated>2017-11-30T17:01:55.751Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Table-정보조회-with-comment"><a href="#Table-정보조회-with-comment" class="headerlink" title="Table 정보조회 (with comment)"></a>Table 정보조회 (with comment)</h3><h4 id="명령어를-통한-테이블정보-조회"><a href="#명령어를-통한-테이블정보-조회" class="headerlink" title="명령어를 통한 테이블정보 조회"></a>명령어를 통한 테이블정보 조회</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SHOW</span> <span class="keyword">TABLE</span> <span class="keyword">STATUS</span>;</div></pre></td></tr></table></figure><h4 id="Query를-통한-테이블정보-조회"><a href="#Query를-통한-테이블정보-조회" class="headerlink" title="Query를 통한 테이블정보 조회"></a>Query를 통한 테이블정보 조회</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> *</div><div class="line"><span class="keyword">FROM</span> INFORMATION_SCHEMA.TABLES</div><div class="line"><span class="keyword">WHERE</span> TABLE_SCHEMA=<span class="string">'database_name'</span>;</div><div class="line"></div><div class="line"><span class="keyword">SELECT</span> TABLE_SCHEMA,TABLE_NAME,AUTO_INCREMENT,TABLE_COMMENT</div><div class="line"><span class="keyword">FROM</span> INFORMATION_SCHEMA.TABLES</div><div class="line"><span class="keyword">WHERE</span> TABLE_SCHEMA=<span class="string">'database_name'</span>;</div></pre></td></tr></table></figure><h3 id="COLUMN-정보조회-with-comment"><a href="#COLUMN-정보조회-with-comment" class="headerlink" title="COLUMN 정보조회 (with comment)"></a>COLUMN 정보조회 (with comment)</h3><h4 id="명령어를-통한-컬럼정보-조회"><a href="#명령어를-통한-컬럼정보-조회" class="headerlink" title="명령어를 통한 컬럼정보 조회"></a>명령어를 통한 컬럼정보 조회</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SHOW</span> <span class="keyword">FULL</span> <span class="keyword">COLUMNS</span> <span class="keyword">FROM</span> TABLE_NAME;</div></pre></td></tr></table></figure><h4 id="Query를-통한-테이블정보-조회-1"><a href="#Query를-통한-테이블정보-조회-1" class="headerlink" title="Query를 통한 테이블정보 조회"></a>Query를 통한 테이블정보 조회</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> *</div><div class="line"><span class="keyword">FROM</span> INFORMATION_SCHEMA.TABLES</div><div class="line"><span class="keyword">WHERE</span> TABLE_SCHEMA=<span class="string">'database_name'</span>;</div><div class="line"></div><div class="line"><span class="keyword">SELECT</span>  TABLE_SCHEMA,TABLE_NAME,COLUMN_NAME,ORDINAL_POSITION,COLUMN_DEFAULT ,DATA_TYPE,COLUMN_TYPE,COLUMN_KEY,EXTRA,COLUMN_COMMENT</div><div class="line"><span class="keyword">FROM</span> INFORMATION_SCHEMA.COLUMNS</div><div class="line"><span class="keyword">WHERE</span> TABLE_SCHEMA=<span class="string">'database_name'</span>  <span class="keyword">AND</span> TABLE_NAME=<span class="string">'table_name'</span>;</div></pre></td></tr></table></figure><h3 id="TABLE-COMMENT-설정"><a href="#TABLE-COMMENT-설정" class="headerlink" title="TABLE COMMENT 설정"></a>TABLE COMMENT 설정</h3><h4 id="테이블-생성시-COMMENT-설정"><a href="#테이블-생성시-COMMENT-설정" class="headerlink" title="테이블 생성시 COMMENT 설정"></a>테이블 생성시 COMMENT 설정</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> TABLE_NAME (</div><div class="line">  column1 <span class="built_in">INT</span>,</div><div class="line">  ...</div><div class="line">) <span class="keyword">COMMENT</span> = <span class="string">'table comment'</span>;</div></pre></td></tr></table></figure><h4 id="TABLE-COMMENT-만-별도-수정하는-방법"><a href="#TABLE-COMMENT-만-별도-수정하는-방법" class="headerlink" title="TABLE COMMENT 만 별도 수정하는 방법"></a>TABLE COMMENT 만 별도 수정하는 방법</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> TABLE_NAME <span class="keyword">COMMENT</span> = <span class="string">'테이블설명'</span>;</div></pre></td></tr></table></figure><h3 id="COLUMNS-COMMENT-설정"><a href="#COLUMNS-COMMENT-설정" class="headerlink" title="COLUMNS COMMENT 설정"></a>COLUMNS COMMENT 설정</h3><h4 id="테이블-생성시-COLUMN-COMMENT-설정"><a href="#테이블-생성시-COLUMN-COMMENT-설정" class="headerlink" title="테이블 생성시 COLUMN COMMENT 설정"></a>테이블 생성시 COLUMN COMMENT 설정</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> TABLE_NAME (</div><div class="line">  column1 <span class="built_in">INT</span> <span class="keyword">COMMENT</span> <span class="string">'column1 comment'</span>,</div><div class="line">  ...</div><div class="line">);</div></pre></td></tr></table></figure><h4 id="TABLE-COMMENT-만-별도-수정하는-방법-1"><a href="#TABLE-COMMENT-만-별도-수정하는-방법-1" class="headerlink" title="TABLE COMMENT 만 별도 수정하는 방법"></a>TABLE COMMENT 만 별도 수정하는 방법</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> TABLE_NAME <span class="keyword">CHANGE</span> <span class="keyword">COLUMN</span> column_name column_name data_type <span class="literal">NULL</span>여부 <span class="keyword">COMMENT</span> <span class="string">'column comment'</span>;</div><div class="line"></div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="string">`callcenter`</span> <span class="keyword">CHANGE</span> <span class="string">`regdate`</span> <span class="string">`regdate`</span></div><div class="line"><span class="keyword">TIMESTAMP</span> <span class="keyword">ON</span> <span class="keyword">UPDATE</span> <span class="keyword">CURRENT_TIMESTAMP</span></div><div class="line"><span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">CURRENT_TIMESTAMP</span></div><div class="line"><span class="keyword">COMMENT</span> <span class="string">'callcenter 등록일'</span>;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Table-정보조회-with-comment&quot;&gt;&lt;a href=&quot;#Table-정보조회-with-comment&quot; class=&quot;headerlink&quot; title=&quot;Table 정보조회 (with comment)&quot;&gt;&lt;/a&gt;Table 정보조회 (wit
      
    
    </summary>
    
      <category term="Mysql" scheme="http://korcow.github.io/categories/Mysql/"/>
    
    
      <category term="comment" scheme="http://korcow.github.io/tags/comment/"/>
    
  </entry>
  
  <entry>
    <title>테이블 만들기</title>
    <link href="http://korcow.github.io/2017/12/01/mysql-%ED%85%8C%EC%9D%B4%EB%B8%94%EB%A7%8C%EB%93%A4%EA%B8%B0/"/>
    <id>http://korcow.github.io/2017/12/01/mysql-테이블만들기/</id>
    <published>2017-11-30T16:34:58.425Z</published>
    <updated>2017-11-30T16:34:58.425Z</updated>
    
    <content type="html"><![CDATA[<h3 id="테이블-만들기"><a href="#테이블-만들기" class="headerlink" title="테이블 만들기"></a>테이블 만들기</h3><p>create table table명(<br>컬럼명 타입(크기),…);</p><p>show databases;</p><p>show tables;</p><p>use korcow;</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">create</span> <span class="keyword">table</span> mytable(</div><div class="line"><span class="keyword">no</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">unsigned</span> <span class="keyword">not</span> <span class="literal">null</span> auto_increment,</div><div class="line">subject <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">not</span> <span class="literal">null</span>,</div><div class="line"><span class="keyword">content</span> mediumtext,</div><div class="line">created datetime,</div><div class="line"><span class="keyword">updated</span> datetime,</div><div class="line">primary <span class="keyword">key</span>(<span class="keyword">no</span>)</div><div class="line">);</div></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> * <span class="keyword">from</span> mytable</div></pre></td></tr></table></figure><p>``` sql<br>insert into mytable(subject, content, created) values (‘코미디언 이름’, ‘유재석, 강호동, 박명수, 박미선’, now());</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;테이블-만들기&quot;&gt;&lt;a href=&quot;#테이블-만들기&quot; class=&quot;headerlink&quot; title=&quot;테이블 만들기&quot;&gt;&lt;/a&gt;테이블 만들기&lt;/h3&gt;&lt;p&gt;create table table명(&lt;br&gt;컬럼명 타입(크기),…);&lt;/p&gt;
&lt;p&gt;show
      
    
    </summary>
    
      <category term="Mysql" scheme="http://korcow.github.io/categories/Mysql/"/>
    
    
      <category term="create table" scheme="http://korcow.github.io/tags/create-table/"/>
    
  </entry>
  
  <entry>
    <title>C언어 목차</title>
    <link href="http://korcow.github.io/2017/11/28/c-%EB%AA%A9%EC%B0%A8/"/>
    <id>http://korcow.github.io/2017/11/28/c-목차/</id>
    <published>2017-11-28T03:09:48.671Z</published>
    <updated>2017-11-28T03:09:48.671Z</updated>
    
    <content type="html"><![CDATA[<h3 id="목차"><a href="#목차" class="headerlink" title="목차"></a>목차</h3><h3 id="c언어-기초"><a href="#c언어-기초" class="headerlink" title="c언어 기초"></a>c언어 기초</h3><p>c언어는 가장 기초가 되는 프로그래밍 언어로 c++, objective c, java, python등의 언어로 접근하기 위한 필수 프로그램입니다.</p><p>shell 프로그래밍으로도 프로그램 작성이 가능하지만 c언어가 더 강력하고 빠릅니다.<br>c언어가 빠르고 강력하지만 라이브러리가 많이 부족한 편입니다.<br>한마디로 배울게 많지 않고 라이브러리에 없으면 만들어야 한다는 겁니다.<br>응용 프로그램을 만들때는 c언어로 만들지 않습니다. 생산성이 떨어지고 불편합니다.<br>c언어를 배우는 이유는 컴퓨터의 구조 프로그램의 동작원리를 알기 위해서입니다.</p><p>이번에 진행하는 c언어는 linux에서 gcc, vim, bash shell을 이용해 진행됩니다. 가장 기본적인 학습법입니다. Terminal이 아닌 윈도우에서 GUI에디터로 프로그래밍을 하면 C언어의 본래 의미를 찾기 힘듭니다. 재미도 없구요. Hello World의 의미도 깨닫지 못합니다. </p><h3 id="실습환경-설정"><a href="#실습환경-설정" class="headerlink" title="실습환경 설정"></a>실습환경 설정</h3><p>(맥과 리눅스 사용자는 Terminal과 vim을 사용할 수 있다는 전제 하에 패스해도 됨.)</p><ol><li>virtualbox에 centos설치 - Centos참조</li><li>gvim 설치및 vimrc 세팅 - vim참조</li><li>vim 기본 사용법 - vim참조</li></ol><h3 id="c언어를-시작하며"><a href="#c언어를-시작하며" class="headerlink" title="c언어를 시작하며"></a>c언어를 시작하며</h3><ol><li>c언어를 배우면서 기본적으로 알아 두면 좋은 내용들을 정리 했습니다.</li><li>c언어는 배울것이 많지 않습니다. 문법 이론만  배운다면 1시간이면 충분합니다. 다만 컴퓨터의 전반에 대해 학습이 필요합니다. 컴퓨터의 구조, 동작원리, 통신, 자료구조, 수학 및 통계, 운영체제, 각종 업무에대한 알고리즘…등</li></ol><h3 id="화면에-글자-출력하기"><a href="#화면에-글자-출력하기" class="headerlink" title="화면에 글자 출력하기"></a>화면에 글자 출력하기</h3><ol><li>putchar()</li><li>puts()</li><li>printf()</li></ol><h3 id="간단한-계산하기"><a href="#간단한-계산하기" class="headerlink" title="간단한 계산하기"></a>간단한 계산하기</h3><ol><li>printf 함수를 이용한 사칙연산</li><li>변수와 상수를 사용.</li><li>자료형, 연산자</li></ol><h3 id="키보드로-입력-받기"><a href="#키보드로-입력-받기" class="headerlink" title="키보드로 입력 받기"></a>키보드로 입력 받기</h3><ol><li>getchar()</li><li>gets()</li><li>fgets()</li><li>scanf()<ul><li>공백을 기본 seperator(분리자)로 사용.</li><li><code>%[^\n]s</code> 공백을 포함해서 입력받음.</li></ul></li><li>getch()<ul><li>한문자 입력 받음. 입력버퍼 사용하지 않음. </li></ul></li><li>getche()<ul><li>한문자 입력 받음. 입력버퍼 사용하지 않음. 입력 내용을 출력하지 않음. (비밀번호)</li></ul></li></ol><h3 id="if문-사용하기"><a href="#if문-사용하기" class="headerlink" title="if문 사용하기"></a>if문 사용하기</h3><ol><li>if</li><li>if~else</li><li>if~else if</li></ol><h3 id="for-문"><a href="#for-문" class="headerlink" title="for 문"></a>for 문</h3><ol><li>for (초깃값;조건;증감값)</li></ol><h3 id="함수-만들기"><a href="#함수-만들기" class="headerlink" title="함수 만들기"></a>함수 만들기</h3><ol><li>함수의 기본형</li></ol><h3 id="배열과-포인터"><a href="#배열과-포인터" class="headerlink" title="배열과 포인터"></a>배열과 포인터</h3><ol><li>배열</li><li>문자열</li><li>포인터</li></ol><h3 id="maloc"><a href="#maloc" class="headerlink" title="maloc"></a>maloc</h3><ol><li>메모리의 영역</li><li>메모리의 할당</li></ol><h3 id="while-문"><a href="#while-문" class="headerlink" title="while 문"></a>while 문</h3><ol><li>while</li><li>do~while</li></ol><h3 id="switch-case-문-사용하기"><a href="#switch-case-문-사용하기" class="headerlink" title="switch case 문 사용하기"></a>switch case 문 사용하기</h3><p>switch () case;</p><h3 id="continue-break-goto-label"><a href="#continue-break-goto-label" class="headerlink" title="continue, break, goto, label"></a>continue, break, goto, label</h3><p>강제 제어 이동, 종료</p><h3 id="인자로-입력-받기"><a href="#인자로-입력-받기" class="headerlink" title="인자로 입력 받기"></a>인자로 입력 받기</h3><ol><li>int main(int argc const char *argv[])</li></ol><h3 id="파일-입출력"><a href="#파일-입출력" class="headerlink" title="파일 입출력"></a>파일 입출력</h3><ol><li>fopen, fclose, free(), fprintf(), fscanf(), fseek(), rewind()</li></ol><h3 id="표준-라이브러리"><a href="#표준-라이브러리" class="headerlink" title="표준 라이브러리"></a>표준 라이브러리</h3><ol><li>표준라이브러리 알아보기</li></ol><h3 id="구조체-사용하기"><a href="#구조체-사용하기" class="headerlink" title="구조체 사용하기"></a>구조체 사용하기</h3><ol><li>여러 자료형이 혼합된 자료형.</li></ol><h3 id="유니온"><a href="#유니온" class="headerlink" title="유니온"></a>유니온</h3><ol><li>구조체와 같음. 패딩바이트를 줄이기 위해 사용함.</li></ol><hr><h2 id="응용실습"><a href="#응용실습" class="headerlink" title="응용실습"></a>응용실습</h2><h3 id="curses-ncurses"><a href="#curses-ncurses" class="headerlink" title="curses, ncurses"></a>curses, ncurses</h3><ol><li>터미널 제어</li></ol><h3 id="databse-연결"><a href="#databse-연결" class="headerlink" title="databse 연결"></a>databse 연결</h3><p>mysql, maria, mssql, db2… -&gt; ANSI SQL</p><ol><li>mysql 설치</li><li>기본 사용법</li><li>oracle, mssql</li></ol><h3 id="주소록-만들기"><a href="#주소록-만들기" class="headerlink" title="주소록 만들기"></a>주소록 만들기</h3><ol><li>주소록 만들기(file을 이용한)</li></ol><h3 id="학사관리-만들기"><a href="#학사관리-만들기" class="headerlink" title="학사관리 만들기"></a>학사관리 만들기</h3><ol><li>학사관리 만들기(data base를 이용한)</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;목차&quot;&gt;&lt;a href=&quot;#목차&quot; class=&quot;headerlink&quot; title=&quot;목차&quot;&gt;&lt;/a&gt;목차&lt;/h3&gt;&lt;h3 id=&quot;c언어-기초&quot;&gt;&lt;a href=&quot;#c언어-기초&quot; class=&quot;headerlink&quot; title=&quot;c언어 기초&quot;&gt;&lt;/a&gt;c
      
    
    </summary>
    
      <category term="C언어기초" scheme="http://korcow.github.io/categories/C%EC%96%B8%EC%96%B4%EA%B8%B0%EC%B4%88/"/>
    
    
      <category term="c" scheme="http://korcow.github.io/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>파일 입출력</title>
    <link href="http://korcow.github.io/2017/11/25/c-%ED%8C%8C%EC%9D%BC-%EC%9E%85%EC%B6%9C%EB%A0%A5/"/>
    <id>http://korcow.github.io/2017/11/25/c-파일-입출력/</id>
    <published>2017-11-24T20:02:04.898Z</published>
    <updated>2017-11-24T20:02:04.898Z</updated>
    
    <content type="html"><![CDATA[<h3 id="파일-입출력"><a href="#파일-입출력" class="headerlink" title="파일 입출력"></a>파일 입출력</h3><h4 id="파일-저장하기"><a href="#파일-저장하기" class="headerlink" title="파일 저장하기"></a>파일 저장하기</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;  //fopen(), fclose(), fprintf()</span></span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> *argv[])</span> </span>&#123;</div><div class="line">    </div><div class="line">    FILE *fp = fopen(<span class="string">"mynewfile.txt"</span>, <span class="string">"w"</span>);</div><div class="line"></div><div class="line">    <span class="comment">// 서식 문자열 파일로 출력</span></div><div class="line">    <span class="built_in">fprintf</span>(fp, <span class="string">"%s\n"</span>, <span class="string">"hello world"</span>);</div><div class="line"></div><div class="line">    fclose(fp);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h4 id="파일-읽기"><a href="#파일-읽기" class="headerlink" title="파일 읽기"></a>파일 읽기</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;  //fopen(), fclose(), fscanf()</span></span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> *argv[])</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">char</span> sp[<span class="number">30</span>];</div><div class="line">    FILE *fp = fopen(<span class="string">"mynewfile.txt"</span>, <span class="string">"r"</span>);</div><div class="line"></div><div class="line">    <span class="comment">// 서식 문자열 읽기</span></div><div class="line">    <span class="built_in">fscanf</span>(fp, <span class="string">"%s"</span>, sp);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s\n"</span>,sp );</div><div class="line">    </div><div class="line">    <span class="built_in">fscanf</span>(fp, <span class="string">"%s"</span>, sp);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s\n"</span>,sp );</div><div class="line"></div><div class="line">    fclose(fp);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h4 id="파일모드"><a href="#파일모드" class="headerlink" title="파일모드"></a>파일모드</h4><table><thead><tr><th style="text-align:center">파일 모드</th><th style="text-align:center">기능</th><th style="text-align:left">설명</th></tr></thead><tbody><tr><td style="text-align:center">“r”</td><td style="text-align:center">읽기 전용</td><td style="text-align:left">파일을 읽기 전용으로 엽니다. 단, 파일이 반드시 있어야 합니다.</td></tr><tr><td style="text-align:center">“w”</td><td style="text-align:center">쓰기 전용</td><td style="text-align:left">새 파일을 생성합니다. 만약 파일이 있으면 내용을 덮어씁니다.</td></tr><tr><td style="text-align:center">“a”</td><td style="text-align:center">추가</td><td style="text-align:left">파일을 열어 파일 끝에 값을 이어 씁니다. 만약 파일이 없으면 파일을 생성합니다.</td></tr><tr><td style="text-align:center">“r+”</td><td style="text-align:center">읽기/쓰기</td><td style="text-align:left">파일을 읽기/쓰기용으로 엽니다. 단, 파일이 반드시 있어야 하며 파일이 없으면 NULL을 반환합니다.</td></tr><tr><td style="text-align:center">“w+”</td><td style="text-align:center">읽기/쓰기</td><td style="text-align:left">파일을 읽기/쓰기용으로 엽니다. 파일이 없으면 파일을 생성하고, 파일이 있으면 내용을 덮어씁니다.</td></tr><tr><td style="text-align:center">“a+”</td><td style="text-align:center">추가(읽기/쓰기)</td><td style="text-align:left">파일을 열어 파일 끝에 값을 이어 씁니다. 만약 파일이 없으면 파일을 생성합니다. 읽기는 파일의 모든 구간에서 가능하지만, 쓰기는 파일의 끝에서만 가능합니다.</td></tr><tr><td style="text-align:center">t</td><td style="text-align:center">텍스트 모드</td><td style="text-align:left">파일을 읽거나 쓸 때 개행문자 \n와 \r\n을 서로 변환합니다.^Z 파일의 끝으로 인식하므로 ^Z까지만 파일을 읽습니다(^Z는 Ctrl+Z 입력을 뜻합니다).</td></tr><tr><td style="text-align:center">b</td><td style="text-align:center">바이너리 모드</td><td style="text-align:left">파일의 내용을 그대로 읽고, 값을 그대로 씁니다.</td></tr><tr><td style="text-align:center">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td style="text-align:center">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td style="text-align:left"></td></tr></tbody></table><h3 id="스트림"><a href="#스트림" class="headerlink" title="스트림"></a>스트림</h3><p>스트림에서 데이터를 특정한 형식으로 읽어온다.<br>스트림에서 형식 문자열에서 지정한 방식대로 데이터를 읽어온 후, 형식 문자열의 각각의 형식 지정자에 대응하는 인자가 가리키는 메모리 공간에 그 데이터를 집어 넣는다. </p><p>인자</p><p>stream</p><p>데이터를 읽어올 스트림의 FILE 객체를 가리키는 포인터</p><p>format</p><p>C 형식 문자열로 다음의 것들을 포함하고 있다</p><ul><li>공백 문자 (Whitespace character  개행 문자<code>\n</code>, 탭 문자<code>\t</code>, 공백)  : fscanf 함수는 비-공백 문자를 읽어들이기 전까지 읽혀지는 모든 공백 문자들을 무시한다. </li><li>비-공백 문자 (Non whitespcae character), 단 % 를 제외한다 : 공백 문자가 아니거나 형식 지정자에 포함되지 않는 것들은 함수로 하여금 다음 문자를 스트림에서 읽어 들이고 이와 이 비-공백 문자와 비교하여 같다면 버리고 다음 문자와 형식으로 진행한다. 만일 다르다면 함수가 종료되고, 스트림에서 읽혀지지 않은 다른 문자들은 모두 남아있게 된다.</li><li>형식 지정자 : 이는 % 로 지정되는 것들로 스트림에서 어떠한 형식으로 데이터를 읽어오고, 또 각각의 형식 지정자에 대응되는 인자에 어떠한 형식으로 저장할 지에 대해 결정한다. 형식 지정자는 아래와 같은 꼴로 생겼다.</li></ul><blockquote><p>%[*][폭(width)][한정자(modifiers)]타입(type)</p></blockquote><ul><li><code>*</code> :데이터를 스트림에서 받아들이지만 무시된다. 물론, 이에 대응되는 인자에는 받아들인 데이터가 저장되지 않고 이 인자는 다음 형식 태그에 대응된다.<br>예를 들어 <code>fscanf(fp, &quot;%*d%d&quot;, i,j);</code> 의 경우 먼저 수를 입력하더라도 %*d 형식이므로 무시 된다. 그 다음 수를 입력하면 %d 형식 태그가 j 가 아닌 i 에 대응되어 i 에 그 다음 입력한 수가 들어가게 된다. 이 때 j 에는 아무런 값도 들어가지 않는다.</li><li>폭: 스트림에서 읽어들일 최대 문자 수를 지정한다.<br>예를 들어 <code>fscanf(fp, &quot;%10s&quot;, str);</code> 로 했을 경우 스트림에서 최대 10 문자를 읽어와 str 에 저장한다. 이 때 주의할 점은 str 에는 NULL 문자가 들어갈 수 있는 충분한 공간이 남아 있어야 한다. </li><li>한정자:입력받는 데이터의 크기를 지정한다. int (d, i, n), unsigned int (o, u, x) float (e, f, g) 형에 대해 입력받는 데이터의 크기를 설정할 수 있다. <ul><li>h : short int (d, i, n 의 경우) 혹은 unsigned short int (o, u, x 일 경우)</li><li>l : long int (d, i, n 의 경우) 혹은 unsigned long int (o, u, x 일 경우), 혹은 double (e,f, g 일 경우)</li><li>L : long double (e, f, g 일 경우)</li></ul></li><li>타입: 데이터를 어떠한 형식으로 혹은 어떠한 값만을 읽어들어야 할 지에 대해 지정해준다. 아래 표를 참고.</li></ul><h4 id="fscanf-함수의-타입-지정자들"><a href="#fscanf-함수의-타입-지정자들" class="headerlink" title="fscanf 함수의 타입 지정자들"></a>fscanf 함수의 타입 지정자들</h4><table><thead><tr><th style="text-align:center">타입</th><th>대응되는 입력 방식</th><th style="text-align:center">대응되는 인자의 형태</th></tr></thead><tbody><tr><td style="text-align:center">c</td><td>단일 문자: 하나의 문자를 읽어들인다. 만일 폭에 1 이 아닌 값으로 지정되어 있다면 (기본값은 1) 함수는 폭 만큼의 문자를 읽어들인 후 이에 대응하는 인자가 가리키는 메모리 공간에 저장한다. 이 때 마지막에는 널 문자를 붙이지 않는다.</td><td style="text-align:center">char *</td></tr><tr><td style="text-align:center">d</td><td>십진법으로 표현된 정수: 말그대로 십진법으로 쓰인 정수로, + 나 - 기호로 시작할 수도 있다.</td><td style="text-align:center">int *</td></tr><tr><td style="text-align:center">e,E,f,g,G</td><td>부동 소수점: 소수점을 포함하고 있는 소수(decimal number) 로 + 나 - 기호로 시작할 수도 있으며, e 나 E 문자(10 의 지수를 나타내기 위해)를 포함할 수 도 있다. -732.103 , 12e-4, +123.10 은 모두 올바른 입력이다.</td><td style="text-align:center">float *</td></tr><tr><td style="text-align:center">o</td><td>8진법으로 표현된 정수</td><td style="text-align:center">int *</td></tr><tr><td style="text-align:center">s</td><td>문자열:  공백문자를 찾을 때 까지 문자들을 읽어들인다.</td><td style="text-align:center">char *</td></tr><tr><td style="text-align:center">u</td><td>부호가 없는 십진법으로 표현된 정수</td><td style="text-align:center">unsigned int *</td></tr><tr><td style="text-align:center">x,X</td><td>16진법으로 표현된 정수</td><td style="text-align:center">int *</td></tr><tr><td style="text-align:center">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td></td><td style="text-align:center">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td></tr></tbody></table><h4 id="부수적-인자"><a href="#부수적-인자" class="headerlink" title="부수적 인자"></a>부수적 인자</h4><p>형식 문자열의 정의된 순서대로 각 형식 지정자는 이에 대응하는 인자가 가리키는 메모리 공간에 데이터를 집어넣는다. 이 때, 부수적 인자들은 모두 포인터의 형태 (주소값) 여야 한다. 예를 들어서 i 라는 변수에 값을 대입하려면 인자로 &amp;i 를 전달해야 한다. 절대로 i 를 전달하면 안된다. </p><p>에를 들면 아래와 같다.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">FILE *fp = fopen(<span class="string">"out.txt"</span>, <span class="string">"w"</span>);</div><div class="line"><span class="keyword">int</span> i;</div><div class="line"><span class="built_in">fscanf</span>(fp, <span class="string">"%d"</span>, &amp;i); <span class="comment">//꼭 주소값을 전달해야 된다는 점에 유의!</span></div></pre></td></tr></table></figure><h4 id="리턴값"><a href="#리턴값" class="headerlink" title="리턴값"></a>리턴값</h4><p>성공할 경우, fscanf 함수는 읽어들인 데이터의 수를 리턴한다. 만일 어떠한 데이터도 형식 지정자와 일치하는 것이 없다면 0 이 될 수 도 있다.<br>만일 어떠한 데이터도 성공적으로 읽어들이기 전에 입력이 실패한다면 EOF 가 리턴된다.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;파일-입출력&quot;&gt;&lt;a href=&quot;#파일-입출력&quot; class=&quot;headerlink&quot; title=&quot;파일 입출력&quot;&gt;&lt;/a&gt;파일 입출력&lt;/h3&gt;&lt;h4 id=&quot;파일-저장하기&quot;&gt;&lt;a href=&quot;#파일-저장하기&quot; class=&quot;headerlink&quot; ti
      
    
    </summary>
    
      <category term="C언어기초" scheme="http://korcow.github.io/categories/C%EC%96%B8%EC%96%B4%EA%B8%B0%EC%B4%88/"/>
    
    
      <category term="fopen" scheme="http://korcow.github.io/tags/fopen/"/>
    
      <category term="fclose" scheme="http://korcow.github.io/tags/fclose/"/>
    
      <category term="fprintf" scheme="http://korcow.github.io/tags/fprintf/"/>
    
      <category term="fscanf" scheme="http://korcow.github.io/tags/fscanf/"/>
    
  </entry>
  
  <entry>
    <title>continue, break, goto, label</title>
    <link href="http://korcow.github.io/2017/11/23/c-continue-%EA%B8%B0%ED%83%80%EC%A0%9C%EC%96%B4%EB%AC%B8/"/>
    <id>http://korcow.github.io/2017/11/23/c-continue-기타제어문/</id>
    <published>2017-11-23T08:51:26.856Z</published>
    <updated>2017-11-23T08:51:26.856Z</updated>
    
    <content type="html"><![CDATA[<h3 id="continue"><a href="#continue" class="headerlink" title="continue"></a>continue</h3><p>반복문에서 명령을 계속 진행하지 않고 건너 뛸때 사용합니다.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> *argv[])</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">int</span> iNum = <span class="number">0</span>;</div><div class="line"></div><div class="line">    <span class="keyword">while</span>(<span class="number">1</span>)&#123;</div><div class="line">        iNum +=<span class="number">1</span>;</div><div class="line">        <span class="keyword">if</span> (iNum % <span class="number">2</span> ==  <span class="number">0</span>)&#123;</div><div class="line">            <span class="keyword">continue</span>;  <span class="comment">// iNum이 짝수인 경우 출력을 하지 않음.</span></div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,iNum); </div><div class="line"></div><div class="line">        <span class="keyword">if</span> (iNum == <span class="number">100</span>) <span class="keyword">break</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="break"><a href="#break" class="headerlink" title="break"></a>break</h3><p>반복문을 강제종료 할때 사용합니다.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> *argv[])</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">int</span> iNum = <span class="number">0</span>;</div><div class="line"></div><div class="line">    <span class="keyword">while</span>(<span class="number">1</span>)&#123;</div><div class="line">        iNum +=<span class="number">1</span>;</div><div class="line">        <span class="keyword">if</span> (iNum == <span class="number">100</span>)&#123;</div><div class="line">            <span class="keyword">break</span>;  <span class="comment">// iNum이 100이면 종료</span></div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,iNum); </div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="goto-label"><a href="#goto-label" class="headerlink" title="goto label"></a>goto label</h3><p>제어를 label로 강제로 옮깁니다. </p><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> *argv[])</span> </span>&#123;</div><div class="line">    </div><div class="line">    <span class="keyword">int</span> iNum;</div><div class="line"></div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;iNum);</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (iNum == <span class="number">1</span>)         <span class="comment">// iNum이 1이면</span></div><div class="line">        <span class="keyword">goto</span> ONE;          <span class="comment">// 레이블 ONE으로 즉시 이동</span></div><div class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (iNum == <span class="number">2</span>)    <span class="comment">// iNum이 2이면</span></div><div class="line">        <span class="keyword">goto</span> TWO;          <span class="comment">// 레이블 TWO로 즉시 이동</span></div><div class="line">    <span class="keyword">else</span>                   <span class="comment">// 1도 아니고 2도 아니면</span></div><div class="line">        <span class="keyword">goto</span> EXIT;         <span class="comment">// 레이블 EXIT로 즉시 이동</span></div><div class="line"></div><div class="line">ONE:    <span class="comment">// 레이블 ONE</span></div><div class="line">    <span class="built_in">printf</span>(<span class="string">"1입니다.\n"</span>);</div><div class="line">    <span class="keyword">goto</span> EXIT; <span class="comment">// 레이블 EXIT로 즉시 이동</span></div><div class="line"></div><div class="line">TWO:    <span class="comment">// 레이블 TWO</span></div><div class="line">    <span class="built_in">printf</span>(<span class="string">"2입니다.\n"</span>);</div><div class="line">    <span class="keyword">goto</span> EXIT; <span class="comment">// 레이블 EXIT로 즉시 이동</span></div><div class="line"></div><div class="line">EXIT:    <span class="comment">// 레이블 EXIT</span></div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;continue&quot;&gt;&lt;a href=&quot;#continue&quot; class=&quot;headerlink&quot; title=&quot;continue&quot;&gt;&lt;/a&gt;continue&lt;/h3&gt;&lt;p&gt;반복문에서 명령을 계속 진행하지 않고 건너 뛸때 사용합니다.&lt;/p&gt;
&lt;figure 
      
    
    </summary>
    
      <category term="C언어기초" scheme="http://korcow.github.io/categories/C%EC%96%B8%EC%96%B4%EA%B8%B0%EC%B4%88/"/>
    
    
      <category term="continue" scheme="http://korcow.github.io/tags/continue/"/>
    
      <category term="break" scheme="http://korcow.github.io/tags/break/"/>
    
      <category term="goto" scheme="http://korcow.github.io/tags/goto/"/>
    
      <category term="label" scheme="http://korcow.github.io/tags/label/"/>
    
  </entry>
  
  <entry>
    <title>switch case</title>
    <link href="http://korcow.github.io/2017/11/23/c-switch-case/"/>
    <id>http://korcow.github.io/2017/11/23/c-switch-case/</id>
    <published>2017-11-23T07:48:43.308Z</published>
    <updated>2017-11-23T07:48:43.308Z</updated>
    
    <content type="html"><![CDATA[<h3 id="switch-case"><a href="#switch-case" class="headerlink" title="switch case"></a>switch case</h3><p>조건문의 또다른 형태입니다.<br>값에 따라 분기를 하는 구조입니다.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">switch</span>(value)&#123;</div><div class="line">    <span class="keyword">case</span> value1:</div><div class="line">    명령;</div><div class="line">    <span class="keyword">break</span>;</div><div class="line">    <span class="keyword">case</span> value2:</div><div class="line">    명령;</div><div class="line">    <span class="keyword">break</span>;</div><div class="line">    .. (생략) ..</div><div class="line">    <span class="keyword">default</span>:</div><div class="line">    명령;</div><div class="line">&#125;</div></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt; // atoi()</span></span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">myAdd</span><span class="params">(<span class="keyword">int</span> iNum1, <span class="keyword">int</span> iNum2)</span></span>;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">mySub</span><span class="params">(<span class="keyword">int</span> iNum1, <span class="keyword">int</span> iNum2)</span></span>;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">myMulti</span><span class="params">(<span class="keyword">int</span> iNum1, <span class="keyword">int</span> iNum2)</span></span>;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">myDiv</span><span class="params">(<span class="keyword">int</span> iNum1, <span class="keyword">int</span> iNum2)</span></span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> *argv[])</span> </span>&#123;</div><div class="line">    </div><div class="line">    <span class="keyword">int</span> iNum1= atoi(argv[<span class="number">1</span>]);</div><div class="line">    <span class="keyword">int</span> iNum2= atoi(argv[<span class="number">3</span>]);</div><div class="line">    <span class="keyword">char</span> calcType = argv[<span class="number">2</span>][<span class="number">0</span>];</div><div class="line"></div><div class="line">    <span class="keyword">switch</span>(calcType)</div><div class="line">        <span class="keyword">case</span> <span class="string">'+'</span>:</div><div class="line">            myAdd(iNum1, iNum2);</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        <span class="keyword">case</span> <span class="string">'-'</span>:</div><div class="line">            mySub(iNum1, iNum2);</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        <span class="keyword">case</span> <span class="string">'*'</span>:</div><div class="line">            myAdd(iNum1, iNum2);</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        <span class="keyword">case</span> <span class="string">'/'</span>:</div><div class="line">            myAdd(iNum1, iNum2);</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        <span class="keyword">default</span>:</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, <span class="string">"수식을 잘못 입력했습니다."</span>);</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">myAdd</span><span class="params">(<span class="keyword">int</span> iNum1, <span class="keyword">int</span> iNum2)</span> </span>&#123;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, iNum1 + iNum2);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">mySub</span><span class="params">(<span class="keyword">int</span> iNum1, <span class="keyword">int</span> iNum2)</span> </span>&#123;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, iNum1 - iNum2);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">myMulti</span><span class="params">(<span class="keyword">int</span> iNum1, <span class="keyword">int</span> iNum2)</span> </span>&#123;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, iNum1 * iNum2);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">myDiv</span><span class="params">(<span class="keyword">int</span> iNum1, <span class="keyword">int</span> iNum2)</span> </span>&#123;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, iNum1 / iNum2);</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;switch-case&quot;&gt;&lt;a href=&quot;#switch-case&quot; class=&quot;headerlink&quot; title=&quot;switch case&quot;&gt;&lt;/a&gt;switch case&lt;/h3&gt;&lt;p&gt;조건문의 또다른 형태입니다.&lt;br&gt;값에 따라 분기를 하는 구조
      
    
    </summary>
    
      <category term="C언어기초" scheme="http://korcow.github.io/categories/C%EC%96%B8%EC%96%B4%EA%B8%B0%EC%B4%88/"/>
    
    
      <category term="switch" scheme="http://korcow.github.io/tags/switch/"/>
    
  </entry>
  
  <entry>
    <title>인자로 입력 받기</title>
    <link href="http://korcow.github.io/2017/11/23/c-%EC%9D%B8%EC%9E%90%EB%A1%9C-%EC%9E%85%EB%A0%A5-%EB%B0%9B%EA%B8%B0/"/>
    <id>http://korcow.github.io/2017/11/23/c-인자로-입력-받기/</id>
    <published>2017-11-23T07:43:34.058Z</published>
    <updated>2017-11-23T07:43:34.058Z</updated>
    
    <content type="html"><![CDATA[<h3 id="인자로-입력받기"><a href="#인자로-입력받기" class="headerlink" title="인자로 입력받기"></a>인자로 입력받기</h3><p>리눅스 명령은 프로그램 실행시 옵션으로 인자를 입력받아 처리를 할 수 있게 만듭니다.<br>입력되는 인자에 따라 루틴을 바꾸어 준다든지, 인자를 매개변수로 사용할 수 있도록 해보겠습니다.</p><p>먼저 간단한 계산기를 만들어 보죠.<br>프로그램 이름은 mycalc로 할겁니다.<br>mycalc 인자1, 인자2, 인자3을 입력받을 겁니다.<br>인자1은 num1, 인자2는 연산자, 인자3은 num3로 구분을 할 겁니다.<br>인자의 구분은 스페이스로 할겁니다.</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ mycalc 10 + 20</div></pre></td></tr></table></figure><p>지금까지 메인 함수를 사용하면서 함수인자를 일부러 void로 사용하지 않았습니다.<br>함수를 배울때 인자를 입력받지 않을 때는 void를 넣는다고 했습니다.<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>인자를 입력받기 위해서는 <code>(int argc, const char *argv[])</code>를 사용합니다.<br>자료형을 바꿀수 있지만 관례적으로 위와 같이 사용합니다.<br>argc 변수에는 인자의 갯수(스페이스로 구분)<br>*argv[]는 인자의 문자열이 들어갑니다. char로 선언했으니 모두 문자로 인식합니다.<br>숫자로 연산을 해야 한다면 문자를 숫자로 바꾸어야 합니다. argv[0]은 파일명입니다.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> *argv[])</span> </span>&#123;</div><div class="line">    </div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, argc);</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; argc; i++)&#123;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"argv[%d] = %s\n"</span>, i, argv[i]);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>먼저 위처럼 코딩후 실행을 해보세요. 인자를 여러개 입력해 보세요. 또 인자 없이도 실행해 보세요. </p><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt; // atoi()</span></span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">myAdd</span><span class="params">(<span class="keyword">int</span> iNum1, <span class="keyword">int</span> iNum2)</span></span>;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">mySub</span><span class="params">(<span class="keyword">int</span> iNum1, <span class="keyword">int</span> iNum2)</span></span>;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">myMulti</span><span class="params">(<span class="keyword">int</span> iNum1, <span class="keyword">int</span> iNum2)</span></span>;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">myDiv</span><span class="params">(<span class="keyword">int</span> iNum1, <span class="keyword">int</span> iNum2)</span></span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> *argv[])</span> </span>&#123;</div><div class="line">    </div><div class="line">        <span class="keyword">int</span> iNum1= atoi(argv[<span class="number">1</span>]);</div><div class="line">        <span class="keyword">int</span> iNum2= atoi(argv[<span class="number">3</span>]);</div><div class="line">        <span class="keyword">char</span> calcType = argv[<span class="number">2</span>][<span class="number">0</span>];</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (calcType == <span class="string">'+'</span>)&#123;</div><div class="line">            myAdd(iNum1, iNum2);</div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(calcType == <span class="string">'-'</span>)&#123;</div><div class="line">            mySub(iNum1, iNum2);</div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (calcType == <span class="string">'*'</span>)&#123;</div><div class="line">            myAdd(iNum1, iNum2);</div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (calcType == <span class="string">'/'</span>)&#123;</div><div class="line">            myAdd(iNum1, iNum2);</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, <span class="string">"수식을 잘못 입력했습니다."</span>);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">myAdd</span><span class="params">(<span class="keyword">int</span> iNum1, <span class="keyword">int</span> iNum2)</span> </span>&#123;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, iNum1 + iNum2);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">mySub</span><span class="params">(<span class="keyword">int</span> iNum1, <span class="keyword">int</span> iNum2)</span> </span>&#123;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, iNum1 - iNum2);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">myMulti</span><span class="params">(<span class="keyword">int</span> iNum1, <span class="keyword">int</span> iNum2)</span> </span>&#123;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, iNum1 * iNum2);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">myDiv</span><span class="params">(<span class="keyword">int</span> iNum1, <span class="keyword">int</span> iNum2)</span> </span>&#123;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, iNum1 / iNum2);</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>위 프로그램에서 함수를 사용하지 않고 if 문에서 바로 printf()만 사용해도 됩니다만 옵션에 따른 실행을 해야 하는 경우 함수로 처리하면 편하다는 예로 만들어 봤습니다.</p><ul><li>참고로 문자열을 입력하려면 ‘hello world !!!’ 이렇게 쓰면 됩니다.</li><li>문자열을 인자로 입력받아서 선문자로 감싸는 프로그램을 만들어 보세요.</li><li>입력받은 문자열 카운트해서 사용하면 됩니다. 영어만, 한글만, 한영혼합해서 카운트도 해보세요. 한글이 사용되면 카운트 하는 알고리즘을 바꾸어야 합니다. 한글이 있는지 없는지도 확인하는 함수도 필요하겠네요.<br><code>#include &lt;string.h&gt; // strlen()</code></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;인자로-입력받기&quot;&gt;&lt;a href=&quot;#인자로-입력받기&quot; class=&quot;headerlink&quot; title=&quot;인자로 입력받기&quot;&gt;&lt;/a&gt;인자로 입력받기&lt;/h3&gt;&lt;p&gt;리눅스 명령은 프로그램 실행시 옵션으로 인자를 입력받아 처리를 할 수 있게 만듭니다
      
    
    </summary>
    
      <category term="C언어기초" scheme="http://korcow.github.io/categories/C%EC%96%B8%EC%96%B4%EA%B8%B0%EC%B4%88/"/>
    
    
  </entry>
  
</feed>
