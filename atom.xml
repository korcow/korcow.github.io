<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>KORCOW</title>
  
  <subtitle>HANS</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://korcow.github.io/"/>
  <updated>2017-12-29T10:57:17.745Z</updated>
  <id>http://korcow.github.io/</id>
  
  <author>
    <name>woo-seok Han</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>가상환경(pyenv)</title>
    <link href="http://korcow.github.io/2017/12/29/python-%EA%B0%80%EC%83%81%ED%99%98%EA%B2%BD/"/>
    <id>http://korcow.github.io/2017/12/29/python-가상환경/</id>
    <published>2017-12-29T10:57:17.745Z</published>
    <updated>2017-12-29T10:57:17.745Z</updated>
    
    <content type="html"><![CDATA[<h3 id="가상환경-설정하기"><a href="#가상환경-설정하기" class="headerlink" title="가상환경 설정하기"></a>가상환경 설정하기</h3><h2 id="pyenv-pyenv-virtualenv-설치"><a href="#pyenv-pyenv-virtualenv-설치" class="headerlink" title="pyenv, pyenv-virtualenv 설치"></a>pyenv, pyenv-virtualenv 설치</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ brew install pyenv</div><div class="line">$ brew install pyenv-virtualenv</div></pre></td></tr></table></figure><p>설치하고 나면 경고메시지가 뜨면서 다음과 같은 문구를 .bash_profile에 추가하라는 메시지가 출력됩니다.<br>메시지를 복사해 실행하거나 직접 환경파일에 입력해 줄 수 있습니다.<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">export</span> PATH=<span class="string">"<span class="variable">$HOME</span>/.pyenv/bin:<span class="variable">$PATH</span>"</span></div><div class="line"><span class="built_in">eval</span> <span class="string">"<span class="variable">$(pyenv init -)</span>"</span></div><div class="line"><span class="built_in">eval</span> <span class="string">"<span class="variable">$(pyenv virtualenv-init -)</span>"</span></div></pre></td></tr></table></figure></p><p>~/.bash_profile(.zshrc)에 추가해 줍니다.</p><p>pyenv로 설치할 수 있는 버전의 목록을 보려면 다음과 같은 명령어를 입력한다.</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ pyenv install --list</div></pre></td></tr></table></figure><p>python 3.6.3 설치<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ pyenv install 3.6.3</div></pre></td></tr></table></figure></p><p>조금 기다리면 설치가 완료 됩니다. </p><p>versions 명령을 이용해서 설치된 리스트를 확인 할 수 있습니다.<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ pyenv versions</div><div class="line"></div><div class="line">* system (<span class="built_in">set</span> by PYENV_VERSION environment variable)</div><div class="line">  3.6.3</div></pre></td></tr></table></figure></p><p>버전 이름 맨 앞의 *표시는 현재 사용하고 있는 Python버전 입니다. 버전을 바려면 다음과 같은 명령어를 입력한다.<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ pyenv shell 3.6.3</div></pre></td></tr></table></figure></p><hr><h2 id="Pyenv명령"><a href="#Pyenv명령" class="headerlink" title="Pyenv명령"></a>Pyenv명령</h2><p>가장 일반적인 하위 명령은 다음과 같습니다.</p><h2 id="pyenv-commands"><a href="#pyenv-commands" class="headerlink" title="pyenv commands"></a>pyenv commands</h2><p>pyenv local<br>pyenv global<br>pyenv shell<br>pyenv install<br>pyenv uninstall<br>pyenv rehash<br>pyenv version<br>pyenv versions<br>pyenv which<br>pyenv whence<br>pyenv commands<br>사용 가능한 모든 pyenv 명령을 나열합니다.</p><h2 id="pyenv-local"><a href="#pyenv-local" class="headerlink" title="pyenv local"></a>pyenv local</h2><p>.python-version현재 디렉토리 의 파일에 버전 이름을 작성하여 로컬 응용 프로그램 특정 Python 버전을 설정합니다 . 이 버전은 전역 버전을 무시하며 PYENV_VERSION환경 변수 또는 pyenv shell 명령 을 설정하여 재정의 할 수 있습니다 .<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ pyenv <span class="built_in">local</span> 2.7.6</div></pre></td></tr></table></figure></p><p>버전 번호없이 실행 pyenv local하면 현재 구성된 로컬 버전을보고합니다. 다음과 같이 로컬 버전을 설정 해제 할 수도 있습니다.</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ pyenv <span class="built_in">local</span> --<span class="built_in">unset</span></div></pre></td></tr></table></figure><p>이전 버전의 pyenv는 로컬 버전 사양을 파일에 저장했습니다 .pyenv-version. 이전 버전과의 호환성을 위해 pyenv는 .pyenv-version파일에 지정된 로컬 버전을 읽지 만 .python-version동일한 디렉토리 의 파일이 우선합니다.</p><h2 id="pyenv-local-advence"><a href="#pyenv-local-advence" class="headerlink" title="pyenv local advence"></a>pyenv local advence</h2><p>한 번에 여러 버전을 로컬 파이썬으로 지정할 수 있습니다.</p><p>2.7.6과 3.3.3의 두 가지 버전이 있다고 가정 해 보겠습니다. 3.3.3 이상 2.7.6을 선호하는 경우,<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">$ pyenv <span class="built_in">local</span> 2.7.6 3.3.3</div><div class="line">$ pyenv versions</div><div class="line">  system</div><div class="line">* 2.7.6 (<span class="built_in">set</span> by /Users/yyuu/path/to/project/.python-version)</div><div class="line">* 3.3.3 (<span class="built_in">set</span> by /Users/yyuu/path/to/project/.python-version)</div><div class="line">$ python --version</div><div class="line">Python 2.7.6</div><div class="line">$ python2.7 --version</div><div class="line">Python 2.7.6</div><div class="line">$ python3.3 --version</div><div class="line">Python 3.3.3</div></pre></td></tr></table></figure></p><p>또는 2.7.3 이상 3.3.3을 선호하는 경우,<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">$ pyenv <span class="built_in">local</span> 3.3.3 2.7.6</div><div class="line">$ pyenv versions</div><div class="line">  system</div><div class="line">* 2.7.6 (<span class="built_in">set</span> by /Users/yyuu/path/to/project/.python-version)</div><div class="line">* 3.3.3 (<span class="built_in">set</span> by /Users/yyuu/path/to/project/.python-version)</div><div class="line">  venv27</div><div class="line">$ python --version</div><div class="line">Python 3.3.3</div><div class="line">$ python2.7 --version</div><div class="line">Python 2.7.6</div><div class="line">$ python3.3 --version</div><div class="line">Python 3.3.3</div></pre></td></tr></table></figure></p><p>##pyenv global<br>~/.pyenv/version파일에 버전 이름을 쓰면 모든 쉘에서 사용할 파이썬의 글로벌 버전을 설정 합니다. 이 버전은 응용 프로그램 특정 .python-version파일 또는 PYENV_VERSION환경 변수 를 설정하여 대체 할 수 있습니다 .<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ pyenv global 2.7.6</div></pre></td></tr></table></figure></p><p>특수 버전 이름 system은 pyenv에게 시스템 파이썬을 사용하도록 지정합니다 (귀하의 검색을 통해 감지 됨 <code>$PATH</code>).</p><p>버전 번호없이 실행 pyenv global하면 현재 구성된 글로벌 버전을 알려줍니다.</p><h2 id="pyenv-global-advence"><a href="#pyenv-global-advence" class="headerlink" title="pyenv global advence"></a>pyenv global advence</h2><p>한 번에 전역 Python으로 여러 버전을 지정할 수 있습니다.</p><p>2.7.6과 3.3.3의 두 가지 버전이 있다고 가정 해 보겠습니다. 3.3.3 이상 2.7.6을 선호하는 경우,</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">$ pyenv global 2.7.6 3.3.3</div><div class="line">$ pyenv versions</div><div class="line">  system</div><div class="line">* 2.7.6 (<span class="built_in">set</span> by /Users/yyuu/.pyenv/version)</div><div class="line">* 3.3.3 (<span class="built_in">set</span> by /Users/yyuu/.pyenv/version)</div><div class="line">$ python --version</div><div class="line">Python 2.7.6</div><div class="line">$ python2.7 --version</div><div class="line">Python 2.7.6</div><div class="line">$ python3.3 --version</div><div class="line">Python 3.3.3</div></pre></td></tr></table></figure><p>또는 2.7.3 이상 3.3.3을 선호하는 경우,</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">$ pyenv global 3.3.3 2.7.6</div><div class="line">$ pyenv versions</div><div class="line">  system</div><div class="line">* 2.7.6 (<span class="built_in">set</span> by /Users/yyuu/.pyenv/version)</div><div class="line">* 3.3.3 (<span class="built_in">set</span> by /Users/yyuu/.pyenv/version)</div><div class="line">  venv27</div><div class="line">$ python --version</div><div class="line">Python 3.3.3</div><div class="line">$ python2.7 --version</div><div class="line">Python 2.7.6</div><div class="line">$ python3.3 --version</div><div class="line">Python 3.3.3</div></pre></td></tr></table></figure><p>##pyenv shell<br>쉘에 PYENV_VERSION 환경 변수를 설정하여 쉘 특정 Python 버전을 설정합니다 . 이 버전은 응용 프로그램 특정 버전 및 전역 버전을 대체합니다.<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ pyenv shell pypy-2.2.1</div></pre></td></tr></table></figure></p><p>버전 번호없이 실행하면 pyenv shell의 현재 값을보고합니다 PYENV_VERSION. 쉘 버전을 설정 해제 할 수도 있습니다.<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ pyenv shell --<span class="built_in">unset</span></div></pre></td></tr></table></figure></p><p>이 명령을 사용하려면 pyenv의 쉘 통합이 활성화되어 있어야합니다 (설치 지침의 3 단계). 쉘 통합을 사용하지 않으려면 PYENV_VERSION변수를 직접 설정할 수 있습니다 .<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">export</span> PYENV_VERSION=pypy-2.2.1</div></pre></td></tr></table></figure></p><h2 id="pyenv-shell-advence"><a href="#pyenv-shell-advence" class="headerlink" title="pyenv shell advence"></a>pyenv shell advence</h2><p>PYENV_VERSION한 번에 여러 버전을 지정할 수 있습니다 .</p><p>2.7.6과 3.3.3의 두 가지 버전이 있다고 가정 해 보겠습니다. 3.3.3 이상 2.7.6을 선호하는 경우,<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">$ pyenv shell 2.7.6 3.3.3</div><div class="line">$ pyenv versions</div><div class="line">  system</div><div class="line">* 2.7.6 (<span class="built_in">set</span> by PYENV_VERSION environment variable)</div><div class="line">* 3.3.3 (<span class="built_in">set</span> by PYENV_VERSION environment variable)</div><div class="line">$ python --version</div><div class="line">Python 2.7.6</div><div class="line">$ python2.7 --version</div><div class="line">Python 2.7.6</div><div class="line">$ python3.3 --version</div><div class="line">Python 3.3.3</div></pre></td></tr></table></figure></p><p>또는 2.7.3 이상 3.3.3을 선호하는 경우,<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">$ pyenv shell 3.3.3 2.7.6</div><div class="line">$ pyenv versions</div><div class="line">  system</div><div class="line">* 2.7.6 (<span class="built_in">set</span> by PYENV_VERSION environment variable)</div><div class="line">* 3.3.3 (<span class="built_in">set</span> by PYENV_VERSION environment variable)</div><div class="line">  venv27</div><div class="line">$ python --version</div><div class="line">Python 3.3.3</div><div class="line">$ python2.7 --version</div><div class="line">Python 2.7.6</div><div class="line">$ python3.3 --version</div><div class="line">Python 3.3.3</div></pre></td></tr></table></figure></p><h2 id="pyenv-install"><a href="#pyenv-install" class="headerlink" title="pyenv install"></a>pyenv install</h2><p>Python 버전을 설치합니다 (using python-build).<br>설치 오류가 나는 경우 xcode command line을 업데이트 하면됩니다.<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ xcode-select --install</div></pre></td></tr></table></figure></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">Usage: pyenv install [-f] [-kvp] &lt;version&gt;</div><div class="line">       pyenv install [-f] [-kvp] &lt;definition-file&gt;</div><div class="line">       pyenv install -l|--list</div><div class="line"></div><div class="line">  -l/--list             List all available versions</div><div class="line">  -f/--force            Install even <span class="keyword">if</span> the version appears to be installed already</div><div class="line">  -s/--skip-existing    Skip the installation <span class="keyword">if</span> the version appears to be installed already</div><div class="line"></div><div class="line">  python-build options:</div><div class="line"></div><div class="line">  -k/--keep        Keep <span class="built_in">source</span> tree <span class="keyword">in</span> <span class="variable">$PYENV_BUILD_ROOT</span> after installation</div><div class="line">                   (defaults to <span class="variable">$PYENV_ROOT</span>/sources)</div><div class="line">  -v/--verbose     Verbose mode: <span class="built_in">print</span> compilation status to stdout</div><div class="line">  -p/--patch       Apply a patch from stdin before building</div><div class="line">  -g/--debug       Build a debug version</div></pre></td></tr></table></figure><p>Anaconda, Jython, pypy 및 stackless를 포함하여 Python의 사용 가능한 모든 버전을 나열하려면 다음을 사용하십시오.<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ pyenv install --list</div></pre></td></tr></table></figure></p><p>그런 다음 원하는 버전을 설치하십시오.<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ pyenv install 2.7.6</div><div class="line">$ pyenv install 2.6.8</div><div class="line">$ pyenv versions</div><div class="line">  system</div><div class="line">  2.6.8</div><div class="line">* 2.7.6 (<span class="built_in">set</span> by /home/yyuu/.pyenv/version)</div></pre></td></tr></table></figure></p><h2 id="pyenv-uninstall"><a href="#pyenv-uninstall" class="headerlink" title="pyenv uninstall"></a>pyenv uninstall</h2><p>특정 Python 버전을 제거합니다.<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">Usage: pyenv uninstall [-f|--force] &lt;version&gt;</div><div class="line"></div><div class="line">   -f  Attempt to remove the specified version without prompting</div><div class="line">       <span class="keyword">for</span> confirmation. If the version does not exist, <span class="keyword">do</span> not</div><div class="line">       display an error message.</div></pre></td></tr></table></figure></p><h2 id="pyenv-rehash"><a href="#pyenv-rehash" class="headerlink" title="pyenv rehash"></a>pyenv rehash</h2><p>pyenv (즉, ~/.pyenv/versions/<em>/bin/</em>)에 알려진 모든 Python 바이너리에 대한 심을 설치 합니다. 새 버전의 Python을 설치하거나 바이너리를 제공하는 패키지를 설치 한 후에이 명령을 실행하십시오.</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ pyenv <span class="built_in">rehash</span></div></pre></td></tr></table></figure><h2 id="pyenv-version"><a href="#pyenv-version" class="headerlink" title="pyenv version"></a>pyenv version</h2><p>현재 활성화 된 Python 버전과 그 설정 방법에 대한 정보를 표시합니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ pyenv version</div><div class="line">2.7.6 (set by /home/yyuu/.pyenv/version)</div></pre></td></tr></table></figure><h2 id="pyenv-versions"><a href="#pyenv-versions" class="headerlink" title="pyenv versions"></a>pyenv versions</h2><p>pyenv에 알려진 모든 Python 버전을 나열하고 현재 활성화 된 버전 옆에 별표를 표시합니다.</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$ pyenv versions</div><div class="line"> 2.5.6</div><div class="line"> 2.6.8</div><div class="line">* 2.7.6 (<span class="built_in">set</span> by /home/yyuu/.pyenv/version)</div><div class="line"> 3.3.3</div><div class="line"> jython-2.5.3</div><div class="line"> pypy-2.2.1</div></pre></td></tr></table></figure><p>##pyenv which<br>지정된 명령을 실행할 때 pyenv가 호출 할 실행 파일의 전체 경로를 표시합니다.</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ pyenv <span class="built_in">which</span> python3.3</div><div class="line">/home/yyuu/.pyenv/versions/3.3.3/bin/python3.3</div></pre></td></tr></table></figure><h2 id="pyenv-whence"><a href="#pyenv-whence" class="headerlink" title="pyenv whence"></a>pyenv whence</h2><p>주어진 명령이 설치된 모든 Python 버전을 나열합니다.</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ pyenv <span class="built_in">whence</span> 2to3</div><div class="line">2.6.8</div><div class="line">2.7.6</div><div class="line">3.3.3</div></pre></td></tr></table></figure><hr><h2 id="pyenv로-virtualenv-생성"><a href="#pyenv로-virtualenv-생성" class="headerlink" title="pyenv로 virtualenv 생성"></a>pyenv로 virtualenv 생성</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$ pyenv virtualenv 3.6.3 mypy3</div><div class="line">pyenv virtualenv [파이썬버젼] [가상환경명] 형식으로 입력합니다.</div><div class="line"></div><div class="line">$ pyenv versions</div><div class="line"></div><div class="line">* system (<span class="built_in">set</span> by PYENV_VERSION environment variable)</div><div class="line">  3.6.3</div><div class="line">  3.6.3/env/mypy3</div></pre></td></tr></table></figure><p>versions명령어로 3.6.3 위에 mypy3_virtualenv라는 환경이 설치된 것을 확인할 수 있습니다.</p><p>shell 명령어를 사용하거나 activate명령어를 이용해서 버젼을 바꿀수 있습니다.<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ pyenv shell[or activate] mypy3</div></pre></td></tr></table></figure></p><p>shell 명령어는 Python의 버전과 virtualenv에 모두 적용할 수 있는 명령어이고, activate 명령어는 virtualenv에만 사용이 가능합니다. shell을 이용해서 다른 버전이나 virtualenv를 사용중이라면 pyenv shell system을 이용하여 기본 버전으로 되돌아올 수 있고, activate를 이용하여 virtualenv를 사용중이라면 pyenv deactivate를 이용하여 사용중인 virtualenv에서 나올 수 있다.</p><p>requirements.txt 생성<br>mypy3를 하나의 Python 프로젝트라고 생각하자. 이곳에 프로젝트에 필요한 package들을 설치해야 한다. pip로 Django를 설치하고, freeze로 package들 목록을 추출해보자.</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ pip install django</div><div class="line">$ pip freeze &gt; requirements.txt</div></pre></td></tr></table></figure><p>requirements.txt에 Django==1.10.1라고 현재 설치된 package가 적혀있다. 이는 pyenv파일에 독립적으로 설치된 package이고, 다른 virtualenv나 버전으로 옮기면 사용할 수 없게 된다. 이로써 의존성 관리 문제를 해결 하게 된 것이다.</p><p>다른 개발 환경에서 프로젝트에 설치된 패키지를 동기화하려면 virtualenv를 만들고, shell명령어로 사용 설정을 한 뒤에, requirements.txt파일을 받아서 다음과 같은 명령어를 입력합니다.</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ pip install -r requirements.txt</div></pre></td></tr></table></figure><p>requirements.txt라는 이름은 정해진 것이 아니라 package목록을 담는 파일이름으로 관습적으로 사용합니다.</p><h2 id="autoenv-설치"><a href="#autoenv-설치" class="headerlink" title="autoenv 설치"></a>autoenv 설치</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ brew install autoenv</div></pre></td></tr></table></figure><p><code>.bash_profile</code>에 다음과 같은 내용을 넣어줍니다.<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">source</span> $(brew --prefix autoenv)/activate.sh</div></pre></td></tr></table></figure></p><h2 id="autoenv를-이용한-자동화"><a href="#autoenv를-이용한-자동화" class="headerlink" title="autoenv를 이용한 자동화"></a>autoenv를 이용한 자동화</h2><p>autoenv는 터미널에서 디렉토리로 이동되면 .env파일을 찾아서 그 내용을 자동으로 실행시켜 줍니다. </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ mkdir test_virtualenv</div><div class="line">$ <span class="built_in">cd</span> test_virtualenv</div><div class="line">$ vim .env</div></pre></td></tr></table></figure><p>pyenv shell mypy3_virtualenv</p><p>이제 해당디렉토리로 이동하면 .env의 내용을 실행할 것인지 물어봅니다. 이 때 ‘y’를 입력하면 .env내용을 실행하고 n를 입력하면 실행되지 않습니다.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;가상환경-설정하기&quot;&gt;&lt;a href=&quot;#가상환경-설정하기&quot; class=&quot;headerlink&quot; title=&quot;가상환경 설정하기&quot;&gt;&lt;/a&gt;가상환경 설정하기&lt;/h3&gt;&lt;h2 id=&quot;pyenv-pyenv-virtualenv-설치&quot;&gt;&lt;a href=&quot;#
      
    
    </summary>
    
      <category term="python" scheme="http://korcow.github.io/categories/python/"/>
    
    
      <category term="pyenv" scheme="http://korcow.github.io/tags/pyenv/"/>
    
  </entry>
  
  <entry>
    <title>리스트</title>
    <link href="http://korcow.github.io/2017/12/21/python-%EB%A6%AC%EC%8A%A4%ED%8A%B8/"/>
    <id>http://korcow.github.io/2017/12/21/python-리스트/</id>
    <published>2017-12-20T21:01:40.095Z</published>
    <updated>2017-12-20T21:01:40.095Z</updated>
    
    <content type="html"><![CDATA[<h3 id="list"><a href="#list" class="headerlink" title="list"></a>list</h3><p>리스트 자료형은 가장 많이 사용하는 자료형으로 데이터를 담는 용도로 사용합니다.</p><p>list method<br>append : 데이터를 추가 합니다.<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">ly_list = []</div><div class="line">my_list.append(<span class="string">'홍길동'</span>)</div><div class="line">my_list.append(<span class="number">100</span>)</div><div class="line">print(my_list)</div><div class="line"><span class="comment">#</span></div></pre></td></tr></table></figure></p><p>remove | 데이터를 삭제 합니다.<br> |  append(…)<br> |      L.append(object) -&gt; None – append object to end<br> |<br> |  clear(…)<br> |      L.clear() -&gt; None – remove all items from L<br> |<br> |  copy(…)<br> |      L.copy() -&gt; list – a shallow copy of L<br> |<br> |  count(…)<br>my_list = []<br>my_list.append(‘홍길동’)<br>my_list.append(100)<br>print(my_list)<br> |      L.count(value) -&gt; integer – return number of occurrences of value<br> |<br> |  extend(…)<br> |      L.extend(iterable) -&gt; None – extend list by appending elements from the iterable<br> |<br> |  index(…)<br> |      L.index(value, [start, [stop]]) -&gt; integer – return first index of value.<br> |      Raises ValueError if the value is not present.<br> |<br> |  insert(…)<br> |      L.insert(index, object) – insert object before index<br> |<br> |  pop(…)<br> |      L.pop([index]) -&gt; item – remove and return item at index (default last).<br> |      Raises IndexError if list is empty or index is out of range.<br> |<br> |  remove(…)<br> |      L.remove(value) -&gt; None – remove first occurrence of value.<br> |      Raises ValueError if the value is not present.<br> |<br> |  reverse(…)<br> |      L.reverse() – reverse <em>IN PLACE</em><br> |<br> |  sort(…)<br> |      L.sort(key=None, reverse=False) -&gt; None – stable sort <em>IN PLACE</em></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;list&quot;&gt;&lt;a href=&quot;#list&quot; class=&quot;headerlink&quot; title=&quot;list&quot;&gt;&lt;/a&gt;list&lt;/h3&gt;&lt;p&gt;리스트 자료형은 가장 많이 사용하는 자료형으로 데이터를 담는 용도로 사용합니다.&lt;/p&gt;
&lt;p&gt;list metho
      
    
    </summary>
    
      <category term="Python" scheme="http://korcow.github.io/categories/Python/"/>
    
    
      <category term="list" scheme="http://korcow.github.io/tags/list/"/>
    
  </entry>
  
  <entry>
    <title>ASCII 문자</title>
    <link href="http://korcow.github.io/2017/12/18/c-ascii%EB%AC%B8%EC%9E%90/"/>
    <id>http://korcow.github.io/2017/12/18/c-ascii문자/</id>
    <published>2017-12-17T18:20:29.010Z</published>
    <updated>2017-12-17T18:20:29.010Z</updated>
    
    <content type="html"><![CDATA[<h3 id="ASCII-문자"><a href="#ASCII-문자" class="headerlink" title="ASCII 문자"></a>ASCII 문자</h3><p>아스키 문자는 정수 0~127까지의 숫자를 문자로 대체해서 사용하는 약속 기호입니다.<br>0x0~1F 과 0x7F는 제어 문자가 들어있습니다.</p><h3 id="제어문자"><a href="#제어문자" class="headerlink" title="제어문자"></a>제어문자</h3><table><thead><tr><th>DEC</th><th>HEX</th><th>문자</th><th>설명</th><th>DEC</th><th>HEX</th><th>문자</th><th>설명</th></tr></thead><tbody><tr><td>0</td><td>0x00</td><td>NUL</td><td>NUl문자</td><td>17</td><td>0x11</td><td>DC1</td><td>device control 1 </td></tr><tr><td>1</td><td>0x01</td><td>SOH</td><td>start of header</td><td>18</td><td>0x12</td><td>DC2</td><td>device control 2</td></tr><tr><td>2</td><td>0x02</td><td>STX</td><td>start of text</td><td>19</td><td>0x13</td><td>DC3</td><td>device control 3</td></tr><tr><td>3</td><td>0x03</td><td>ETX</td><td>end of text</td><td>20</td><td>0x14</td><td>DC4</td><td>device control 4</td></tr><tr><td>4</td><td>0x04</td><td>EOT</td><td>end of transmission</td><td>21</td><td>0x15</td><td>NAK</td><td>negative ack</td></tr><tr><td>5</td><td>0x05</td><td>ENQ</td><td>enquiry</td><td>22</td><td>0x16</td><td>SYN</td><td>synchronous idle</td></tr><tr><td>6</td><td>0x06</td><td>ACK</td><td>acknowlegment</td><td>23</td><td>0x17</td><td>ETB</td><td>end of Transmission block</td></tr><tr><td>7</td><td>0x07</td><td>BEL</td><td>bell</td><td>24</td><td>0x18</td><td>CAN</td><td>cancle</td></tr><tr><td>8</td><td>0x08</td><td>BS</td><td>backspace</td><td>25</td><td>0x19</td><td>EM</td><td>end of medium</td></tr><tr><td>9</td><td>0x09</td><td>HT</td><td>horizontal tab</td><td>26</td><td>0x1a</td><td>SUB</td><td>substitute</td></tr><tr><td>10</td><td>0x0a</td><td>LF</td><td>line feed</td><td>27</td><td>0x1b</td><td>ESC</td><td>escape</td></tr><tr><td>11</td><td>0x0b</td><td>VT</td><td>vertical tab</td><td>28</td><td>0x1c</td><td>FS</td><td>file separator</td></tr><tr><td>12</td><td>0x0c</td><td>FF</td><td>form feed</td><td>29</td><td>0x1d</td><td>GS</td><td>group separator</td></tr><tr><td>13</td><td>0x0d</td><td>CR</td><td>carriage return</td><td>30</td><td>0x1e</td><td>RS</td><td>record separator</td></tr><tr><td>14</td><td>0x0e</td><td>SO</td><td>shift out</td><td>31</td><td>0x1f</td><td>US</td><td>Unit Separator</td></tr><tr><td>15</td><td>0x0f</td><td>SI</td><td>shift in</td><td>127</td><td>0x7f</td><td>DEL</td><td>delete</td></tr><tr><td>16</td><td>0x10</td><td>DLE</td><td>data link escape</td><td></td><td></td><td></td><td></td></tr></tbody></table><p>제어문자는 무척 많이 사용합니다. 설명을 영어 그대로 쓴건 검색시 사용하세요.<br>각종 통신시 전문을 주고 받을때, 키보드및 프린터 제어등등..</p><ul><li>0x30~0x39는 숫자</li><li>0x41~0x5A는 대문자</li><li>0x61~0x7A는 대문자</li><li>나머지는 특수문자가 들어 있습니다.<br>제어 문자는 출력할 수 없지만 나머지는 출력이 가능합니다.<br>참고로 0x20는 스페이스바(공백)이 출력되므로 아무것도 없는것 같이 보입니다.</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> *argv[])</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">int</span> iNum = <span class="number">32</span>;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d\t0x%04X\t%c\n"</span>, iNum, iNum, iNum);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>위 예제는 10진수 32를 10진수, 16진수, 문자로 출력하는 프로그램입니다.<br>공백을 출력하기 때문에 문자는 보이지 않습니다. 반복문을 이용해 126까지 출력해 봅시다.<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> *argv[])</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">32</span>; i &lt; <span class="number">127</span>; i++) &#123;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d\t0x%04X\t%c\n"</span>, i, i, i);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>제목도 달아 줄까요?</p><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> *argv[])</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, <span class="string">"        ASCII Table"</span>);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, <span class="string">"==========================="</span>);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, <span class="string">"10진    16진    문자"</span>);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, <span class="string">"---------------------------"</span>);</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">32</span>; i &lt; <span class="number">127</span>; i++) &#123;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d\t0x%04X\t%c\n"</span>, i, i, i);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>너무 길게 나오니 한줄에 3개씩 나오게 찍어보죠.<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> *argv[])</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, <span class="string">"                            ASCII Table"</span>);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, <span class="string">"====================================================================="</span>);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, <span class="string">"10진    16진    문자    10진    16진    문자    10진    16진    문자"</span>);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, <span class="string">"---------------------------------------------------------------------"</span>);</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">32</span>; i &lt; <span class="number">127</span>; i++) &#123;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d\t0x%04X\t%c\t"</span>, i, i, i);</div><div class="line">        <span class="keyword">if</span> ((i%<span class="number">3</span>)==<span class="number">1</span>) &#123;</div><div class="line">                <span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> *argv[])</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, <span class="string">"                            ASCII Table"</span>);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, <span class="string">"====================================================================="</span>);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, <span class="string">"10진    16진    문자    10진    16진    문자    10진    16진    문자"</span>);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, <span class="string">"---------------------------------------------------------------------"</span>);</div><div class="line"></div><div class="line">    <span class="keyword">int</span> cnt = <span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">32</span>; i &lt; <span class="number">127</span>; i=i+<span class="number">32</span>) &#123;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d\t0x%04X\t%c\t"</span>, i, i, i);</div><div class="line">        cnt = cnt +<span class="number">1</span>;</div><div class="line">        <span class="keyword">if</span> (cnt == <span class="number">3</span>)&#123;</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">            cnt = <span class="number">0</span>;</div><div class="line">            i = i - <span class="number">95</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>요즘은 영문os와 windows를 제외한 한글 os는 unicode를 사용합니다.<br>unicode안에 ascii code도 포함되어 있지만 확장아스키는 사용하는 폰트에 따라 나오지 않을 수 있습니다.<br>unicode를 출력해 보고 싶으면 127을 16777216 로 바꿔 출력해 보세요.<br>스크롤이 많을 테니 꼭 <code>| less</code> 를 이용하세요. <code>Ctrl+c</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;ASCII-문자&quot;&gt;&lt;a href=&quot;#ASCII-문자&quot; class=&quot;headerlink&quot; title=&quot;ASCII 문자&quot;&gt;&lt;/a&gt;ASCII 문자&lt;/h3&gt;&lt;p&gt;아스키 문자는 정수 0~127까지의 숫자를 문자로 대체해서 사용하는 약속 기호입니다
      
    
    </summary>
    
      <category term="C언어기초" scheme="http://korcow.github.io/categories/C%EC%96%B8%EC%96%B4%EA%B8%B0%EC%B4%88/"/>
    
    
      <category term="c" scheme="http://korcow.github.io/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>저장프로그램</title>
    <link href="http://korcow.github.io/2017/12/13/mysql-stored-program/"/>
    <id>http://korcow.github.io/2017/12/13/mysql-stored-program/</id>
    <published>2017-12-12T16:45:24.249Z</published>
    <updated>2017-12-12T16:45:24.250Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Stored-Program"><a href="#Stored-Program" class="headerlink" title="Stored Program"></a>Stored Program</h3><p>Mysql도 구조적 프로그래밍이 가능합니다.<br>따라서 프로그램을 저장해서 사용할 수 있습니다.<br>저장된 프로그램에는 sql로 구성된 본문이 존재하게 됩니다.</p><h3 id="delimiter"><a href="#delimiter" class="headerlink" title="delimiter"></a>delimiter</h3><p>delimiter는 구분기호를 재정의 하기 위해 사용합니다.<br>Mysql은 명령이 종료되면 ‘’;’’를 이용해서 종료를 알립니다.<br>다시말해 인터프리터처럼 ‘’;’’를 만나면 서버에게 질의를 하게 됩니다.</p><p>그래서 프로그래밍을 할때는 delimiter를 이용해서 ‘’;’’만나도 서버로 질의 되는것을 ‘’//‘’’로 변경해서 임시로 막아 줍니다. 프로그램이 끝나면 다시 delimiter를 이용해 ‘’;’’를 복원 시켜줍니다. 명령을 한꺼번에 서버로 전송하고 서버에서 프로그램에 오류가 있는지 분석하고 오류가 없으면 저장합니다. 저장된 프로그램은 call 명령으로 실행 할 수 있습니다.</p><p>프로그램은 begin과 end사이에 기술합니다. begin…end는 중첩해사 사용할수 있습니다.<br>또한 begin 앞에 label를 붙여 해당 프로그램으로 분기 할 수도 있습니다.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">mysql&gt; delimiter //</div><div class="line"></div><div class="line">mysql&gt; CREATE PROCEDURE dorepeat(p1 INT)</div><div class="line">    -&gt; BEGIN</div><div class="line">    -&gt;   SET @x = 0;</div><div class="line">    -&gt;   REPEAT SET @x = @x + 1; UNTIL @x &gt; p1 END REPEAT;</div><div class="line">    -&gt; END</div><div class="line">    -&gt; //</div><div class="line">Query OK, 0 rows affected (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt; delimiter ;</div><div class="line"></div><div class="line">mysql&gt; CALL dorepeat(1000);</div><div class="line">Query OK, 0 rows affected (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt; SELECT @x;</div><div class="line">+<span class="comment">------+</span></div><div class="line">| @x   |</div><div class="line">+<span class="comment">------+</span></div><div class="line">| 1001 |</div><div class="line">+<span class="comment">------+</span></div><div class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</div></pre></td></tr></table></figure><h3 id="변수의-선언"><a href="#변수의-선언" class="headerlink" title="변수의 선언"></a>변수의 선언</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> sp1 (x <span class="built_in">VARCHAR</span>(<span class="number">5</span>))</div><div class="line"><span class="keyword">BEGIN</span></div><div class="line">  <span class="keyword">DECLARE</span> xname <span class="built_in">VARCHAR</span>(<span class="number">5</span>) <span class="keyword">DEFAULT</span> <span class="string">'bob'</span>;</div><div class="line">  <span class="keyword">DECLARE</span> newname <span class="built_in">VARCHAR</span>(<span class="number">5</span>);</div><div class="line">  <span class="keyword">DECLARE</span> xid <span class="built_in">INT</span>;</div><div class="line"></div><div class="line">  <span class="keyword">SELECT</span> xname, <span class="keyword">id</span> <span class="keyword">INTO</span> newname, xid</div><div class="line">    <span class="keyword">FROM</span> table1 <span class="keyword">WHERE</span> xname = xname;</div><div class="line">  <span class="keyword">SELECT</span> newname;</div><div class="line"><span class="keyword">END</span>;</div></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> sp2 (x <span class="built_in">VARCHAR</span>(<span class="number">5</span>))</div><div class="line"><span class="keyword">BEGIN</span></div><div class="line">  <span class="keyword">DECLARE</span> xname <span class="built_in">VARCHAR</span>(<span class="number">5</span>) <span class="keyword">DEFAULT</span> <span class="string">'bob'</span>;</div><div class="line">  <span class="keyword">DECLARE</span> newname <span class="built_in">VARCHAR</span>(<span class="number">5</span>);</div><div class="line">  <span class="keyword">DECLARE</span> xid <span class="built_in">INT</span>;</div><div class="line">  <span class="keyword">DECLARE</span> done TINYINT <span class="keyword">DEFAULT</span> <span class="number">0</span>;</div><div class="line">  <span class="keyword">DECLARE</span> cur1 <span class="keyword">CURSOR</span> <span class="keyword">FOR</span> <span class="keyword">SELECT</span> xname, <span class="keyword">id</span> <span class="keyword">FROM</span> table1;</div><div class="line">  <span class="keyword">DECLARE</span> CONTINUE <span class="keyword">HANDLER</span> <span class="keyword">FOR</span> <span class="keyword">NOT</span> <span class="keyword">FOUND</span> <span class="keyword">SET</span> done = <span class="number">1</span>;</div><div class="line"></div><div class="line">  OPEN cur1;</div><div class="line">  read_loop: LOOP</div><div class="line">    FETCH FROM cur1 INTO newname, xid;</div><div class="line">    IF done THEN LEAVE read_loop; <span class="keyword">END</span> <span class="keyword">IF</span>;</div><div class="line">    <span class="keyword">SELECT</span> newname;</div><div class="line">  <span class="keyword">END</span> <span class="keyword">LOOP</span>;</div><div class="line">  CLOSE cur1;</div><div class="line"><span class="keyword">END</span>;</div></pre></td></tr></table></figure><h3 id="CASE-구문"><a href="#CASE-구문" class="headerlink" title="CASE 구문"></a>CASE 구문</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">CASE case_value</div><div class="line">    WHEN when_value THEN statement_list</div><div class="line">    [WHEN when_value THEN statement_list] ...</div><div class="line">    [ELSE statement_list]</div><div class="line"><span class="keyword">END</span> <span class="keyword">CASE</span></div></pre></td></tr></table></figure><p>또는:<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">CASE</div><div class="line">    WHEN search_condition THEN statement_list</div><div class="line">    [WHEN search_condition THEN statement_list] ...</div><div class="line">    [ELSE statement_list]</div><div class="line"><span class="keyword">END</span> <span class="keyword">CASE</span></div></pre></td></tr></table></figure></p><p>CASE저장된 프로그램에 대한 문은 복잡한 조건 구조를 구현합니다.</p><p>첫 번째 구문의 case_value경우 표현식입니다. 이 값은 둘 중 하나가 같아 질 때까지 when_value각 WHEN절의 표현식 과 비교됩니다 . equal when_value이 발견되면 해당 THEN절이 statement_list실행됩니다. no when_value가 동일하면 ELSE절이 statement_list실행됩니다 (있는 경우).</p><p>이 구문은 NULL때문에 같은지를 테스트하는 데 사용할 수 없습니다.  NULL = NULL false입니다. </p><p>두 번째 구문의 경우 각 WHEN절 search_condition식은 하나가 참일 때까지 평가되고 해당 THEN절이 statement_list실행됩니다. no search_condition가 동일하면 ELSE절이 statement_list실행됩니다 (있는 경우).</p><p>어떤 경우 when_value또는 search_condition테스트 한 값과 일치하고 CASE문에는 포함되지 ELSE절을하는 케이스 CASE 문을 찾을 수 없습니다 없습니다 오류가 발생합니다.</p><p>각각 statement_list은 하나 이상의 SQL 문으로 구성됩니다. 비어있는 statement_list것은 허용되지 않습니다.</p><p>어떤 WHEN절 에서도 값이 일치하지 않는 상황을 처리하려면 이 예에서와 같이 ELSE 빈 BEGIN … END블록을 포함하는 요소를 사용하십시오 . (이 ELSE절 에서 사용 된 들여 쓰기 는 명확성을 목적으로 한 것이며 다른 의미는 없습니다.)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">DELIMITER |</div><div class="line"></div><div class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> p()</div><div class="line">  <span class="keyword">BEGIN</span></div><div class="line">    <span class="keyword">DECLARE</span> v <span class="built_in">INT</span> <span class="keyword">DEFAULT</span> <span class="number">1</span>;</div><div class="line"></div><div class="line">    CASE v</div><div class="line">      WHEN 2 THEN <span class="keyword">SELECT</span> v;</div><div class="line">      WHEN 3 THEN <span class="keyword">SELECT</span> <span class="number">0</span>;</div><div class="line">      ELSE</div><div class="line">        <span class="keyword">BEGIN</span></div><div class="line">        <span class="keyword">END</span>;</div><div class="line">    <span class="keyword">END</span> <span class="keyword">CASE</span>;</div><div class="line">  <span class="keyword">END</span>;</div><div class="line">  |</div></pre></td></tr></table></figure><p>IF 구문<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">IF search_condition THEN statement_list</div><div class="line">    [ELSEIF search_condition THEN statement_list] ...</div><div class="line">    [ELSE statement_list]</div><div class="line"><span class="keyword">END</span> <span class="keyword">IF</span></div></pre></td></tr></table></figure></p><p>IF저장된 프로그램에 대한 문은 기본 조건 구조를 구현합니다.</p><p>경우] search_condition평가하여 true로, 해당 THEN또는 ELSEIF절을 statement_list실행합니다. search_condition일치하는 ELSE항목 이 없으면 절이 statement_list실행됩니다.</p><p>각각 statement_list은 하나 이상의 SQL 문으로 구성됩니다. 비어있는 statement_list것은 허용되지 않습니다.</p><p>IF … END IF예와 같이 블록이 저장된 프로그램 내에서 사용되는 다른 모든 유량 제어 블록처럼, 세미콜론으로 종료해야</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">DELIMITER //</div><div class="line"></div><div class="line"><span class="keyword">CREATE</span> <span class="keyword">FUNCTION</span> SimpleCompare(n <span class="built_in">INT</span>, m <span class="built_in">INT</span>)</div><div class="line">  <span class="keyword">RETURNS</span> <span class="built_in">VARCHAR</span>(<span class="number">20</span>)</div><div class="line"></div><div class="line">  <span class="keyword">BEGIN</span></div><div class="line">    <span class="keyword">DECLARE</span> s <span class="built_in">VARCHAR</span>(<span class="number">20</span>);</div><div class="line"></div><div class="line">    IF n &gt; m THEN SET s = '&gt;';</div><div class="line">    ELSEIF n = m THEN <span class="keyword">SET</span> s = <span class="string">'='</span>;</div><div class="line">    ELSE <span class="keyword">SET</span> s = <span class="string">'&lt;'</span>;</div><div class="line">    <span class="keyword">END</span> <span class="keyword">IF</span>;</div><div class="line"></div><div class="line">    <span class="keyword">SET</span> s = <span class="keyword">CONCAT</span>(n, <span class="string">' '</span>, s, <span class="string">' '</span>, m);</div><div class="line"></div><div class="line">    RETURN s;</div><div class="line">  <span class="keyword">END</span> //</div><div class="line"></div><div class="line">DELIMITER ;</div></pre></td></tr></table></figure><p>다른 흐름 제어 구조와 마찬가지로 IF … END IF블록은 다른 IF 명령문을 포함하여 다른 흐름 제어 구조 내에 중첩 될 수 있습니다 . 각 항목 IF은 END IF세미콜론으로 끝나야합니다. 들여 쓰기를 사용하여 다음과 같이 중첩 된 흐름 제어 블록을 사람이보다 쉽게 읽을 수있게 만들 수 있습니다 (MySQL에서는 필요하지 않음).</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">DELIMITER //</div><div class="line"></div><div class="line"><span class="keyword">CREATE</span> <span class="keyword">FUNCTION</span> VerboseCompare (n <span class="built_in">INT</span>, m <span class="built_in">INT</span>)</div><div class="line">  <span class="keyword">RETURNS</span> <span class="built_in">VARCHAR</span>(<span class="number">50</span>)</div><div class="line"></div><div class="line">  <span class="keyword">BEGIN</span></div><div class="line">    <span class="keyword">DECLARE</span> s <span class="built_in">VARCHAR</span>(<span class="number">50</span>);</div><div class="line"></div><div class="line">    IF n = m THEN <span class="keyword">SET</span> s = <span class="string">'equals'</span>;</div><div class="line">    ELSE</div><div class="line">      IF n &gt; m THEN SET s = 'greater';</div><div class="line">      ELSE <span class="keyword">SET</span> s = <span class="string">'less'</span>;</div><div class="line">      <span class="keyword">END</span> <span class="keyword">IF</span>;</div><div class="line"></div><div class="line">      <span class="keyword">SET</span> s = <span class="keyword">CONCAT</span>(<span class="string">'is '</span>, s, <span class="string">' than'</span>);</div><div class="line">    <span class="keyword">END</span> <span class="keyword">IF</span>;</div><div class="line"></div><div class="line">    <span class="keyword">SET</span> s = <span class="keyword">CONCAT</span>(n, <span class="string">' '</span>, s, <span class="string">' '</span>, m, <span class="string">'.'</span>);</div><div class="line"></div><div class="line">    RETURN s;</div><div class="line">  <span class="keyword">END</span> //</div><div class="line"></div><div class="line">DELIMITER ;</div></pre></td></tr></table></figure><p>이 예제에서는 내부 IF가 n과 m이 같지 않은 경우에만 평가됩니다.</p><h3 id="LOOP-구문"><a href="#LOOP-구문" class="headerlink" title="LOOP 구문"></a>LOOP 구문</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[begin_label:] LOOP</div><div class="line">    statement_list</div><div class="line"><span class="keyword">END</span> <span class="keyword">LOOP</span> [end_label]</div></pre></td></tr></table></figure><p>LOOP간단한 루프 구조를 구현하여 하나 이상의 명령문으로 구성되며 각각이 세미콜론 ( ;) 명령문 분리 문자로 종료되는 명령문 목록의 반복 실행을 가능하게 합니다. 루프 내의 명령문은 루프가 종료 될 때까지 반복됩니다. 일반적으로 이것은 LEAVE성명서 로 수행됩니다 . 저장된 함수 내 RETURN에서 함수를 완전히 종료하는 데 사용할 수도 있습니다.</p><p>루프 종료 문을 포함하지 않으면 무한 루프가 발생합니다.</p><p>LOOP문을 표시 할 수 있습니다. 레이블 사용에 관한 규칙은 13.6.2 절. “문장 레이블 구문”을 참조하십시오 .</p><p>예:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> doiterate(p1 <span class="built_in">INT</span>)</div><div class="line"><span class="keyword">BEGIN</span></div><div class="line">  label1: <span class="keyword">LOOP</span></div><div class="line">    <span class="keyword">SET</span> p1 = p1 + <span class="number">1</span>;</div><div class="line">    IF p1 &lt; 10 THEN</div><div class="line">      ITERATE label1;</div><div class="line">    <span class="keyword">END</span> <span class="keyword">IF</span>;</div><div class="line">    LEAVE label1;</div><div class="line">  <span class="keyword">END</span> <span class="keyword">LOOP</span> label1;</div><div class="line">  <span class="keyword">SET</span> @x = p1;</div><div class="line"><span class="keyword">END</span>;</div></pre></td></tr></table></figure><h3 id="REPEAT-구문"><a href="#REPEAT-구문" class="headerlink" title="REPEAT 구문"></a>REPEAT 구문</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[begin_label:] REPEAT</div><div class="line">    statement_list</div><div class="line">UNTIL search_condition</div><div class="line"><span class="keyword">END</span> <span class="keyword">REPEAT</span> [end_label]</div></pre></td></tr></table></figure><p>명령문 내의 명령문리스트 REPEAT는 search_condition표현식이 참이 될 때까지 반복 됩니다. 따라서, a는 REPEAT항상 적어도 한 번 루프에 들어갑니다. statement_list하나 이상의 명령문으로 구성되며, 각각은 semicolon ( ;) 명령문 분리 문자로 종료됩니다 .</p><p>REPEAT문을 표시 할 수 있습니다. 레이블 사용에 관한 규칙은 13.6.2 절. “문장 레이블 구문”을 참조하십시오 .</p><p>예:<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">mysql&gt; delimiter //</div><div class="line"></div><div class="line">mysql&gt; CREATE PROCEDURE dorepeat(p1 INT)</div><div class="line">    -&gt; BEGIN</div><div class="line">    -&gt;   SET @x = 0;</div><div class="line">    -&gt;   REPEAT</div><div class="line">    -&gt;     SET @x = @x + 1;</div><div class="line">    -&gt;   UNTIL @x &gt; p1 END REPEAT;</div><div class="line">    -&gt; END</div><div class="line">    -&gt; //</div><div class="line">Query OK, 0 rows affected (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt; CALL dorepeat(1000)//</div><div class="line">Query OK, 0 rows affected (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt; SELECT @x//</div><div class="line">+<span class="comment">------+</span></div><div class="line">| @x   |</div><div class="line">+<span class="comment">------+</span></div><div class="line">| 1001 |</div><div class="line">+<span class="comment">------+</span></div><div class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</div></pre></td></tr></table></figure></p><h3 id="RETURN-구문"><a href="#RETURN-구문" class="headerlink" title="RETURN 구문"></a>RETURN 구문</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">RETURN expr</div></pre></td></tr></table></figure><p>RETURN문은 저장 기능의 실행을 종료하고, 리턴 값이 expr함수 호출에있다. RETURN 저장 함수 에는 적어도 하나의 명령문 이 있어야합니다 . 함수에 여러 종료 점이있는 경우 둘 이상일 수 있습니다.</p><p>이 문은 저장 프로 시저, 트리거 또는 이벤트에 사용되지 않습니다. LEAVE문은 그 유형에 저장된 프로그램을 종료 할 수 있습니다.</p><h3 id="WHILE-구문"><a href="#WHILE-구문" class="headerlink" title="WHILE 구문"></a>WHILE 구문</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[begin_label:] WHILE search_condition <span class="keyword">DO</span></div><div class="line">    statement_list</div><div class="line"><span class="keyword">END</span> <span class="keyword">WHILE</span> [end_label]</div></pre></td></tr></table></figure><p>명령문 내의 명령문 목록 WHILE 은 search_condition표현식이 참일 때까지 반복됩니다 . statement_list하나 이상의 SQL 문으로 구성되며 각각은 semicolon ( ;) 문 분리 문자로 종료됩니다 .</p><p>WHILE문을 표시 할 수 있습니다. 레이블 사용에 관한 규칙은 13.6.2 절. “문장 레이블 구문”을 참조하십시오 .</p><p>예:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> dowhile()</div><div class="line"><span class="keyword">BEGIN</span></div><div class="line">  <span class="keyword">DECLARE</span> v1 <span class="built_in">INT</span> <span class="keyword">DEFAULT</span> <span class="number">5</span>;</div><div class="line"></div><div class="line">  WHILE v1 &gt; 0 DO</div><div class="line">    ...</div><div class="line">    <span class="keyword">SET</span> v1 = v1 - <span class="number">1</span>;</div><div class="line">  <span class="keyword">END</span> <span class="keyword">WHILE</span>;</div><div class="line"><span class="keyword">END</span>;</div></pre></td></tr></table></figure><p>13.6.6 커서<br>MySQL은 저장된 프로그램 내부의 커서를 지원합니다. 구문은 Embedded SQL에서와 같습니다. 커서에는 다음과 같은 특성이 있습니다.</p><p>비례 : 서버가 결과 테이블의 사본을 만들 수도 있고 만들지 않을 수도 있습니다</p><p>읽기 전용 : 업데이트 할 수 없음</p><p>스크롤 불가 : 한 방향으로 만 이동할 수 있고 행을 건너 뛸 수 없습니다.</p><p>커서 선언은 핸들러 선언 이전 및 변수 및 조건 선언 다음에 나타나야합니다.</p><p>예:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> curdemo()</div><div class="line"><span class="keyword">BEGIN</span></div><div class="line">  <span class="keyword">DECLARE</span> done <span class="built_in">INT</span> <span class="keyword">DEFAULT</span> <span class="literal">FALSE</span>;</div><div class="line">  <span class="keyword">DECLARE</span> a <span class="built_in">CHAR</span>(<span class="number">16</span>);</div><div class="line">  <span class="keyword">DECLARE</span> b, c <span class="built_in">INT</span>;</div><div class="line">  <span class="keyword">DECLARE</span> cur1 <span class="keyword">CURSOR</span> <span class="keyword">FOR</span> <span class="keyword">SELECT</span> <span class="keyword">id</span>,<span class="keyword">data</span> <span class="keyword">FROM</span> test.t1;</div><div class="line">  <span class="keyword">DECLARE</span> cur2 <span class="keyword">CURSOR</span> <span class="keyword">FOR</span> <span class="keyword">SELECT</span> i <span class="keyword">FROM</span> test.t2;</div><div class="line">  <span class="keyword">DECLARE</span> CONTINUE <span class="keyword">HANDLER</span> <span class="keyword">FOR</span> <span class="keyword">NOT</span> <span class="keyword">FOUND</span> <span class="keyword">SET</span> done = <span class="literal">TRUE</span>;</div><div class="line"></div><div class="line">  OPEN cur1;</div><div class="line">  OPEN cur2;</div><div class="line"></div><div class="line">  read_loop: LOOP</div><div class="line">    FETCH cur1 INTO a, b;</div><div class="line">    FETCH cur2 INTO c;</div><div class="line">    IF done THEN</div><div class="line">      LEAVE read_loop;</div><div class="line">    <span class="keyword">END</span> <span class="keyword">IF</span>;</div><div class="line">    IF b &lt; c THEN</div><div class="line">      <span class="keyword">INSERT</span> <span class="keyword">INTO</span> test.t3 <span class="keyword">VALUES</span> (a,b);</div><div class="line">    ELSE</div><div class="line">      <span class="keyword">INSERT</span> <span class="keyword">INTO</span> test.t3 <span class="keyword">VALUES</span> (a,c);</div><div class="line">    <span class="keyword">END</span> <span class="keyword">IF</span>;</div><div class="line">  <span class="keyword">END</span> <span class="keyword">LOOP</span>;</div><div class="line"></div><div class="line">  CLOSE cur1;</div><div class="line">  CLOSE cur2;</div><div class="line"><span class="keyword">END</span>;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Stored-Program&quot;&gt;&lt;a href=&quot;#Stored-Program&quot; class=&quot;headerlink&quot; title=&quot;Stored Program&quot;&gt;&lt;/a&gt;Stored Program&lt;/h3&gt;&lt;p&gt;Mysql도 구조적 프로그래밍이 가능합니
      
    
    </summary>
    
      <category term="Mysql" scheme="http://korcow.github.io/categories/Mysql/"/>
    
    
      <category term="stored program" scheme="http://korcow.github.io/tags/stored-program/"/>
    
  </entry>
  
  <entry>
    <title>자료형</title>
    <link href="http://korcow.github.io/2017/12/13/mysql-%EC%9E%90%EB%A3%8C%ED%98%95/"/>
    <id>http://korcow.github.io/2017/12/13/mysql-자료형/</id>
    <published>2017-12-12T15:24:45.028Z</published>
    <updated>2017-12-12T15:24:45.028Z</updated>
    
    <content type="html"><![CDATA[<h2 id="mysql-데이터-타입"><a href="#mysql-데이터-타입" class="headerlink" title="mysql 데이터 타입"></a>mysql 데이터 타입</h2><h3 id="문자형"><a href="#문자형" class="headerlink" title="문자형"></a>문자형</h3><table><thead><tr><th>데이터 타입</th><th>길이</th></tr></thead><tbody><tr><td>CHAR()</td><td>0 to 255 고정문자 길이</td></tr><tr><td>VARCHAR()</td><td>0~65,535 가변 문자 길이</td></tr><tr><td>TINYTEXT</td><td>최대 255 문자길이</td></tr><tr><td>TEXT</td><td>최대 65,535 문자길이</td></tr><tr><td>BLOB</td><td>최대 65,535 문자길이(이진파일)</td></tr><tr><td>MEDIUMTEXT</td><td>최대 16,777,215 문자길이</td></tr><tr><td>MEDIUMBLOB</td><td>최대 16,777,215 문자길이(이진파일)</td></tr><tr><td>LONGTEXT</td><td>최대 4,294,967,295 문자길이</td></tr><tr><td>LONGBLOB</td><td>최대 4,294,967,295 문자길이(이진파일)</td></tr></tbody></table><h3 id="숫자형"><a href="#숫자형" class="headerlink" title="숫자형"></a>숫자형</h3><table><thead><tr><th>데이터 타입</th><th>길이</th></tr></thead><tbody><tr><td>TINYINT()</td><td>정수형 -128 ~ 127 , UNSIGNED 0 ~ 255 정수형</td></tr><tr><td>SMALLINT()</td><td>정수형 -32,768 ~ 32,767, UNSIGNED 정수형 0 ~ 65,535</td></tr><tr><td>MEDIUMINT()</td><td>정수형 -8,388,608 to 8,388,607, UNSIGNED 정수형 0 to 16,777,215 </td></tr><tr><td>INT()</td><td>정수형 -2,147,483,648 ~ 2147483647 UNSIGNED 정수형 0 ~ 4294967295</td></tr><tr><td>BIGINT()</td><td>정수형 -9,223,372,036,854,775,808 ~ 9,223,372,036,854,775,807, UNSIGNED 정수형 0 ~ 18,446,744,073,709,551,615</td></tr><tr><td>FLOAT</td><td>부동소수점</td></tr><tr><td>DOUBLE( , )</td><td>배정도 부동소수점</td></tr><tr><td>DECIMAL( , )</td><td>숫자형</td></tr><tr><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td></td></tr></tbody></table><h3 id="날짜형"><a href="#날짜형" class="headerlink" title="날짜형"></a>날짜형</h3><table><thead><tr><th>데이터 타입</th><th>길이</th></tr></thead><tbody><tr><td>DATE</td><td>YYYY-MM-DD</td></tr><tr><td>TIME</td><td>HH:MM:SS</td></tr><tr><td>DATETIME</td><td>YYYY-MM-DD HH:MM:SS</td></tr><tr><td>TIMESTAMP</td><td>YYYY-MM-DD HH:MM:SS</td></tr><tr><td>YEAR</td><td>0000</td></tr></tbody></table><h3 id="기타"><a href="#기타" class="headerlink" title="기타"></a>기타</h3><table><thead><tr><th>데이터 타입</th><th>길이</th></tr></thead><tbody><tr><td>ENUM ()</td><td>열거된 값으로 제한</td></tr><tr><td>SET</td><td>0개 이상의 집합</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;mysql-데이터-타입&quot;&gt;&lt;a href=&quot;#mysql-데이터-타입&quot; class=&quot;headerlink&quot; title=&quot;mysql 데이터 타입&quot;&gt;&lt;/a&gt;mysql 데이터 타입&lt;/h2&gt;&lt;h3 id=&quot;문자형&quot;&gt;&lt;a href=&quot;#문자형&quot; class
      
    
    </summary>
    
      <category term="Mysql" scheme="http://korcow.github.io/categories/Mysql/"/>
    
    
      <category term="자료형" scheme="http://korcow.github.io/tags/%EC%9E%90%EB%A3%8C%ED%98%95/"/>
    
  </entry>
  
  <entry>
    <title>유니온</title>
    <link href="http://korcow.github.io/2017/12/10/c-%EC%9C%A0%EB%8B%88%EC%98%A8/"/>
    <id>http://korcow.github.io/2017/12/10/c-유니온/</id>
    <published>2017-12-10T01:47:07.812Z</published>
    <updated>2017-12-10T01:47:07.812Z</updated>
    
    <content type="html"><![CDATA[<h3 id="유니온"><a href="#유니온" class="headerlink" title="유니온"></a>유니온</h3><img src="/c언어기초/2017-12-02_19-30-05.png" width="500" title="구조체그림1"><p>선언 방법은 구조체와 동일합니다. 사용하는 용도와 내부적으로 처리하는 방식이 다릅니다. 자료형 중에 가장 큰 자료형을 다른 자료형과 같이 사용합니다.</p><h3 id="선언-및-사용"><a href="#선언-및-사용" class="headerlink" title="선언 및 사용"></a>선언 및 사용</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt; // strcpy()</span></span></div><div class="line"></div><div class="line"><span class="keyword">union</span> _Score&#123;</div><div class="line">    <span class="keyword">char</span> name[<span class="number">20</span>];</div><div class="line">    <span class="keyword">int</span> kor;</div><div class="line">    <span class="keyword">int</span> eng;</div><div class="line">    <span class="keyword">int</span> math;</div><div class="line">    <span class="keyword">int</span> sum;</div><div class="line">    <span class="keyword">double</span> avg;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> *argv[])</span> </span>&#123;</div><div class="line">    </div><div class="line">    <span class="keyword">union</span> _Score score;</div><div class="line"></div><div class="line">    <span class="built_in">strcpy</span>(score.name, <span class="string">"유재석"</span>);</div><div class="line">    score.kor = <span class="number">90</span>;</div><div class="line">    score.eng = <span class="number">95</span>;</div><div class="line">    score.math = <span class="number">100</span>;</div><div class="line">    score.sum = score.kor + score.eng + score.math;</div><div class="line">    score.avg = score.sum / <span class="number">3</span>;</div><div class="line"></div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s%d\n"</span>, <span class="string">"국어 점수: "</span>, score.kor);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s%d\n"</span>, <span class="string">"영어 점수: "</span>, score.eng);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s%d\n"</span>, <span class="string">"수학 점수: "</span>, score.math);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s%d\n"</span>, <span class="string">"총점 점수: "</span>, score.sum);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s%f\n"</span>, <span class="string">"평균 점수: "</span>, score.avg);</div><div class="line"></div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">국어 점수: 0</div><div class="line">영어 점수: 0</div><div class="line">수학 점수: 0</div><div class="line">총점 점수: 0</div><div class="line">평균 점수: 100.000000</div></pre></td></tr></table></figure><p>위와 같은 결과가 나왔습니다. 이유는 공용체는 자료형중에서 가장큰 자료형을 공유해서 사용합니다. 따라서 바로 자료값을 사용하지 않으면 다음 자료값으로 덮어 써지기 때문에 원하는 값을 얻지 못한겁니다. 값을 다음 값이 써지기 전까지만 기억 되므로 국, 영, 수 값을 다른 값이 덮어 쓰기 전에 사용해야 합니다.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt; // strcpy()</span></span></div><div class="line"></div><div class="line"><span class="keyword">union</span> _Score&#123;</div><div class="line">    <span class="keyword">int</span> a;</div><div class="line">    <span class="keyword">short</span> b;</div><div class="line">    <span class="keyword">char</span> c;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> *argv[])</span> </span>&#123;</div><div class="line">    </div><div class="line">    <span class="keyword">union</span> _Score score;</div><div class="line"></div><div class="line">    score.a = <span class="number">655236</span>;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s%d\n"</span>, <span class="string">"a : "</span>, score.a);</div><div class="line">    score.b = <span class="number">256</span>;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s%d\n"</span>, <span class="string">"b : "</span>, score.b);</div><div class="line">    score.c = <span class="string">'c'</span>;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s%c\n"</span>, <span class="string">"c : "</span>, score.c);</div><div class="line"></div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt; // strcpy()</span></span></div><div class="line"></div><div class="line"><span class="keyword">union</span> _BankNo&#123;</div><div class="line">    <span class="keyword">char</span> shinhan[<span class="number">12</span>];</div><div class="line">    <span class="keyword">char</span> kukmin[<span class="number">10</span>];</div><div class="line">    <span class="keyword">char</span> seoul[<span class="number">9</span>];</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> *argv[])</span> </span>&#123;</div><div class="line">    </div><div class="line">    <span class="keyword">union</span> _BankNo bankno;</div><div class="line"></div><div class="line">    <span class="built_in">strcpy</span>(bankno.a , <span class="string">"122236553236"</span>);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s%s\n"</span>, <span class="string">"a : "</span>, bankno.a);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s%s\n"</span>, <span class="string">"b : "</span>, bankno.b);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s%s\n"</span>, <span class="string">"c : "</span>, bankno.c);</div><div class="line"></div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;유니온&quot;&gt;&lt;a href=&quot;#유니온&quot; class=&quot;headerlink&quot; title=&quot;유니온&quot;&gt;&lt;/a&gt;유니온&lt;/h3&gt;&lt;img src=&quot;/c언어기초/2017-12-02_19-30-05.png&quot; width=&quot;500&quot; title=&quot;구조체그림1&quot;&gt;
      
    
    </summary>
    
      <category term="C언어기초" scheme="http://korcow.github.io/categories/C%EC%96%B8%EC%96%B4%EA%B8%B0%EC%B4%88/"/>
    
    
      <category term="유니온" scheme="http://korcow.github.io/tags/%EC%9C%A0%EB%8B%88%EC%98%A8/"/>
    
  </entry>
  
  <entry>
    <title>쿼리입력하기</title>
    <link href="http://korcow.github.io/2017/12/09/mysql-%EC%BF%BC%EB%A6%AC%EC%9E%85%EB%A0%A5%ED%95%98%EA%B8%B0/"/>
    <id>http://korcow.github.io/2017/12/09/mysql-쿼리입력하기/</id>
    <published>2017-12-08T16:17:42.866Z</published>
    <updated>2017-12-08T16:17:42.866Z</updated>
    
    <content type="html"><![CDATA[<h3 id="쿼리입력하기"><a href="#쿼리입력하기" class="headerlink" title="쿼리입력하기"></a>쿼리입력하기</h3><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql&gt;select version(), current_date;</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">+-----------------+--------------+</div><div class="line">| version()       | current_date |</div><div class="line">+-----------------+--------------+</div><div class="line">| 5.5.57-0+deb8u1 | 2017-12-08   |</div><div class="line">+-----------------+--------------+</div><div class="line">1 row in set (0.01 sec)</div></pre></td></tr></table></figure><p>쿼리문은 대소문자를 구분하지 않습니다.<br>단, 데이터는 대소문자를 구분합니다.</p><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql&gt;seLect verSion(), currEnt_date;</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">+-----------------+--------------+</div><div class="line">| verSion()       | currEnt_date |</div><div class="line">+-----------------+--------------+</div><div class="line">| 5.5.57-0+deb8u1 | 2017-12-08   |</div><div class="line">+-----------------+--------------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure><h3 id="계산하기"><a href="#계산하기" class="headerlink" title="계산하기"></a>계산하기</h3><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mysql&gt;select 10 + 5;</div><div class="line">mysql&gt;select (2 + 1)* 4;</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">--------------</div><div class="line">select 10 + 5</div><div class="line">--------------</div><div class="line"></div><div class="line">+--------+</div><div class="line">| 10 + 5 |</div><div class="line">+--------+</div><div class="line">|     15 |</div><div class="line">+--------+</div><div class="line">1 row in set (0.00 sec)</div><div class="line"></div><div class="line">--------------</div><div class="line">select (2 + 1)* 4</div><div class="line">--------------</div><div class="line"></div><div class="line">+------------+</div><div class="line">| (2 + 1)* 4 |</div><div class="line">+------------+</div><div class="line">|         12 |</div><div class="line">+------------+</div><div class="line">1 row in set (0.01 sec)</div></pre></td></tr></table></figure><h3 id="한줄에-여러문장을-입력할-수-있습니다"><a href="#한줄에-여러문장을-입력할-수-있습니다" class="headerlink" title="한줄에 여러문장을 입력할 수 있습니다."></a>한줄에 여러문장을 입력할 수 있습니다.</h3><p>단, 반드시 세미콜론을 붙여야 합니다.<br>mysql은 명령이 끝나면 <code>;</code>를 붙여야 합니다.<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql&gt;select version(); select now();</div></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">+-----------------+</div><div class="line">| version()       |</div><div class="line">+-----------------+</div><div class="line">| 5.5.57-0+deb8u1 |</div><div class="line">+-----------------+</div><div class="line">1 row in set (0.00 sec)</div><div class="line"></div><div class="line">+---------------------+</div><div class="line">| now()               |</div><div class="line">+---------------------+</div><div class="line">| 2017-12-08 14:30:48 |</div><div class="line">+---------------------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure><h3 id="쿼리를-여러줄에-입력할-수도-있습니다"><a href="#쿼리를-여러줄에-입력할-수도-있습니다" class="headerlink" title="쿼리를 여러줄에 입력할 수도 있습니다."></a>쿼리를 여러줄에 입력할 수도 있습니다.</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">mysql&gt; SELECT</div><div class="line">    -&gt; USER()</div><div class="line">    -&gt; ,</div><div class="line">    -&gt; CURRENT_DATE;</div><div class="line">+<span class="comment">---------------+--------------+</span></div><div class="line">| USER()        | CURRENT_DATE |</div><div class="line">+<span class="comment">---------------+--------------+</span></div><div class="line">| jon@localhost | 2010-08-06   |</div><div class="line">+<span class="comment">---------------+--------------+</span></div></pre></td></tr></table></figure><h3 id="쿼리를-입력하다-취소-하려면-c를-입력하세요"><a href="#쿼리를-입력하다-취소-하려면-c를-입력하세요" class="headerlink" title="쿼리를 입력하다 취소 하려면 \c를 입력하세요."></a>쿼리를 입력하다 취소 하려면 <code>\c</code>를 입력하세요.</h3><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">mysql&gt; SELECT</div><div class="line">    -&gt; USER()</div><div class="line">    -&gt; \c</div><div class="line">mysql&gt;</div></pre></td></tr></table></figure><table><thead><tr><th>프롬프트</th><th>의미</th></tr></thead><tbody><tr><td>mysql&gt;</td><td>새 쿼리 준비</td></tr><tr><td><code>-&gt;</code></td><td>다음 줄의 여러 줄 쿼리 대기 중</td></tr><tr><td><code>&#39;&gt;</code></td><td>다음 줄을 기다리며 작은 따옴표 (‘)로 시작하는 문자열의 완성을 기다리고 있습니다.</td></tr><tr><td><code>&quot;&gt;</code></td><td>다음 줄을 기다리면서 큰 따옴표 (“)로 시작하는 문자열의 완성을 기다리고 있습니다.</td></tr><tr><td>&#96;&gt;</td><td>다음 줄을 기다리면서 역 따옴표 (&#96;)로 시작하는 식별자의 완성을 기다리고 있습니다.</td></tr><tr><td><code>/*</code>&gt;</td><td>다음 줄을 기다리고, (/*)으로 시작하는 주석 완성을 기다리고 있습니다.</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;쿼리입력하기&quot;&gt;&lt;a href=&quot;#쿼리입력하기&quot; class=&quot;headerlink&quot; title=&quot;쿼리입력하기&quot;&gt;&lt;/a&gt;쿼리입력하기&lt;/h3&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;
      
    
    </summary>
    
      <category term="Mysql" scheme="http://korcow.github.io/categories/Mysql/"/>
    
    
  </entry>
  
  <entry>
    <title>마크다운 특수문자</title>
    <link href="http://korcow.github.io/2017/12/08/markdwon-%ED%8A%B9%EC%88%98%EB%AC%B8%EC%9E%90/"/>
    <id>http://korcow.github.io/2017/12/08/markdwon-특수문자/</id>
    <published>2017-12-08T14:03:16.359Z</published>
    <updated>2017-12-08T14:03:16.359Z</updated>
    
    <content type="html"><![CDATA[<h3 id="특수문자"><a href="#특수문자" class="headerlink" title="특수문자"></a>특수문자</h3><p><a href="https://www.ascii.cl/htmlcodes.htm" target="_blank" rel="external">html code table</a><br>마크다운 사용시 특수문자 표시 안될경우 html code를 사용.</p><p>&#96;  : <code>&amp;#96;</code> grave accent or backtick</p><table><thead><tr><th>Dec</th><th>Hex</th><th>Symbol</th><th>Html Number</th><th>Html Name</th><th>Text</th></tr></thead><tbody><tr><td>32</td><td>20</td><td></td><td><code>&amp;#32;</code></td><td></td><td>space</td></tr><tr><td>33</td><td>21</td><td>!</td><td><code>&amp;#33;</code></td><td><code>&amp;quot;</code></td><td>exclamation point</td></tr><tr><td>34</td><td>22</td><td>“</td><td><code>&amp;#34;</code></td><td></td><td>double quotes</td></tr><tr><td>35</td><td>23</td><td>#</td><td><code>&amp;#35;</code></td><td></td><td>number sign</td></tr><tr><td>36</td><td>24</td><td><code>$</code></td><td><code>&amp;#36;</code></td><td></td><td>dollar sign</td></tr><tr><td>37</td><td>25</td><td>%</td><td><code>&amp;#37;</code></td><td><code>&amp;amp;</code></td><td>percent sign</td></tr><tr><td>38</td><td>26</td><td>&amp;</td><td><code>&amp;#38;</code></td><td></td><td>ampersand</td></tr><tr><td>39</td><td>27</td><td>‘</td><td><code>&amp;#39;</code></td><td></td><td>single quote</td></tr><tr><td>40</td><td>28</td><td>(</td><td><code>&amp;#40;</code></td><td></td><td>opening parenthesis</td></tr><tr><td>41</td><td>29</td><td>)</td><td><code>&amp;#41;</code></td><td></td><td>closing parenthesis</td></tr><tr><td>42</td><td>2A</td><td>*</td><td><code>&amp;#42;</code></td><td></td><td>asterisk</td></tr><tr><td>43</td><td>2B</td><td>+</td><td><code>&amp;#43;</code></td><td></td><td>plus sign</td></tr><tr><td>44</td><td>2C</td><td>,</td><td><code>&amp;#44;</code></td><td></td><td>comma</td></tr><tr><td>45</td><td>2D</td><td>-</td><td><code>&amp;#45;</code></td><td></td><td>minus sign - hyphen</td></tr><tr><td>46</td><td>2E</td><td>.</td><td><code>&amp;#46;</code></td><td></td><td>period</td></tr><tr><td>47</td><td>2F</td><td>/</td><td><code>&amp;#47;</code></td><td></td><td>slash</td></tr><tr><td>96</td><td>60</td><td>&#96;</td><td><code>&amp;#96;</code></td><td></td><td>grave accent</td></tr><tr><td>8211</td><td>2013</td><td>–</td><td><code>&amp;#8211;</code></td><td></td><td>en dash</td></tr><tr><td>8212</td><td>2014</td><td>—</td><td><code>&amp;#8212;</code></td><td></td><td>em dash</td></tr><tr><td>8216</td><td>2018</td><td>‘</td><td><code>&amp;#8216;</code></td><td></td><td>left single quotation mark</td></tr><tr><td>8217</td><td>2019</td><td>’</td><td><code>&amp;#8217;</code></td><td></td><td>right single quotation mark</td></tr><tr><td>8218</td><td>201A</td><td>‚</td><td><code>&amp;#8218;</code></td><td></td><td>single low-9 quotation mark</td></tr><tr><td>8220</td><td>201C</td><td>“</td><td><code>&amp;#8220;</code></td><td></td><td>left double quotation mark</td></tr><tr><td>8221</td><td>201D</td><td>”</td><td><code>&amp;#8221;</code></td><td></td><td>right double quotation mark</td></tr><tr><td>8222</td><td>201E</td><td>„</td><td><code>&amp;#8222;</code></td><td></td><td>double low-9 quotation mark</td></tr><tr><td>8224</td><td>2020</td><td>†</td><td><code>&amp;#8224;</code></td><td></td><td>dagger</td></tr><tr><td>8225</td><td>2021</td><td>‡</td><td><code>&amp;#8225;</code></td><td></td><td>double dagger</td></tr><tr><td>8226</td><td>2022</td><td>•</td><td><code>&amp;#8226;</code></td><td></td><td>bullet</td></tr><tr><td>8230</td><td>2026</td><td>…</td><td><code>&amp;#8230;</code></td><td></td><td>horizontal ellipsis</td></tr><tr><td>8240</td><td>2030</td><td>‰</td><td><code>&amp;#8240;</code></td><td></td><td>per thousand sign</td></tr><tr><td>8364</td><td>20AC</td><td>€</td><td><code>&amp;#8364;</code></td><td><code>&amp;euro;</code></td><td>euro sign</td></tr><tr><td>8482</td><td>2122</td><td>™</td><td><code>&amp;#8482;</code></td><td></td><td>trade mark sign</td></tr><tr><td>180</td><td>B4</td><td>´</td><td><code>&amp;#180;</code></td><td><code>&amp;acute;</code></td><td>acute accent - spacing acute</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;특수문자&quot;&gt;&lt;a href=&quot;#특수문자&quot; class=&quot;headerlink&quot; title=&quot;특수문자&quot;&gt;&lt;/a&gt;특수문자&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://www.ascii.cl/htmlcodes.htm&quot; target=&quot;_blank&quot; r
      
    
    </summary>
    
      <category term="markdown" scheme="http://korcow.github.io/categories/markdown/"/>
    
    
  </entry>
  
  <entry>
    <title>정보기능 함수</title>
    <link href="http://korcow.github.io/2017/12/08/mysql-%EC%A0%95%EB%B3%B4%EA%B8%B0%EB%8A%A5%ED%95%A8%EC%88%98/"/>
    <id>http://korcow.github.io/2017/12/08/mysql-정보기능함수/</id>
    <published>2017-12-08T05:03:13.603Z</published>
    <updated>2017-12-08T05:03:13.603Z</updated>
    
    <content type="html"><![CDATA[<h3 id="정보-기능"><a href="#정보-기능" class="headerlink" title="정보 기능"></a>정보 기능</h3><p><a href="https://dev.mysql.com/doc/refman/5.7/en/information-functions.html" target="_blank" rel="external">정보 기능 함수</a></p><table><thead><tr><th>이름</th><th>기술</th></tr></thead><tbody><tr><td>BENCHMARK()</td><td>표현식을 반복적으로 실행</td></tr><tr><td>CHARSET()</td><td>인수의 캐릭터 세트를 돌려줍니다.</td></tr><tr><td>COERCIBILITY()</td><td>문자열 인수의 조합 강제력 값을 반환합니다.</td></tr><tr><td>COLLATION()</td><td>캐릭터 라인 인수의 조합을 돌려줍니다.</td></tr><tr><td>CONNECTION_ID()</td><td>접속의 접속 ID (thread ID)를 돌려줍니다.</td></tr><tr><td>CURRENT_USER(), CURRENT_USER</td><td>인증 된 사용자 이름 및 호스트 이름</td></tr><tr><td>DATABASE()</td><td>기본 (현재) 데이터베이스 이름을 반환합니다.</td></tr><tr><td>FOUND_ROWS()</td><td>LIMIT 절이있는 SELECT의 경우 반환되는 행 수에는 LIMIT 절이 없었습니다</td></tr><tr><td>LAST_INSERT_ID()</td><td>마지막 INSERT에 대한 AUTOINCREMENT 열의 값</td></tr><tr><td>ROW_COUNT()</td><td>업데이트 된 행 수</td></tr><tr><td>SCHEMA()</td><td>DATABASE ()의 동의어</td></tr><tr><td>SESSION_USER()</td><td>USER () 동의어</td></tr><tr><td>SYSTEM_USER()</td><td>USER () 동의어</td></tr><tr><td>USER()</td><td>클라이언트가 제공 한 사용자 이름과 호스트 이름</td></tr><tr><td>VERSION()</td><td>MySQL 서버 버전을 나타내는 문자열을 반환합니다.</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;정보-기능&quot;&gt;&lt;a href=&quot;#정보-기능&quot; class=&quot;headerlink&quot; title=&quot;정보 기능&quot;&gt;&lt;/a&gt;정보 기능&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/informati
      
    
    </summary>
    
      <category term="Mysql" scheme="http://korcow.github.io/categories/Mysql/"/>
    
    
  </entry>
  
  <entry>
    <title>날짜 및 시간함수</title>
    <link href="http://korcow.github.io/2017/12/08/mysql-%EB%82%A0%EC%A7%9C%EB%B0%8F%EC%8B%9C%EA%B0%84%ED%95%A8%EC%88%98/"/>
    <id>http://korcow.github.io/2017/12/08/mysql-날짜및시간함수/</id>
    <published>2017-12-08T04:57:26.897Z</published>
    <updated>2017-12-08T04:57:26.897Z</updated>
    
    <content type="html"><![CDATA[<h3 id="날짜와-시간-함수"><a href="#날짜와-시간-함수" class="headerlink" title="날짜와 시간 함수"></a>날짜와 시간 함수</h3><p><a href="https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html" target="_blank" rel="external">날짜와 시간함수</a><br>이 섹션에서는 시간 값을 조작하는 데 사용할 수있는 함수에 대해 설명합니다. 각 날짜와 시간 유형에있는 값 범위와 값을 지정할 수있는 유효한 형식에 대한 설명은 11.3 절, “날짜와 시간 유형”을 참조하십시오 .</p><table><thead><tr><th>이름</th><th>기술</th></tr></thead><tbody><tr><td>ADDDATE()</td><td>날짜 값에 시간 값 (간격) 추가</td></tr><tr><td>ADDTIME()</td><td>시간 추가</td></tr><tr><td>CONVERT_TZ()</td><td>한 시간대에서 다른 시간대로 변환</td></tr><tr><td>CURDATE()</td><td>현재 날짜를 반환합니다.</td></tr><tr><td>CURRENT_DATE(), CURRENT_DATE</td><td>CURDATE ()의 동의어</td></tr><tr><td>CURRENT_TIME(), CURRENT_TIME</td><td>CURTIME ()의 동의어</td></tr><tr><td>CURRENT_TIMESTAMP(), CURRENT_TIMESTAMP</td><td>NOW ()의 동의어</td></tr><tr><td>CURTIME()</td><td>현재 시간 반환</td></tr><tr><td>DATE()</td><td>날짜 또는 datetime 식의 날짜 부분 추출</td></tr><tr><td>DATE_ADD()</td><td>날짜 값에 시간 값 (간격) 추가</td></tr><tr><td>DATE_FORMAT()</td><td>지정된 날짜 형식</td></tr><tr><td>DATE_SUB()</td><td>날짜에서 시간 값 (간격)을 뺍니다.</td></tr><tr><td>DATEDIFF()</td><td>두 날짜 빼기</td></tr><tr><td>DAY()</td><td>DAYOFMONTH ()의 동의어</td></tr><tr><td>DAYNAME()</td><td>평일의 이름을 반환합니다.</td></tr><tr><td>DAYOFMONTH()</td><td>그 달의 일 반환 (0-31)</td></tr><tr><td>DAYOFWEEK()</td><td>인수의 요일 색인을 반환합니다.</td></tr><tr><td>DAYOFYEAR()</td><td>요일 반환 (1-366)</td></tr><tr><td>EXTRACT()</td><td>날짜의 일부 추출</td></tr><tr><td>FROM_DAYS()</td><td>일자 번호를 날짜로 변환하십시오.</td></tr><tr><td>FROM_UNIXTIME()</td><td>유닉스 타임 스탬프를 날짜로 표시</td></tr><tr><td>GET_FORMAT()</td><td>날짜 형식 문자열 반환</td></tr><tr><td>HOUR()</td><td>시간 추출</td></tr><tr><td>LAST_DAY</td><td>인수의 달의 마지막 날을 반환합니다.</td></tr><tr><td>LOCALTIME(), LOCALTIME</td><td>NOW ()의 동의어</td></tr><tr><td>LOCALTIMESTAMP, LOCALTIMESTAMP()</td><td>NOW ()의 동의어</td></tr><tr><td>MAKEDATE()</td><td>년과 년의 날짜 만들기</td></tr><tr><td>MAKETIME()</td><td>시간, 분, 초에서 시간 생성</td></tr><tr><td>MICROSECOND()</td><td>인수에서 마이크로 초를 반환합니다.</td></tr><tr><td>MINUTE()</td><td>인수에서 분 반환</td></tr><tr><td>MONTH()</td><td>전달 된 날짜로부터 해당 달 반환</td></tr><tr><td>MONTHNAME()</td><td>그 달의 이름을 반환하십시오.</td></tr><tr><td>NOW()</td><td>현재 날짜와 시간을 반환합니다.</td></tr><tr><td>PERIOD_ADD()</td><td>한 달에서 한 달 추가</td></tr><tr><td>PERIOD_DIFF()</td><td>마침표 사이의 개월 수 반환</td></tr><tr><td>QUARTER()</td><td>날짜 인수에서 쿼터를 반환합니다.</td></tr><tr><td>SEC_TO_TIME()</td><td>초를 ‘HH : MM : SS’형식으로 변환합니다.</td></tr><tr><td>SECOND()</td><td>두 번째 (0-59)</td></tr><tr><td>STR_TO_DATE()</td><td>문자열을 날짜로 변환</td></tr><tr><td>SUBDATE()</td><td>세 개의 인수로 호출 할 때 DATE_SUB ()의 동의어</td></tr><tr><td>SUBTIME()</td><td>시간 빼기</td></tr><tr><td>SYSDATE()</td><td>함수가 실행되는 시간을 반환합니다.</td></tr><tr><td>TIME()</td><td>전달 된 표현식의 시간 부분을 추출합니다.</td></tr><tr><td>TIME_FORMAT()</td><td>시간 형식</td></tr><tr><td>TIME_TO_SEC()</td><td>인수가 초로 변환 된 것을 반환합니다.</td></tr><tr><td>TIMEDIFF()</td><td>시간 빼기</td></tr><tr><td>TIMESTAMP()</td><td>인수가 하나 인 경우이 함수는 날짜 또는 datetime 식을 반환합니다. 두 개의 인수, 인수의 합계</td></tr><tr><td>TIMESTAMPADD()</td><td>날짜 시간 표현식에 간격 추가</td></tr><tr><td>TIMESTAMPDIFF()</td><td>datetime 표현식에서 간격 빼기</td></tr><tr><td>TO_DAYS()</td><td>요일로 변환 된 날짜 인수를 반환합니다.</td></tr><tr><td>TO_SECONDS()</td><td>연도 0부터 초로 변환 된 날짜 또는 datetime 인수를 반환합니다.</td></tr><tr><td>UNIX_TIMESTAMP()</td><td>Unix 타임 스탬프 반환</td></tr><tr><td>UTC_DATE()</td><td>현재의 UTC 날짜를 반환합니다.</td></tr><tr><td>UTC_TIME()</td><td>현재의 UTC 시간을 반환합니다.</td></tr><tr><td>UTC_TIMESTAMP()</td><td>현재의 UTC 날짜와 시간을 반환합니다.</td></tr><tr><td>WEEK()</td><td>주 번호를 반환하십시오.</td></tr><tr><td>WEEKDAY()</td><td>평일 색인 반환</td></tr><tr><td>WEEKOFYEAR()</td><td>달력 주 날짜를 반환합니다 (1-53).</td></tr><tr><td>YEAR()</td><td>연중 무휴</td></tr><tr><td>YEARWEEK()</td><td>연도와 주를 반환하십시오.</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;날짜와-시간-함수&quot;&gt;&lt;a href=&quot;#날짜와-시간-함수&quot; class=&quot;headerlink&quot; title=&quot;날짜와 시간 함수&quot;&gt;&lt;/a&gt;날짜와 시간 함수&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://dev.mysql.com/doc/refman/
      
    
    </summary>
    
      <category term="Mysql" scheme="http://korcow.github.io/categories/Mysql/"/>
    
    
  </entry>
  
  <entry>
    <title>수치함수 와 연산자</title>
    <link href="http://korcow.github.io/2017/12/08/mysql-%EC%88%98%EC%B9%98%ED%95%A8%EC%88%98/"/>
    <id>http://korcow.github.io/2017/12/08/mysql-수치함수/</id>
    <published>2017-12-08T04:52:19.426Z</published>
    <updated>2017-12-08T04:52:19.426Z</updated>
    
    <content type="html"><![CDATA[<h3 id="ContentInput"><a href="#ContentInput" class="headerlink" title="ContentInput"></a>ContentInput</h3><p><a href="https://dev.mysql.com/doc/refman/5.7/en/numeric-functions.html" target="_blank" rel="external">12.6 수치 함수와 연산자</a><br>12.6.1 산술 연산자<br>12.6.2 수학 함수</p><table><thead><tr><th>이름</th><th>기술</th></tr></thead><tbody><tr><td>ABS()</td><td>절대 값 반환</td></tr><tr><td>ACOS()</td><td>아크 코사인 반환</td></tr><tr><td>ASIN()</td><td>아크 사인 반환</td></tr><tr><td>ATAN()</td><td>아크 탄젠트를 반환합니다.</td></tr><tr><td>ATAN2(), ATAN()</td><td>두 인수의 아크 탄젠트를 반환합니다.</td></tr><tr><td>CEIL()</td><td>인수보다 작지 않은 가장 작은 정수 값을 반환합니다.</td></tr><tr><td>CEILING()</td><td>인수보다 작지 않은 가장 작은 정수 값을 반환합니다.</td></tr><tr><td>CONV()</td><td>서로 다른 숫자 사이의 숫자 변환</td></tr><tr><td>COS()</td><td>코사인을 반환합니다.</td></tr><tr><td>COT()</td><td>코탄 센트를 반환하십시오.</td></tr><tr><td>CRC32()</td><td>순환 중복 검사 값 계산</td></tr><tr><td>DEGREES()</td><td>라디안을도 단위로 변환하십시오.</td></tr><tr><td>DIV</td><td>정수 부</td></tr><tr><td><code>/</code></td><td>분할 연산자</td></tr><tr><td>EXP()</td><td>의 힘을 키우다</td></tr><tr><td>FLOOR()</td><td>인수보다 크지 않은 가장 큰 정수 값을 반환합니다.</td></tr><tr><td>LN()</td><td>인수의 자연 로그를 반환합니다.</td></tr><tr><td>LOG()</td><td>첫 번째 인수의 자연 로그를 반환합니다.</td></tr><tr><td>LOG10()</td><td>인수의 기본 10 로그를 반환합니다.</td></tr><tr><td>LOG2()</td><td>인수의 기본 2 로그를 반환합니다.</td></tr><tr><td><code>-</code></td><td>마이너스 연산자</td></tr><tr><td>MOD()</td><td>나머지를 돌려 준다.</td></tr><tr><td><code>%</code>, MOD</td><td>모듈러스 연산자</td></tr><tr><td>PI()</td><td>파이의 값을 돌려 준다.</td></tr><tr><td><code>+</code></td><td>더하기 연산자</td></tr><tr><td>POW()</td><td>지정된 인수로 설정된 인수를 리턴합니다.</td></tr><tr><td>POWER()</td><td>지정된 인수로 설정된 인수를 리턴합니다.</td></tr><tr><td>RADIANS()</td><td>라디안으로 변환 된 반환 인수</td></tr><tr><td>RAND()</td><td>임의의 부동 소수점 값 반환</td></tr><tr><td>ROUND()</td><td>인수 라운드</td></tr><tr><td>SIGN()</td><td>인수의 부호를 돌려 준다.</td></tr><tr><td>SIN()</td><td>인수의 사인을 돌려 준다.</td></tr><tr><td>SQRT()</td><td>인수의 제곱근을 반환합니다.</td></tr><tr><td>TAN()</td><td>인수의 탄젠트를 반환합니다.</td></tr><tr><td><code>*</code></td><td>곱셈 연산자</td></tr><tr><td>TRUNCATE()</td><td>소수점 이하 자릿수로 자릅니다.</td></tr><tr><td><code>-</code></td><td>인수의 부호 변경</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;ContentInput&quot;&gt;&lt;a href=&quot;#ContentInput&quot; class=&quot;headerlink&quot; title=&quot;ContentInput&quot;&gt;&lt;/a&gt;ContentInput&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://dev.mysql.com
      
    
    </summary>
    
      <category term="Mysql" scheme="http://korcow.github.io/categories/Mysql/"/>
    
    
  </entry>
  
  <entry>
    <title>문자열함수</title>
    <link href="http://korcow.github.io/2017/12/08/mysql-%EB%AC%B8%EC%9E%90%EC%97%B4%ED%95%A8%EC%88%98/"/>
    <id>http://korcow.github.io/2017/12/08/mysql-문자열함수/</id>
    <published>2017-12-08T04:47:39.988Z</published>
    <updated>2017-12-08T04:47:39.989Z</updated>
    
    <content type="html"><![CDATA[<h3 id="문자열-함수"><a href="#문자열-함수" class="headerlink" title="문자열 함수"></a>문자열 함수</h3><p><a href="&quot;https://dev.mysql.com/doc/refman/5.7/en/string-functions.html&quot;">12.5 문자열 함수</a><br>12.5.1 문자열 비교 함수<br>12.5.2 정규 표현식<br>12.5.3 함수 결과의 문자 집합 및 데이터 정렬</p><table><thead><tr><th>이름</th><th>기술</th></tr></thead><tbody><tr><td>ASCII()</td><td>맨 왼쪽 문자의 숫자 값을 반환합니다.</td></tr><tr><td>BIN()</td><td>숫자의 2 진 표현을 포함하는 문자열을 반환합니다.</td></tr><tr><td>BIT_LENGTH()</td><td>인자의 길이를 비트 단위로 반환</td></tr><tr><td>CHAR()</td><td>전달 된 각 정수에 대한 문자를 반환합니다.</td></tr><tr><td>CHAR_LENGTH()</td><td>인수의 문자 수를 반환합니다.</td></tr><tr><td>CHARACTER_LENGTH()</td><td>CHAR_LENGTH ()의 동의어</td></tr><tr><td>CONCAT()</td><td>연결된 문자열 반환</td></tr><tr><td>CONCAT_WS()</td><td>구분 기호로 연결 문자열 반환</td></tr><tr><td>ELT()</td><td>인덱스 번호의 문자열 반환</td></tr><tr><td>EXPORT_SET()</td><td>값 비트에 설정된 모든 비트에 대해 on 문자열을 가져오고 모든 unset 비트에 대해 off 문자열을 가져 오는 문자열을 반환합니다.</td></tr><tr><td>FIELD()</td><td>후속 인수의 최초의 인수의 인덱스 (위치)를 돌려줍니다.</td></tr><tr><td>FIND_IN_SET()</td><td>2 번째의 인수의 최초의 인수의 인덱스 위치를 돌려줍니다.</td></tr><tr><td>FORMAT()</td><td>지정된 소수 자릿수로 포맷 된 숫자를 반환합니다.</td></tr><tr><td>FROM_BASE64()</td><td>64 진수 문자열로 디코드하고 결과를 반환합니다.</td></tr><tr><td>HEX()</td><td>십진수 또는 문자열 값의 16 진수 표현을 반환합니다.</td></tr><tr><td>INSERT()</td><td>지정된 위치에 지정된 문자 수까지 부분 문자열을 삽입하십시오.</td></tr><tr><td>INSTR()</td><td>최초의 substring의 인덱스를 돌려줍니다.</td></tr><tr><td>LCASE()</td><td>LOWER ()의 동의어</td></tr><tr><td>LEFT()</td><td>지정된 최대 수의 문자를 반환합니다.</td></tr><tr><td>LENGTH()</td><td>캐릭터 라인의 길이를 바이트 단위로 돌려줍니다.</td></tr><tr><td>LIKE</td><td>단순한 패턴 매칭</td></tr><tr><td>LOAD_FILE()</td><td>명명 된 파일로드</td></tr><tr><td>LOCATE()</td><td>부분 문자열의 첫 번째 위치의 위치를 반환합니다.</td></tr><tr><td>LOWER()</td><td>인수를 소문자로 반환하십시오.</td></tr><tr><td>LPAD()</td><td>지정된 캐릭터 라인을 사용해 왼쪽으로 패딩 된 캐릭터 라인 인수를 돌려줍니다.</td></tr><tr><td>LTRIM()</td><td>선행 공백 제거</td></tr><tr><td>MAKE_SET()</td><td>해당 비트가 비트 단위로 설정된 쉼표로 구분 된 문자열 집합을 반환합니다.</td></tr><tr><td>MATCH</td><td>전체 텍스트 검색 수행</td></tr><tr><td>MID()</td><td>지정된 위치로부터 시작되는 부분 캐릭터 라인을 돌려줍니다.</td></tr><tr><td>NOT LIKE</td><td>간단한 패턴 매칭 부정</td></tr><tr><td>NOT REGEXP</td><td>REGEXP의 부정</td></tr><tr><td>OCT()</td><td>숫자의 8 진수 표현을 포함하는 문자열을 반환합니다.</td></tr><tr><td>OCTET_LENGTH()</td><td>LENGTH ()의 동의어</td></tr><tr><td>ORD()</td><td>인수의 가장 왼쪽 문자에 대한 문자 코드를 반환합니다.</td></tr><tr><td>POSITION()</td><td>LOCATE ()의 동의어</td></tr><tr><td>QUOTE()</td><td>SQL 문에서 사용할 인수 탈출</td></tr><tr><td>REGEXP</td><td>문자열이 정규 표현식과 일치하는지 여부</td></tr><tr><td>REPEAT()</td><td>지정된 횟수만큼 문자열 반복</td></tr><tr><td>REPLACE()</td><td>지정된 문자열의 발생 바꾸기</td></tr><tr><td>REVERSE()</td><td>문자열의 문자를 반대로합니다.</td></tr><tr><td>RIGHT()</td><td>지정된 가장 오른쪽의 문자 수를 돌려줍니다.</td></tr><tr><td>RLIKE</td><td>REGEXP에 대한 동의어</td></tr><tr><td>RPAD()</td><td>지정한 횟수만큼 문자열 추가</td></tr><tr><td>RTRIM()</td><td>후행 공백 제거</td></tr><tr><td>SOUNDEX()</td><td>soundex 문자열을 반환합니다.</td></tr><tr><td>SOUNDS LIKE</td><td>소리 비교</td></tr><tr><td>SPACE()</td><td>지정된 갯수의 공백을 반환</td></tr><tr><td>STRCMP()</td><td>두 문자열 비교</td></tr><tr><td>SUBSTR()</td><td>지정된대로 부분 문자열을 반환합니다.</td></tr><tr><td>SUBSTRING()</td><td>지정된대로 부분 문자열을 반환합니다.</td></tr><tr><td>SUBSTRING_INDEX()</td><td>delimiter가 지정된 횟수만큼 나오기 전에 문자열에서 부분 문자열을 반환합니다.</td></tr><tr><td>TO_BASE64()</td><td>base-64 문자열로 변환 된 인수를 반환합니다.</td></tr><tr><td>TRIM()</td><td>선행 및 후행 공백 제거</td></tr><tr><td>UCASE()</td><td>UPPER ()의 동의어</td></tr><tr><td>UNHEX()</td><td>숫자의 16 진수 표현을 포함하는 문자열을 반환합니다.</td></tr><tr><td>UPPER()</td><td>대문자로 변환</td></tr><tr><td>WEIGHT_STRING()</td><td>문자열에 대한 가중치 문자열을 반환합니다.</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;문자열-함수&quot;&gt;&lt;a href=&quot;#문자열-함수&quot; class=&quot;headerlink&quot; title=&quot;문자열 함수&quot;&gt;&lt;/a&gt;문자열 함수&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;&amp;quot;https://dev.mysql.com/doc/refman/5.7/en
      
    
    </summary>
    
      <category term="Mysql" scheme="http://korcow.github.io/categories/Mysql/"/>
    
    
  </entry>
  
  <entry>
    <title>사용자 및 database 생성</title>
    <link href="http://korcow.github.io/2017/12/07/mysql-%EC%82%AC%EC%9A%A9%EC%9E%90%EB%B0%8Fdb%EC%83%9D%EC%84%B1/"/>
    <id>http://korcow.github.io/2017/12/07/mysql-사용자및db생성/</id>
    <published>2017-12-07T09:48:18.014Z</published>
    <updated>2017-12-07T09:48:18.014Z</updated>
    
    <content type="html"><![CDATA[<h3 id="데이타베이스-생성"><a href="#데이타베이스-생성" class="headerlink" title="데이타베이스 생성"></a>데이타베이스 생성</h3><h5 id="기본구문"><a href="#기본구문" class="headerlink" title="기본구문"></a>기본구문</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">CREATE</span> &#123;<span class="keyword">DATABASE</span> | <span class="keyword">SCHEMA</span>&#125; [<span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span>] db_name</div><div class="line">    [create_specification] ...</div><div class="line"></div><div class="line">create_specification:</div><div class="line">    [<span class="keyword">DEFAULT</span>] <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> [=] charset_name</div><div class="line">  | [<span class="keyword">DEFAULT</span>] <span class="keyword">COLLATE</span> [=] collation_name</div></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">show</span> <span class="keyword">databases</span>;</div><div class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> dbname <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin;</div></pre></td></tr></table></figure><h3 id="사용자-생성"><a href="#사용자-생성" class="headerlink" title="사용자 생성"></a>사용자 생성</h3><p>mysql 5.7 이상은 Create User 구문 사용<br>MySQL 5.7 이상</p><h4 id="기본구문-1"><a href="#기본구문-1" class="headerlink" title="기본구문"></a>기본구문</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> [<span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span>]</div><div class="line">    <span class="keyword">user</span> [auth_option] [, <span class="keyword">user</span> [auth_option]] ...</div><div class="line">    [REQUIRE &#123;<span class="keyword">NONE</span> | tls_option [[<span class="keyword">AND</span>] tls_option] ...&#125;]</div><div class="line">    [<span class="keyword">WITH</span> resource_option [resource_option] ...]</div><div class="line">    [password_option | lock_option] ...</div><div class="line"></div><div class="line">auth_option: &#123;</div><div class="line">    <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'auth_string'</span></div><div class="line">  | <span class="keyword">IDENTIFIED</span> <span class="keyword">WITH</span> auth_plugin</div><div class="line">  | <span class="keyword">IDENTIFIED</span> <span class="keyword">WITH</span> auth_plugin <span class="keyword">BY</span> <span class="string">'auth_string'</span></div><div class="line">  | <span class="keyword">IDENTIFIED</span> <span class="keyword">WITH</span> auth_plugin <span class="keyword">AS</span> <span class="string">'hash_string'</span></div><div class="line">  | <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="keyword">PASSWORD</span> <span class="string">'hash_string'</span></div><div class="line">&#125;</div><div class="line"></div><div class="line">tls_option: &#123;</div><div class="line">   SSL</div><div class="line"> | X509</div><div class="line"> | CIPHER <span class="string">'cipher'</span></div><div class="line"> | ISSUER <span class="string">'issuer'</span></div><div class="line"> | SUBJECT <span class="string">'subject'</span></div><div class="line">&#125;</div><div class="line"></div><div class="line">resource_option: &#123;</div><div class="line">    MAX_QUERIES_PER_HOUR <span class="keyword">count</span></div><div class="line">  | MAX_UPDATES_PER_HOUR <span class="keyword">count</span></div><div class="line">  | MAX_CONNECTIONS_PER_HOUR <span class="keyword">count</span></div><div class="line">  | MAX_USER_CONNECTIONS <span class="keyword">count</span></div><div class="line">&#125;</div><div class="line"></div><div class="line">password_option: &#123;</div><div class="line">    <span class="keyword">PASSWORD</span> <span class="keyword">EXPIRE</span></div><div class="line">  | <span class="keyword">PASSWORD</span> <span class="keyword">EXPIRE</span> <span class="keyword">DEFAULT</span></div><div class="line">  | <span class="keyword">PASSWORD</span> <span class="keyword">EXPIRE</span> <span class="keyword">NEVER</span></div><div class="line">  | <span class="keyword">PASSWORD</span> <span class="keyword">EXPIRE</span> <span class="built_in">INTERVAL</span> N <span class="keyword">DAY</span></div><div class="line">&#125;</div><div class="line"></div><div class="line">lock_option: &#123;</div><div class="line">    <span class="keyword">ACCOUNT</span> <span class="keyword">LOCK</span></div><div class="line">  | <span class="keyword">ACCOUNT</span> <span class="keyword">UNLOCK</span></div><div class="line">&#125;</div></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"># 생성과 동시에 기간만료, 사용자가 서버에 처음 연결할 때 비밀번호를 선택</div><div class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">'jeffrey'</span>@<span class="string">'localhost'</span></div><div class="line">  <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'new_password'</span> <span class="keyword">PASSWORD</span> <span class="keyword">EXPIRE</span>;</div><div class="line"></div><div class="line"># 암호와 방식과 만료일자 지정</div><div class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">'jeffrey'</span>@<span class="string">'localhost'</span></div><div class="line">  <span class="keyword">IDENTIFIED</span> <span class="keyword">WITH</span> sha256_password <span class="keyword">BY</span> <span class="string">'new_password'</span></div><div class="line">  <span class="keyword">PASSWORD</span> <span class="keyword">EXPIRE</span> <span class="built_in">INTERVAL</span> <span class="number">180</span> <span class="keyword">DAY</span>;</div><div class="line"></div><div class="line"># 암호를 일반 텍스트로 지정하면, 기본 플러그인이 사용됨.</div><div class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">'jeffrey'</span>@<span class="string">'localhost'</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'password'</span>;</div></pre></td></tr></table></figure><p>IDENTIFIED BY PASSWORD 구문은 더 이상 사용되지 않으며 향후 MySQL 릴리스에서 제거예정</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">'userid'</span>@<span class="string">'localhost'</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'secret'</span> <span class="keyword">PASSWORD</span> <span class="keyword">EXPIRE</span> <span class="keyword">NEVER</span>;</div><div class="line"><span class="keyword">GRANT</span> ALL <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> database.* <span class="keyword">TO</span> <span class="string">'userid'</span>@<span class="string">'localhost'</span>;</div><div class="line"></div><div class="line"><span class="keyword">flush</span> <span class="keyword">privileges</span>;</div></pre></td></tr></table></figure><p>MySQL 5.7 미만<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">GRANT</span> ALL <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> database.* <span class="keyword">TO</span> <span class="string">'userid'</span>@<span class="string">'localhost'</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'secret'</span>;</div><div class="line"></div><div class="line"><span class="keyword">flush</span> <span class="keyword">privileges</span>;</div></pre></td></tr></table></figure></p><p>MySQL 암호 변경<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SET</span> <span class="keyword">PASSWORD</span> 사용</div><div class="line"><span class="keyword">SET</span> <span class="keyword">PASSWORD</span> [<span class="keyword">FOR</span> <span class="keyword">user</span>] = password_option</div><div class="line"></div><div class="line">password_option: &#123;</div><div class="line">    <span class="string">'auth_string'</span></div><div class="line">  | <span class="keyword">PASSWORD</span>(<span class="string">'auth_string'</span>)</div><div class="line">&#125;</div><div class="line"><span class="keyword">SET</span> <span class="keyword">PASSWORD</span> <span class="keyword">FOR</span> <span class="string">'userid'</span>@<span class="string">'localhost'</span> = <span class="string">'secret'</span>;</div><div class="line"></div><div class="line"><span class="keyword">Alter</span> <span class="keyword">user</span> 사용</div><div class="line"><span class="keyword">alter</span> <span class="keyword">USER</span> <span class="string">'userid'</span>@<span class="string">'localhost'</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'secret'</span> <span class="keyword">PASSWORD</span> <span class="keyword">EXPIRE</span> <span class="keyword">NEVER</span>;</div></pre></td></tr></table></figure></p><p>MySQL password policy 변경<br>5.7부터는 암호화 방식이 바뀌었음.(복잡한 암호 지원)<br>보안을 위해 복잡한 암호를 쓰라고 만들었는데, 이걸 안쓰는건 좀…</p><p>아무튼,</p><p>validate password plugin 삭제하거나 암호규정을 낮추는 방법이 있음. </p><p>mysql root 로 로그인한 후에 다음 명령어 실행후 mysql 재구동<br>uninstall plugin validate_password;</p><p>암호 규칙을 낮게 설정<br><a href="https://dev.mysql.com/doc/refman/5.7/en/validate-password-plugin.html" target="_blank" rel="external">https://dev.mysql.com/doc/refman/5.7/en/validate-password-plugin.html</a><br>my.cnf에 다음과 같이 설정하고 mysql 재구동<br>[mysqld]<br>validate_password_policy=LOW</p><p>기본 값은 1(MEDIUM) 입니다. </p><table><thead><tr><th>Policy</th><th>암호적용</th></tr></thead><tbody><tr><td>0 or LOW</td><td>Length</td></tr><tr><td>1 or MEDIUM</td><td>Length; numeric, lowercase/uppercase, and special characters</td></tr><tr><td>2 or STRONG</td><td>Length; numeric, lowercase/uppercase, and special characters; dictionary file</td></tr></tbody></table><h3 id="UTF8MB4로-테이블-생성"><a href="#UTF8MB4로-테이블-생성" class="headerlink" title="UTF8MB4로 테이블 생성"></a>UTF8MB4로 테이블 생성</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> mydatabase <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> = utf8mb4 <span class="keyword">COLLATE</span> = utf8mb4_unicode_ci;</div><div class="line"></div><div class="line"><span class="keyword">GRANT</span> ALL <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> database.selectTable <span class="keyword">TO</span> <span class="string">'userid'</span>@<span class="string">'localhost'</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'password'</span>;</div><div class="line"><span class="keyword">flush</span> <span class="keyword">privileges</span>;</div></pre></td></tr></table></figure><p>mysql utf8은 3바이트로 인식, 이모티콘은 4바이트 이므로 저장이 안됩니다.<br>모든 테이블을 MB4로 만드는건 db 관점에서 효율적이지 못하므로 이모티콘이 사용되는 테이블만 MB4로 만들거나 변경해야 합니다.<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> database_name <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> = utf8mb4 <span class="keyword">COLLATE</span> = utf8mb4_unicode_ci;</div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> table_name <span class="keyword">CONVERT</span> <span class="keyword">TO</span> <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_unicode_ci;</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;데이타베이스-생성&quot;&gt;&lt;a href=&quot;#데이타베이스-생성&quot; class=&quot;headerlink&quot; title=&quot;데이타베이스 생성&quot;&gt;&lt;/a&gt;데이타베이스 생성&lt;/h3&gt;&lt;h5 id=&quot;기본구문&quot;&gt;&lt;a href=&quot;#기본구문&quot; class=&quot;headerli
      
    
    </summary>
    
      <category term="Mysql" scheme="http://korcow.github.io/categories/Mysql/"/>
    
    
      <category term="사용자생성" scheme="http://korcow.github.io/tags/%EC%82%AC%EC%9A%A9%EC%9E%90%EC%83%9D%EC%84%B1/"/>
    
      <category term="database 생성" scheme="http://korcow.github.io/tags/database-%EC%83%9D%EC%84%B1/"/>
    
  </entry>
  
  <entry>
    <title>보안연결</title>
    <link href="http://korcow.github.io/2017/12/07/mysql-%EB%B3%B4%EC%95%88%EC%97%B0%EA%B2%B0/"/>
    <id>http://korcow.github.io/2017/12/07/mysql-보안연결/</id>
    <published>2017-12-07T09:40:08.931Z</published>
    <updated>2017-12-07T09:40:08.931Z</updated>
    
    <content type="html"><![CDATA[<h3 id="보안-접속-생성"><a href="#보안-접속-생성" class="headerlink" title="보안 접속 생성"></a>보안 접속 생성</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql_config_editor <span class="built_in">set</span> --login-path=[접속이름] --host=[host정보] --user=[계정명] --password --socket=/tmp/mysql.sock --port=3306</div></pre></td></tr></table></figure><p>소켓은 옵션이고, 패스워드는 실행시 입력해줍니다.</p><h4 id="등록-list-확인"><a href="#등록-list-확인" class="headerlink" title="등록 list 확인"></a>등록 list 확인</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql_config_editor <span class="built_in">print</span> --all</div></pre></td></tr></table></figure><h4 id="mysql-에-접속"><a href="#mysql-에-접속" class="headerlink" title="mysql 에 접속"></a>mysql 에 접속</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql --login-path=myconn</div></pre></td></tr></table></figure><p>데이터베이스를 선택할려면</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql --login-path=myconn --database=데이터베이스명</div></pre></td></tr></table></figure><p>vim에서 </p><figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">"vimrc에 추가</span></div><div class="line"><span class="keyword">vmap</span> <span class="symbol">&lt;Leader&gt;</span>sql :<span class="string">'&lt;,'</span>&gt;!mysql --login-path=local -vvv --database=mydb<span class="symbol">&lt;CR&gt;</span></div><div class="line"><span class="keyword">nnoremap</span> <span class="symbol">&lt;Leader&gt;</span>sql :.!mysql --login-path=local -vvv --database=mydb<span class="symbol">&lt;CR&gt;</span></div></pre></td></tr></table></figure><p>옵션이 궁금하면<br>mysql –help</p><h4 id="접속-정보-삭제"><a href="#접속-정보-삭제" class="headerlink" title="접속 정보 삭제"></a>접속 정보 삭제</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql_config_editor remove --login-path=myconn</div></pre></td></tr></table></figure><h4 id="전체-정보를-삭제"><a href="#전체-정보를-삭제" class="headerlink" title="전체 정보를 삭제"></a>전체 정보를 삭제</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql_config_editor remove</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;보안-접속-생성&quot;&gt;&lt;a href=&quot;#보안-접속-생성&quot; class=&quot;headerlink&quot; title=&quot;보안 접속 생성&quot;&gt;&lt;/a&gt;보안 접속 생성&lt;/h3&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class
      
    
    </summary>
    
      <category term="Mysql" scheme="http://korcow.github.io/categories/Mysql/"/>
    
    
      <category term="mysql_config_editor" scheme="http://korcow.github.io/tags/mysql-config-editor/"/>
    
  </entry>
  
  <entry>
    <title>구조체</title>
    <link href="http://korcow.github.io/2017/12/03/c-%EA%B5%AC%EC%A1%B0%EC%B2%B4/"/>
    <id>http://korcow.github.io/2017/12/03/c-구조체/</id>
    <published>2017-12-03T04:08:32.575Z</published>
    <updated>2017-12-03T04:08:32.575Z</updated>
    
    <content type="html"><![CDATA[<h3 id="구조체"><a href="#구조체" class="headerlink" title="구조체"></a>구조체</h3><p>서로 다른 형식의 자료의 집합</p><img src="/c언어기초/2017-12-02_19-30-05.png" width="500" title="구조체그림1"><p>지금까지는 변수를 선언 할 때 문자형, 정수형, 실수형 자료를 별도로 선언해서 사용했습니다. 구조체는 이런 자료형을 모아서 사용자가 원하는 자료형으로 만들어 줍니다.</p><h3 id="선언-및-사용"><a href="#선언-및-사용" class="headerlink" title="선언 및 사용"></a>선언 및 사용</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt; // strcpy()</span></span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">struct</span> _<span class="title">Score</span>&#123;</span></div><div class="line">    <span class="keyword">char</span> name[<span class="number">20</span>];</div><div class="line">    <span class="keyword">int</span> kor;</div><div class="line">    <span class="keyword">int</span> eng;</div><div class="line">    <span class="keyword">int</span> math;</div><div class="line">    <span class="keyword">int</span> sum;</div><div class="line">    <span class="keyword">double</span> avg;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> *argv[])</span> </span>&#123;</div><div class="line">    </div><div class="line">    <span class="class"><span class="keyword">struct</span> _<span class="title">Score</span> <span class="title">score</span>;</span></div><div class="line"></div><div class="line">    <span class="built_in">strcpy</span>(score.name, <span class="string">"유재석"</span>);</div><div class="line">    score.kor = <span class="number">90</span>;</div><div class="line">    score.eng = <span class="number">95</span>;</div><div class="line">    score.math = <span class="number">100</span>;</div><div class="line">    score.sum = score.kor + score.eng + score.math;</div><div class="line">    score.avg = score.sum / <span class="number">3</span>;</div><div class="line"></div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s%d\n"</span>, <span class="string">"국어 점수: "</span>, score.kor);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s%d\n"</span>, <span class="string">"영어 점수: "</span>, score.eng);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s%d\n"</span>, <span class="string">"수학 점수: "</span>, score.math);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s%d\n"</span>, <span class="string">"총점 점수: "</span>, score.sum);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s%f\n"</span>, <span class="string">"평균 점수: "</span>, score.avg);</div><div class="line"></div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="typedef"><a href="#typedef" class="headerlink" title="typedef"></a>typedef</h3><p>typedef는 자료형을 재정의하는 기능입니다. 단순히 이름을 변경하는 기능입니다.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> *argv[])</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">typedef</span> <span class="keyword">int</span> I;</div><div class="line"></div><div class="line">    I iNum;</div><div class="line">    iNum = <span class="number">100</span>;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s%d\n"</span>, <span class="string">"값은:"</span>, iNum);</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>구조체도 자료형이기 때문에 typedef를 이용해 별칭을 만들 수 있습니다.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt; // strcpy()</span></span></div><div class="line"></div><div class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">Score</span>&#123;</span></div><div class="line">    <span class="keyword">char</span> name[<span class="number">20</span>];</div><div class="line">    <span class="keyword">int</span> kor;</div><div class="line">    <span class="keyword">int</span> eng;</div><div class="line">    <span class="keyword">int</span> math;</div><div class="line">    <span class="keyword">int</span> sum;</div><div class="line">    <span class="keyword">double</span> avg;</div><div class="line">&#125; Score;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> *argv[])</span> </span>&#123;</div><div class="line">    </div><div class="line">    Score score;</div><div class="line"></div><div class="line">    <span class="built_in">strcpy</span>(score.name, <span class="string">"유재석"</span>);</div><div class="line">    score.kor = <span class="number">90</span>;</div><div class="line">    score.eng = <span class="number">95</span>;</div><div class="line">    score.math = <span class="number">100</span>;</div><div class="line">    score.sum = score.kor + score.eng + score.math;</div><div class="line">    score.avg = score.sum / <span class="number">3</span>;</div><div class="line"></div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s%d\n"</span>, <span class="string">"국어 점수: "</span>, score.kor);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s%d\n"</span>, <span class="string">"영어 점수: "</span>, score.eng);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s%d\n"</span>, <span class="string">"수학 점수: "</span>, score.math);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s%d\n"</span>, <span class="string">"총점 점수: "</span>, score.sum);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s%f\n"</span>, <span class="string">"평균 점수: "</span>, score.avg);</div><div class="line"></div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;구조체&quot;&gt;&lt;a href=&quot;#구조체&quot; class=&quot;headerlink&quot; title=&quot;구조체&quot;&gt;&lt;/a&gt;구조체&lt;/h3&gt;&lt;p&gt;서로 다른 형식의 자료의 집합&lt;/p&gt;
&lt;img src=&quot;/c언어기초/2017-12-02_19-30-05.png&quot; wid
      
    
    </summary>
    
      <category term="C언어기초" scheme="http://korcow.github.io/categories/C%EC%96%B8%EC%96%B4%EA%B8%B0%EC%B4%88/"/>
    
    
      <category term="구조체" scheme="http://korcow.github.io/tags/%EA%B5%AC%EC%A1%B0%EC%B2%B4/"/>
    
  </entry>
  
  <entry>
    <title>REPL 사용하기</title>
    <link href="http://korcow.github.io/2017/12/02/python-repl-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/"/>
    <id>http://korcow.github.io/2017/12/02/python-repl-사용하기/</id>
    <published>2017-12-02T01:49:16.867Z</published>
    <updated>2017-12-02T01:49:16.867Z</updated>
    
    <content type="html"><![CDATA[<h3 id="REPL"><a href="#REPL" class="headerlink" title="REPL"></a>REPL</h3><p>파이썬의 REPL은 기본적으로 readline api를 사용하기 때문에 키보드 단축키 사용법이 terminal 과 거의 같습니다. </p><h4 id="단축키"><a href="#단축키" class="headerlink" title="단축키"></a>단축키</h4><table><thead><tr><th>단축키</th><th>설명</th></tr></thead><tbody><tr><td><code>TAB</code></td><td>자동완성(파일및디렉토리, 명령을 자동완성)</td></tr><tr><td><code>Ctrl+h</code></td><td>백스페이와 같습니다.(더 편합니다.)</td></tr><tr><td><code>Ctrl+a</code></td><td>처음으로 이동</td></tr><tr><td><code>Ctrl+e</code></td><td>행 끝으로 이동</td></tr><tr><td><code>Ctrl+b</code></td><td>한 문자 뒤로 이동</td></tr><tr><td><code>Alt+b</code></td><td>한 단어 뒤로 이동</td></tr><tr><td><code>Ctrl+f</code></td><td>한 문자 앞으로 이동</td></tr><tr><td><code>Alt+f</code></td><td>한 단어 앞으로 이동</td></tr><tr><td><code>Ctrl+u</code></td><td>현재줄을 삭제합니다.</td></tr><tr><td><code>Ctrl+k</code></td><td>커서 위치에서 행 끝까지 삭제합니다.</td></tr><tr><td><code>Ctrl+w</code></td><td>커서앞 한단어를 삭제합니다.</td></tr><tr><td><code>Esc+Backspace</code></td><td>이전 단어 삭제</td></tr><tr><td><code>Ctrl+y</code></td><td>클립보드에서 텍스트를 붙여넣습니다.</td></tr><tr><td><code>Ctrl+l</code></td><td>화면 상단에 현재 줄을 남겨두고 화면을 지웁니다.</td></tr><tr><td><code>Ctrl+r</code></td><td>증분 검색 기록 을 역순으로 추적</td></tr><tr><td><code>Alt+p</code></td><td>비 증분 검색 기록을 역순으로 추적</td></tr><tr><td><code>Ctrl+p</code></td><td>비 증분 검색 기록을 역순으로 추적</td></tr></tbody></table><h4 id="help"><a href="#help" class="headerlink" title="help"></a>help</h4><p>프롬프트에서 help()를 입력합니다.<br>도움말 유틸리티로 들어가게 되는데 이때 topics를 입력합니다.<br>도움말 목차가 리스트되고 원하는 타이틀을 입력하면 도움말을 보여줍니다.<br>사용법은 less와 동일합니다. 종료는 quit 또는 q<br>modules, keywords, symbols 동일하게 사용할 수 있습니다.<br>symbols 는 예약된 표시문자를 확인 할 수 있습니다.<br>keywords 는 예약어를 볼수 있습니다.<br>modules는 클래스 리스트를 볼수 있습니다.</p><h4 id="dir"><a href="#dir" class="headerlink" title="dir"></a>dir</h4><p>python은 c언어와 다르게 한번에 컴파일해서 사용하는 것이 아니라 스크립트를 한줄씩 인터프리터가 처리하는 방식으로 구동됩니다.<br>처음에 실행된 인터프리터의 머리는 텅 비어있습니다.<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt;dir()</div><div class="line">[<span class="string">'__annotations__'</span>, <span class="string">'__builtins__'</span>, <span class="string">'__doc__'</span>, <span class="string">'__loader__'</span></div><div class="line">, <span class="string">'__name__'</span>, <span class="string">'__package__'</span>, <span class="string">'__spec__'</span>]</div><div class="line">&gt;&gt;&gt;</div></pre></td></tr></table></figure></p><p>언더바 2개로 감싸저 있는 것을 모듈이라고 합니다. 클래스의 집합이라고 생각하면 됩니다.<br>클래스는 변수의 집합이구요.<br>각각의 모듈이 궁금하면 help(“모듈명”) 하면 됩니다.<br>위에 리스트된 모듈이 파이썬기 동작되기 위한 기본 모듈입니다. 이 모듈들이 메모리에 적재되어 있는 겁니다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>iKor = <span class="number">100</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>iEng = <span class="number">90</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>iMath = <span class="number">90</span></div></pre></td></tr></table></figure><p>위와 같이 입력하고 dir() 해보세요.<br>변수를 선언 한겁니다. 변수는 메모리의 스택영역에 적재 됩니다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>dir()</div><div class="line">[<span class="string">'__annotations__'</span>, <span class="string">'__builtins__'</span>, <span class="string">'__doc__'</span>, <span class="string">'__loader__'</span></div><div class="line">, <span class="string">'__name__'</span>, <span class="string">'__package__'</span>, <span class="string">'__spec__'</span>, <span class="string">'iEng'</span>, <span class="string">'iMath'</span>, <span class="string">'ikor'</span>]</div></pre></td></tr></table></figure><p>그럼 메모리 속을 들여다 봅시다. 처음에 있는 모듈 부터 차례로 입력하세요.<br>잠깐 REPL는 shell과 사용법이 똑같다고 했습니다. 전부 입력하지 말고 tab자동완성을 쓰세요.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>__annotations__</div><div class="line">&#123;&#125;</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>__builtins__</div><div class="line">&lt;module <span class="string">'builtins'</span> (built-<span class="keyword">in</span>)&gt;</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>__doc__</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>__loader__</div><div class="line">&lt;<span class="class"><span class="keyword">class</span> '<span class="title">_frozen_importlib</span>.<span class="title">BuiltinImporter</span>'&gt;</span></div><div class="line"><span class="class">&gt;&gt;&gt; <span class="title">__name__</span></span></div><div class="line"><span class="class">'<span class="title">__main__</span>'</span></div><div class="line"><span class="class">&gt;&gt;&gt; <span class="title">__package__</span></span></div><div class="line"><span class="class">&gt;&gt;&gt; <span class="title">__spec__</span></span></div><div class="line"><span class="class">&gt;&gt;&gt; <span class="title">iEng</span></span></div><div class="line"><span class="class">90</span></div><div class="line"><span class="class">&gt;&gt;&gt; <span class="title">iMath</span></span></div><div class="line"><span class="class">90</span></div><div class="line"><span class="class">&gt;&gt;&gt; <span class="title">iKor</span></span></div><div class="line"><span class="class">100</span></div><div class="line"><span class="class">&gt;&gt;&gt;</span></div></pre></td></tr></table></figure><ul><li><code>__annotations__</code>은 주석입니다. 우리가 주석을 사용하지 않았으니 아무것도 없네요.</li><li><code>__builtins__</code>은 내장객체입니다. 자동완성하면 괄호가 나왔을 겁니다. 뭔가 많이 있는데 우리가 지정하지 않은 겁니다.</li><li><code>__doc__</code>는 설명서입니다. 우리가 설명서를 만들지 않았으니 아무것도 없는 겁니다.</li><li><code>__loader__</code>는 뭔가 많이 있는데 우리가 호출하지 않은 겁니다. 모듈이름이 뭔가 읽어 온다는 느낌만 갖이면 됩니다.</li><li><code>__name__</code>은 우리가 만들고 있는 클래스 이름입니다. 기본이 main입니다.</li><li><code>__package__</code>는 여러 프로그램을 합칠때 호출하는 건데 이것도 사용하지 않았으니 비어 있네요.</li><li><code>__spec__</code>는 파이썬의 기본 설정값을 세팅하는 겁니다. 이것도 설정하지 않았으니 비어 있습니다.</li><li>iEng 이건 우리가 iEng라는 변수를 생성했기 때문에 90 이라는 값이 나왔습니다. iMath, iKor동일 합니다.</li></ul><p>변수를 하나 더 만들고 dir() 해보세요. 이번에는 iSum = 0 으로 만드세요.<br>국, 영, 수 점수를 더해서 iSum에 넣을 겁니다. 자동완성 잊지마세요.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>iSum = iKor + iEng + iMath</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>iSum</div><div class="line"><span class="number">280</span></div><div class="line">&gt;&gt;&gt;</div></pre></td></tr></table></figure><p>이번에는 프롬프트에서 dir(iSum) 해보세요.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>dir(iSum)</div><div class="line">[<span class="string">'__abs__'</span>, <span class="string">'__add__'</span>, <span class="string">'__and__'</span>, <span class="string">'__bool__'</span>, <span class="string">'__ceil__'</span></div><div class="line">, <span class="string">'__class__'</span>, <span class="string">'__delattr__'</span>, <span class="string">'__dir__'</span>, <span class="string">'__divmod__'</span>, <span class="string">'__doc__'</span></div><div class="line">, <span class="string">'__eq__'</span>, <span class="string">'__float__'</span>, <span class="string">'__floor__'</span>, <span class="string">'__floordiv__'</span>, <span class="string">'__format__'</span></div><div class="line">, <span class="string">'__ge__'</span>, <span class="string">'__getattribute__'</span>, <span class="string">'__getnewargs__'</span>, <span class="string">'__gt__'</span>, <span class="string">'__hash__'</span></div><div class="line">, <span class="string">'__index__'</span>, <span class="string">'__init__'</span>, <span class="string">'__init_subclass__'</span>, <span class="string">'__int__'</span>, <span class="string">'__invert__'</span></div><div class="line">, <span class="string">'__le__'</span>, <span class="string">'__lshift__'</span>, <span class="string">'__lt__'</span>, <span class="string">'__mod__'</span>, <span class="string">'__mul__'</span></div><div class="line">, <span class="string">'__ne__'</span>, <span class="string">'__neg__'</span>, <span class="string">'__new__'</span>, <span class="string">'__or__'</span>, <span class="string">'__pos__'</span></div><div class="line">, <span class="string">'__pow__'</span>, <span class="string">'__radd__'</span>, <span class="string">'__rand__'</span>, <span class="string">'__rdivmod__'</span>, <span class="string">'__reduce__'</span></div><div class="line">, <span class="string">'__reduce_ex__'</span>, <span class="string">'__repr__'</span>, <span class="string">'__rfloordiv__'</span>, <span class="string">'__rlshift__'</span> , <span class="string">'__rmod__'</span></div><div class="line">, <span class="string">'__rmul__'</span>, <span class="string">'__ror__'</span>, <span class="string">'__round__'</span>, <span class="string">'__rpow__'</span> , <span class="string">'__rrshift__'</span></div><div class="line">, <span class="string">'__rshift__'</span>, <span class="string">'__rsub__'</span>, <span class="string">'__rtruediv__'</span> , <span class="string">'__rxor__'</span> , <span class="string">'__setattr__'</span></div><div class="line">, <span class="string">'__sizeof__'</span>, <span class="string">'__str__'</span> , <span class="string">'__sub__'</span>, <span class="string">'__subclasshook__'</span> , <span class="string">'__truediv__'</span> </div><div class="line">, <span class="string">'__trunc__'</span>, <span class="string">'__xor__'</span>, <span class="string">'bit_length'</span>, <span class="string">'conjugate'</span> , <span class="string">'denominator'</span> </div><div class="line">, <span class="string">'from_bytes'</span>, <span class="string">'imag'</span>, <span class="string">'numerator'</span>, <span class="string">'real'</span> , <span class="string">'to_bytes'</span>]</div><div class="line">&gt;&gt;&gt;</div></pre></td></tr></table></figure><p>iSum은 정수형 변수가 생성되면서 상속받는 속성들 입니다.</p><p>우리는 국,영,수 점수만 더해서 저장했는데 뭔가 많이 들어있네요.<br>int class에서 상속받아 기본으로 사용할 수 있는 객체들입니다.<br>용어를 처음 듣는다고 해서 어려워 하지 말고 그냥 받아 들이세요.<br>부모님이 재산이 많으면 자식에게 상속하듯 파이썬도 정수형 변수를 찍어 낼때 정수형 클래스의 속성을 iSum 변수에 상속해 준겁니다.</p><p>c언어는 함수로 시작해서 함수로 끝납니다.<br>python은 클래스로 시작해서 클래스로 끝납니다.<br>c언어는 모든 것을 만들어야 하는데, 파이썬은 상속 받아 쓰기만 하면 됩니다.</p><p>클래스, 객체(Object), 속성(Method), 데이터(Data)는 많이 나오는 단어이니 간단히 이해 하고 있으면 됩니다.</p><p>클래스는 객체를 구분하는 단위, 클래스로 찍어 낸것을 객체라고 합니다. 클래스가 자식 객체에게 속성과 데이터를 쓸수 있게 해주는 것을 상속이라 합니다. </p><p>정리하면 클래스는 객체를 찍어 낼수 있고 객체는 속성과 DATA가 있다 라고 합니다. 한번더 헛갈리게 할 께요. 영어와 한글을 혼용해서 사용하는데, 속성은 메쏘드라고 부르고 메쏘드는 함수라고 부릅니다. 객체는 object라고 부릅니다. 마지막으로 정리 해볼께요.</p><p>파이썬은 클래스로 시작해서 클래스로 끝납니다.<br>클래스에는 메쏘드와 데이터가 있습니다.<br>클래스로 찍어낸 것을 오브젝트라고 합니다.<br>오브젝트는 클래스로부터 상속받은 메쏘드와 데이터를 사용할 수 있습니다.</p><p>iSum은 int클래스가 생성한 Object이니 int클래스의 메쏘드를 물려 받은 겁니다.</p><p>이제 모두 잊어 버리세요. 이런거 외우는거 아닙니다. 쓰면서 느끼면 됩니다.</p><h3 id="ipython"><a href="#ipython" class="headerlink" title="ipython"></a>ipython</h3><p>기본 REPL은 기능이 없어 많이 불편합니다. </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ipython</div></pre></td></tr></table></figure><p>프롬프트가 좀 바뀌긴 했지만 그냥 한번 써보세요.<br>색깔도 변한것 같습니다. 자동완성도 지원하고, 명령을 입력하다 잘 모르겠으면 Tab을 누르세요.<br>파일저장, 읽어오기등 부족하지만 ide처럼 사용할 수 있습니다.</p><p>종료는 똑같이 quit()</p><p>시작할때 각종 도움말 보는 법 나와 있으니 참고 하세요. 이것도 안쓸 겁니다.</p><h3 id="jupyter-notebook"><a href="#jupyter-notebook" class="headerlink" title="jupyter notebook"></a>jupyter notebook</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ jupyter notebook</div></pre></td></tr></table></figure><p>뭔가 이것저것 실행 되고 브라우저가 열립니다.<br>이놈이 앞으로 우리가 사용할 python 입니다.<br>종료하려면 브라우저 닫고 터미널에서는 Ctrl+c 누르면 종료 됩니다.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;REPL&quot;&gt;&lt;a href=&quot;#REPL&quot; class=&quot;headerlink&quot; title=&quot;REPL&quot;&gt;&lt;/a&gt;REPL&lt;/h3&gt;&lt;p&gt;파이썬의 REPL은 기본적으로 readline api를 사용하기 때문에 키보드 단축키 사용법이 terminal 
      
    
    </summary>
    
      <category term="python" scheme="http://korcow.github.io/categories/python/"/>
    
    
      <category term="python REPL" scheme="http://korcow.github.io/tags/python-REPL/"/>
    
  </entry>
  
  <entry>
    <title>설치</title>
    <link href="http://korcow.github.io/2017/12/01/mysql-%EC%84%A4%EC%B9%98/"/>
    <id>http://korcow.github.io/2017/12/01/mysql-설치/</id>
    <published>2017-12-01T00:24:11.011Z</published>
    <updated>2017-12-01T00:24:11.011Z</updated>
    
    <content type="html"><![CDATA[<h4 id="mysql-설치"><a href="#mysql-설치" class="headerlink" title="mysql 설치"></a>mysql 설치</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">brew install mysql</div></pre></td></tr></table></figure><h4 id="mysql-시작"><a href="#mysql-시작" class="headerlink" title="mysql 시작"></a>mysql 시작</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql.server start</div></pre></td></tr></table></figure><h4 id="보안-설정"><a href="#보안-설정" class="headerlink" title="보안 설정"></a>보안 설정</h4><p>비밀번호 및 각종 보안 관련 설정</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql_secure_installation</div></pre></td></tr></table></figure><ul><li>Would you like to setup VALIDATE PASSWORD plugin? : 복잡한 비밀번호를 사용하도록 제한해주는 플러그인을 사용하려면 yes, 비밀번호 제한받지 않고 쓰고 싶다면 no.</li><li>Remove anonymous users? : 익명사용자 삭제 여부. no 하면 <code>$ mysql -u root</code>가 아니라 <code>$ mysql</code>만으로도 접속 가능. yes하면 -u 옵션 필수.</li><li>Disallow root login remotely? : localhost외에 다른 ip에서 root 아이디로 원격접속 가능하게 할지. yes하면 원겹접속 불가.</li><li>Remove test database and access to it? : mysql에 기본적으로 설정된 test 디비 삭제 여부.</li><li>Reload privilege tables now? : 권한 갱신. </li></ul><h4 id="blew-service-설치"><a href="#blew-service-설치" class="headerlink" title="blew service 설치"></a>blew service 설치</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">brew tap homebrew/services</div><div class="line"></div><div class="line">brew services start mysql</div><div class="line">brew services restart mysql</div><div class="line">brew services list</div><div class="line">brew services cleanup</div></pre></td></tr></table></figure><h4 id="로그인시-데몬-자동-실행"><a href="#로그인시-데몬-자동-실행" class="headerlink" title="로그인시 데몬 자동 실행"></a>로그인시 데몬 자동 실행</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ln -sfv /usr/<span class="built_in">local</span>/opt/mysql/*.plist ~/Library/LaunchAgents</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;mysql-설치&quot;&gt;&lt;a href=&quot;#mysql-설치&quot; class=&quot;headerlink&quot; title=&quot;mysql 설치&quot;&gt;&lt;/a&gt;mysql 설치&lt;/h4&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class
      
    
    </summary>
    
      <category term="Mysql" scheme="http://korcow.github.io/categories/Mysql/"/>
    
    
      <category term="설치" scheme="http://korcow.github.io/tags/%EC%84%A4%EC%B9%98/"/>
    
  </entry>
  
  <entry>
    <title>commnet 설정 및 조회</title>
    <link href="http://korcow.github.io/2017/12/01/mysql-comment/"/>
    <id>http://korcow.github.io/2017/12/01/mysql-comment/</id>
    <published>2017-11-30T17:01:55.751Z</published>
    <updated>2017-11-30T17:01:55.751Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Table-정보조회-with-comment"><a href="#Table-정보조회-with-comment" class="headerlink" title="Table 정보조회 (with comment)"></a>Table 정보조회 (with comment)</h3><h4 id="명령어를-통한-테이블정보-조회"><a href="#명령어를-통한-테이블정보-조회" class="headerlink" title="명령어를 통한 테이블정보 조회"></a>명령어를 통한 테이블정보 조회</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SHOW</span> <span class="keyword">TABLE</span> <span class="keyword">STATUS</span>;</div></pre></td></tr></table></figure><h4 id="Query를-통한-테이블정보-조회"><a href="#Query를-통한-테이블정보-조회" class="headerlink" title="Query를 통한 테이블정보 조회"></a>Query를 통한 테이블정보 조회</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> *</div><div class="line"><span class="keyword">FROM</span> INFORMATION_SCHEMA.TABLES</div><div class="line"><span class="keyword">WHERE</span> TABLE_SCHEMA=<span class="string">'database_name'</span>;</div><div class="line"></div><div class="line"><span class="keyword">SELECT</span> TABLE_SCHEMA,TABLE_NAME,AUTO_INCREMENT,TABLE_COMMENT</div><div class="line"><span class="keyword">FROM</span> INFORMATION_SCHEMA.TABLES</div><div class="line"><span class="keyword">WHERE</span> TABLE_SCHEMA=<span class="string">'database_name'</span>;</div></pre></td></tr></table></figure><h3 id="COLUMN-정보조회-with-comment"><a href="#COLUMN-정보조회-with-comment" class="headerlink" title="COLUMN 정보조회 (with comment)"></a>COLUMN 정보조회 (with comment)</h3><h4 id="명령어를-통한-컬럼정보-조회"><a href="#명령어를-통한-컬럼정보-조회" class="headerlink" title="명령어를 통한 컬럼정보 조회"></a>명령어를 통한 컬럼정보 조회</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SHOW</span> <span class="keyword">FULL</span> <span class="keyword">COLUMNS</span> <span class="keyword">FROM</span> TABLE_NAME;</div></pre></td></tr></table></figure><h4 id="Query를-통한-테이블정보-조회-1"><a href="#Query를-통한-테이블정보-조회-1" class="headerlink" title="Query를 통한 테이블정보 조회"></a>Query를 통한 테이블정보 조회</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> *</div><div class="line"><span class="keyword">FROM</span> INFORMATION_SCHEMA.TABLES</div><div class="line"><span class="keyword">WHERE</span> TABLE_SCHEMA=<span class="string">'database_name'</span>;</div><div class="line"></div><div class="line"><span class="keyword">SELECT</span>  TABLE_SCHEMA,TABLE_NAME,COLUMN_NAME,ORDINAL_POSITION,COLUMN_DEFAULT ,DATA_TYPE,COLUMN_TYPE,COLUMN_KEY,EXTRA,COLUMN_COMMENT</div><div class="line"><span class="keyword">FROM</span> INFORMATION_SCHEMA.COLUMNS</div><div class="line"><span class="keyword">WHERE</span> TABLE_SCHEMA=<span class="string">'database_name'</span>  <span class="keyword">AND</span> TABLE_NAME=<span class="string">'table_name'</span>;</div></pre></td></tr></table></figure><h3 id="TABLE-COMMENT-설정"><a href="#TABLE-COMMENT-설정" class="headerlink" title="TABLE COMMENT 설정"></a>TABLE COMMENT 설정</h3><h4 id="테이블-생성시-COMMENT-설정"><a href="#테이블-생성시-COMMENT-설정" class="headerlink" title="테이블 생성시 COMMENT 설정"></a>테이블 생성시 COMMENT 설정</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> TABLE_NAME (</div><div class="line">  column1 <span class="built_in">INT</span>,</div><div class="line">  ...</div><div class="line">) <span class="keyword">COMMENT</span> = <span class="string">'table comment'</span>;</div></pre></td></tr></table></figure><h4 id="TABLE-COMMENT-만-별도-수정하는-방법"><a href="#TABLE-COMMENT-만-별도-수정하는-방법" class="headerlink" title="TABLE COMMENT 만 별도 수정하는 방법"></a>TABLE COMMENT 만 별도 수정하는 방법</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> TABLE_NAME <span class="keyword">COMMENT</span> = <span class="string">'테이블설명'</span>;</div></pre></td></tr></table></figure><h3 id="COLUMNS-COMMENT-설정"><a href="#COLUMNS-COMMENT-설정" class="headerlink" title="COLUMNS COMMENT 설정"></a>COLUMNS COMMENT 설정</h3><h4 id="테이블-생성시-COLUMN-COMMENT-설정"><a href="#테이블-생성시-COLUMN-COMMENT-설정" class="headerlink" title="테이블 생성시 COLUMN COMMENT 설정"></a>테이블 생성시 COLUMN COMMENT 설정</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> TABLE_NAME (</div><div class="line">  column1 <span class="built_in">INT</span> <span class="keyword">COMMENT</span> <span class="string">'column1 comment'</span>,</div><div class="line">  ...</div><div class="line">);</div></pre></td></tr></table></figure><h4 id="TABLE-COMMENT-만-별도-수정하는-방법-1"><a href="#TABLE-COMMENT-만-별도-수정하는-방법-1" class="headerlink" title="TABLE COMMENT 만 별도 수정하는 방법"></a>TABLE COMMENT 만 별도 수정하는 방법</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> TABLE_NAME <span class="keyword">CHANGE</span> <span class="keyword">COLUMN</span> column_name column_name data_type <span class="literal">NULL</span>여부 <span class="keyword">COMMENT</span> <span class="string">'column comment'</span>;</div><div class="line"></div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="string">`callcenter`</span> <span class="keyword">CHANGE</span> <span class="string">`regdate`</span> <span class="string">`regdate`</span></div><div class="line"><span class="keyword">TIMESTAMP</span> <span class="keyword">ON</span> <span class="keyword">UPDATE</span> <span class="keyword">CURRENT_TIMESTAMP</span></div><div class="line"><span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">CURRENT_TIMESTAMP</span></div><div class="line"><span class="keyword">COMMENT</span> <span class="string">'callcenter 등록일'</span>;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Table-정보조회-with-comment&quot;&gt;&lt;a href=&quot;#Table-정보조회-with-comment&quot; class=&quot;headerlink&quot; title=&quot;Table 정보조회 (with comment)&quot;&gt;&lt;/a&gt;Table 정보조회 (wit
      
    
    </summary>
    
      <category term="Mysql" scheme="http://korcow.github.io/categories/Mysql/"/>
    
    
      <category term="comment" scheme="http://korcow.github.io/tags/comment/"/>
    
  </entry>
  
  <entry>
    <title>테이블 만들기</title>
    <link href="http://korcow.github.io/2017/12/01/mysql-%ED%85%8C%EC%9D%B4%EB%B8%94%EB%A7%8C%EB%93%A4%EA%B8%B0/"/>
    <id>http://korcow.github.io/2017/12/01/mysql-테이블만들기/</id>
    <published>2017-11-30T16:34:58.425Z</published>
    <updated>2017-11-30T16:34:58.425Z</updated>
    
    <content type="html"><![CDATA[<h3 id="테이블-만들기"><a href="#테이블-만들기" class="headerlink" title="테이블 만들기"></a>테이블 만들기</h3><p>create table table명(<br>컬럼명 타입(크기),…);</p><p>show databases;</p><p>show tables;</p><p>use korcow;</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">create</span> <span class="keyword">table</span> mytable(</div><div class="line"><span class="keyword">no</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">unsigned</span> <span class="keyword">not</span> <span class="literal">null</span> auto_increment,</div><div class="line">subject <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">not</span> <span class="literal">null</span>,</div><div class="line"><span class="keyword">content</span> mediumtext,</div><div class="line">created datetime,</div><div class="line"><span class="keyword">updated</span> datetime,</div><div class="line">primary <span class="keyword">key</span>(<span class="keyword">no</span>)</div><div class="line">);</div></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> * <span class="keyword">from</span> mytable</div></pre></td></tr></table></figure><p>``` sql<br>insert into mytable(subject, content, created) values (‘코미디언 이름’, ‘유재석, 강호동, 박명수, 박미선’, now());</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;테이블-만들기&quot;&gt;&lt;a href=&quot;#테이블-만들기&quot; class=&quot;headerlink&quot; title=&quot;테이블 만들기&quot;&gt;&lt;/a&gt;테이블 만들기&lt;/h3&gt;&lt;p&gt;create table table명(&lt;br&gt;컬럼명 타입(크기),…);&lt;/p&gt;
&lt;p&gt;show
      
    
    </summary>
    
      <category term="Mysql" scheme="http://korcow.github.io/categories/Mysql/"/>
    
    
      <category term="create table" scheme="http://korcow.github.io/tags/create-table/"/>
    
  </entry>
  
  <entry>
    <title>C언어 목차</title>
    <link href="http://korcow.github.io/2017/11/28/c-%EB%AA%A9%EC%B0%A8/"/>
    <id>http://korcow.github.io/2017/11/28/c-목차/</id>
    <published>2017-11-28T03:09:48.671Z</published>
    <updated>2017-11-28T03:09:48.671Z</updated>
    
    <content type="html"><![CDATA[<h3 id="목차"><a href="#목차" class="headerlink" title="목차"></a>목차</h3><h3 id="c언어-기초"><a href="#c언어-기초" class="headerlink" title="c언어 기초"></a>c언어 기초</h3><p>c언어는 가장 기초가 되는 프로그래밍 언어로 c++, objective c, java, python등의 언어로 접근하기 위한 필수 프로그램입니다.</p><p>shell 프로그래밍으로도 프로그램 작성이 가능하지만 c언어가 더 강력하고 빠릅니다.<br>c언어가 빠르고 강력하지만 라이브러리가 많이 부족한 편입니다.<br>한마디로 배울게 많지 않고 라이브러리에 없으면 만들어야 한다는 겁니다.<br>응용 프로그램을 만들때는 c언어로 만들지 않습니다. 생산성이 떨어지고 불편합니다.<br>c언어를 배우는 이유는 컴퓨터의 구조 프로그램의 동작원리를 알기 위해서입니다.</p><p>이번에 진행하는 c언어는 linux에서 gcc, vim, bash shell을 이용해 진행됩니다. 가장 기본적인 학습법입니다. Terminal이 아닌 윈도우에서 GUI에디터로 프로그래밍을 하면 C언어의 본래 의미를 찾기 힘듭니다. 재미도 없구요. Hello World의 의미도 깨닫지 못합니다. </p><h3 id="실습환경-설정"><a href="#실습환경-설정" class="headerlink" title="실습환경 설정"></a>실습환경 설정</h3><p>(맥과 리눅스 사용자는 Terminal과 vim을 사용할 수 있다는 전제 하에 패스해도 됨.)</p><ol><li>virtualbox에 centos설치 - Centos참조</li><li>gvim 설치및 vimrc 세팅 - vim참조</li><li>vim 기본 사용법 - vim참조</li></ol><h3 id="c언어를-시작하며"><a href="#c언어를-시작하며" class="headerlink" title="c언어를 시작하며"></a>c언어를 시작하며</h3><ol><li>c언어를 배우면서 기본적으로 알아 두면 좋은 내용들을 정리 했습니다.</li><li>c언어는 배울것이 많지 않습니다. 문법 이론만  배운다면 1시간이면 충분합니다. 다만 컴퓨터의 전반에 대해 학습이 필요합니다. 컴퓨터의 구조, 동작원리, 통신, 자료구조, 수학 및 통계, 운영체제, 각종 업무에대한 알고리즘…등</li></ol><h3 id="화면에-글자-출력하기"><a href="#화면에-글자-출력하기" class="headerlink" title="화면에 글자 출력하기"></a>화면에 글자 출력하기</h3><ol><li>putchar()</li><li>puts()</li><li>printf()</li></ol><h3 id="간단한-계산하기"><a href="#간단한-계산하기" class="headerlink" title="간단한 계산하기"></a>간단한 계산하기</h3><ol><li>printf 함수를 이용한 사칙연산</li><li>변수와 상수를 사용.</li><li>자료형, 연산자</li></ol><h3 id="키보드로-입력-받기"><a href="#키보드로-입력-받기" class="headerlink" title="키보드로 입력 받기"></a>키보드로 입력 받기</h3><ol><li>getchar()</li><li>gets()</li><li>fgets()</li><li>scanf()<ul><li>공백을 기본 seperator(분리자)로 사용.</li><li><code>%[^\n]s</code> 공백을 포함해서 입력받음.</li></ul></li><li>getch()<ul><li>한문자 입력 받음. 입력버퍼 사용하지 않음. </li></ul></li><li>getche()<ul><li>한문자 입력 받음. 입력버퍼 사용하지 않음. 입력 내용을 출력하지 않음. (비밀번호)</li></ul></li></ol><h3 id="if문-사용하기"><a href="#if문-사용하기" class="headerlink" title="if문 사용하기"></a>if문 사용하기</h3><ol><li>if</li><li>if~else</li><li>if~else if</li></ol><h3 id="for-문"><a href="#for-문" class="headerlink" title="for 문"></a>for 문</h3><ol><li>for (초깃값;조건;증감값)</li></ol><h3 id="함수-만들기"><a href="#함수-만들기" class="headerlink" title="함수 만들기"></a>함수 만들기</h3><ol><li>함수의 기본형</li></ol><h3 id="배열과-포인터"><a href="#배열과-포인터" class="headerlink" title="배열과 포인터"></a>배열과 포인터</h3><ol><li>배열</li><li>문자열</li><li>포인터</li></ol><h3 id="maloc"><a href="#maloc" class="headerlink" title="maloc"></a>maloc</h3><ol><li>메모리의 영역</li><li>메모리의 할당</li></ol><h3 id="while-문"><a href="#while-문" class="headerlink" title="while 문"></a>while 문</h3><ol><li>while</li><li>do~while</li></ol><h3 id="switch-case-문-사용하기"><a href="#switch-case-문-사용하기" class="headerlink" title="switch case 문 사용하기"></a>switch case 문 사용하기</h3><p>switch () case;</p><h3 id="continue-break-goto-label"><a href="#continue-break-goto-label" class="headerlink" title="continue, break, goto, label"></a>continue, break, goto, label</h3><p>강제 제어 이동, 종료</p><h3 id="인자로-입력-받기"><a href="#인자로-입력-받기" class="headerlink" title="인자로 입력 받기"></a>인자로 입력 받기</h3><ol><li>int main(int argc const char *argv[])</li></ol><h3 id="파일-입출력"><a href="#파일-입출력" class="headerlink" title="파일 입출력"></a>파일 입출력</h3><ol><li>fopen, fclose, free(), fprintf(), fscanf(), fseek(), rewind()</li></ol><h3 id="표준-라이브러리"><a href="#표준-라이브러리" class="headerlink" title="표준 라이브러리"></a>표준 라이브러리</h3><ol><li>표준라이브러리 알아보기</li></ol><h3 id="구조체-사용하기"><a href="#구조체-사용하기" class="headerlink" title="구조체 사용하기"></a>구조체 사용하기</h3><ol><li>여러 자료형이 혼합된 자료형.</li></ol><h3 id="유니온"><a href="#유니온" class="headerlink" title="유니온"></a>유니온</h3><ol><li>구조체와 같음. 패딩바이트를 줄이기 위해 사용함.</li></ol><hr><h2 id="응용실습"><a href="#응용실습" class="headerlink" title="응용실습"></a>응용실습</h2><h3 id="curses-ncurses"><a href="#curses-ncurses" class="headerlink" title="curses, ncurses"></a>curses, ncurses</h3><ol><li>터미널 제어</li></ol><h3 id="databse-연결"><a href="#databse-연결" class="headerlink" title="databse 연결"></a>databse 연결</h3><p>mysql, maria, mssql, db2… -&gt; ANSI SQL</p><ol><li>mysql 설치</li><li>기본 사용법</li><li>oracle, mssql</li></ol><h3 id="주소록-만들기"><a href="#주소록-만들기" class="headerlink" title="주소록 만들기"></a>주소록 만들기</h3><ol><li>주소록 만들기(file을 이용한)</li></ol><h3 id="학사관리-만들기"><a href="#학사관리-만들기" class="headerlink" title="학사관리 만들기"></a>학사관리 만들기</h3><ol><li>학사관리 만들기(data base를 이용한)</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;목차&quot;&gt;&lt;a href=&quot;#목차&quot; class=&quot;headerlink&quot; title=&quot;목차&quot;&gt;&lt;/a&gt;목차&lt;/h3&gt;&lt;h3 id=&quot;c언어-기초&quot;&gt;&lt;a href=&quot;#c언어-기초&quot; class=&quot;headerlink&quot; title=&quot;c언어 기초&quot;&gt;&lt;/a&gt;c
      
    
    </summary>
    
      <category term="C언어기초" scheme="http://korcow.github.io/categories/C%EC%96%B8%EC%96%B4%EA%B8%B0%EC%B4%88/"/>
    
    
      <category term="c" scheme="http://korcow.github.io/tags/c/"/>
    
  </entry>
  
</feed>
